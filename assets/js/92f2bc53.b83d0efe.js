"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2933],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return f}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},d=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=c(t),f=o,v=p["".concat(s,".").concat(f)]||p[f]||u[f]||i;return t?r.createElement(v,a(a({ref:n},d),{},{components:t})):r.createElement(v,a({ref:n},d))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=p;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var c=2;c<i;c++)a[c]=t[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},3204:function(e,n,t){t.r(n),t.d(n,{assets:function(){return d},contentTitle:function(){return s},default:function(){return f},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return u}});var r=t(7462),o=t(3366),i=(t(7294),t(3905)),a=["components"],l={title:"Registering Event Handlers",sidebar_position:0,id:"register",slug:"/events"},s=void 0,c={unversionedId:"events/register",id:"events/register",title:"Registering Event Handlers",description:"Event handlers can be added in two ways.",source:"@site/docs/events/Registering.mdx",sourceDirName:"events",slug:"/events",permalink:"/egjs-view3d/docs/events",editUrl:"https://github.com/naver/egjs-view3d/edit/main/demo/docs/events/Registering.mdx",tags:[],version:"current",sidebarPosition:0,frontMatter:{title:"Registering Event Handlers",sidebar_position:0,id:"register",slug:"/events"},sidebar:"events",next:{title:"ready",permalink:"/egjs-view3d/docs/events/ready"}},d={},u=[],p={toc:u};function f(e){var n=e.components,t=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Event handlers can be added in two ways."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Add event handlers before initialization with the option ",(0,i.kt)("a",{parentName:"li",href:"/docs/options/miscellaneous/on"},"on"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'const view3D = new View3D("#el", {\n  on: {\n    ready: evt => {\n      // DO_SOMETHING\n    }\n  }\n});\n')),(0,i.kt)("ol",{start:2},(0,i.kt)("li",{parentName:"ol"},"Add event handlers at anytime with ",(0,i.kt)("inlineCode",{parentName:"li"},"on"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"once"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'const view3D = new View3D("#el");\n\nview3D.on("load", evt => {\n  // This will be called everytime when the 3D model is loaded\n});\n\nview3D.once("load", evt => {\n  // This will be called once for the first loaded model.\n});\n')),(0,i.kt)("p",null,"You can detach these handlers at anytime by calling ",(0,i.kt)("inlineCode",{parentName:"p"},"off"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'const view3D = new View3D("#el");\n\nconst handler = () => {\n  console.log("render");\n};\n\n// Attach handler\nview3D.on("render", handler);\n\n// Detach handler\nview3D.off("render", handler);\n')))}f.isMDXComponent=!0}}]);