"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1980],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return f}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),l=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=l(e.components);return r.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(t),f=o,v=d["".concat(c,".").concat(f)]||d[f]||p[f]||i;return t?r.createElement(v,a(a({ref:n},u),{},{components:t})):r.createElement(v,a({ref:n},u))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=d;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var l=2;l<i;l++)a[l]=t[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},7354:function(e,n,t){t.r(n),t.d(n,{assets:function(){return u},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return p}});var r=t(7462),o=t(3366),i=(t(7294),t(3905)),a=["components"],s={sidebar_position:6},c=void 0,l={unversionedId:"tutorials/Handling Events",id:"tutorials/Handling Events",title:"Handling Events",description:"You can handle the events that View3D triggers with 3 methods: on, once, off",source:"@site/docs/tutorials/Handling Events.mdx",sourceDirName:"tutorials",slug:"/tutorials/Handling Events",permalink:"/egjs-view3d/docs/tutorials/Handling Events",editUrl:"https://github.com/naver/egjs-view3d/edit/main/demo/docs/tutorials/Handling Events.mdx",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"docs",previous:{title:"Reset Camera",permalink:"/egjs-view3d/docs/tutorials/Reset Camera"},next:{title:"Handling Errors",permalink:"/egjs-view3d/docs/handling-errors"}},u={},p=[],d={toc:p};function f(e){var n=e.components,t=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"You can handle the events that View3D triggers with 3 methods: ",(0,i.kt)("inlineCode",{parentName:"p"},"on"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"once"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"off")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'import View3D, { EVENTS } from "@egjs/view3d";\n\nconst view3D = new View3d(...);\n\n// EVENTS.MODEL_CHANGE = "modelChange"\nview3D.on(EVENTS.MODEL_CHANGE, evt => {\n  // This callback is called everytime when "modelChange" event triggered.\n  evt.target === view3D // true\n  evt.type === "modelChange" // true\n});\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'import View3D, { EVENTS, RenderEvent } from "@egjs/view3d";\n\n// For Typescript users: You can specify event types like this\nconst onRender = (evt: RenderEvent) => {\n  // DO_SOMETHING\n};\n\nview3D.on(EVENTS.RENDER, onRender);\n\n// This callback is called only once\nview3D.once(EVENTS.LOAD, evt => {\n  // Remove attached event handler\n  view3D.off(EVENTS.RENDER, onRender);\n});\n')),(0,i.kt)("p",null,"See all available events in the ",(0,i.kt)("a",{parentName:"p",href:"/docs/events/ready"},"Events")," page."))}f.isMDXComponent=!0}}]);