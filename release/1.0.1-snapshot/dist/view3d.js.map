{"version":3,"file":"view3d.js","sources":["../src/core/EventEmitter.ts","../src/core/Renderer.ts","../src/consts/internal.ts","../src/View3DError.ts","../src/consts/error.ts","../src/utils.ts","../src/core/Scene.ts","../src/core/camera/Controller.ts","../src/core/camera/Pose.ts","../src/consts/easing.ts","../src/consts/default.ts","../src/controls/Motion.ts","../src/controls/AnimationControl.ts","../src/core/camera/Camera.ts","../src/core/ModelAnimator.ts","../src/core/XRManager.ts","../src/consts/event.ts","../src/View3D.ts","../src/core/Model.ts","../src/core/index.ts","../src/controls/AutoControl.ts","../src/consts/css.ts","../src/controls/RotateControl.ts","../src/controls/TranslateControl.ts","../src/controls/DistanceControl.ts","../src/controls/OrbitControl.ts","../src/controls/index.ts","../src/environments/AutoDirectionalLight.ts","../src/environments/ShadowPlane.ts","../src/environments/index.ts","../src/loaders/GLTFLoader.ts","../src/loaders/TextureLoader.ts","../src/loaders/index.ts","../src/consts/xr.ts","../src/xr/features/DOMOverlay.ts","../src/xr/WebARSession.ts","../src/xr/features/HitTest.ts","../src/consts/browser.ts","../src/core/Animation.ts","../src/controls/ar/ui/RotationIndicator.ts","../src/controls/ar/common/ARSwirlControl.ts","../src/controls/ar/floor/ARFloorTranslateControl.ts","../src/controls/ar/ui/ScaleUI.ts","../src/controls/ar/common/ARScaleControl.ts","../src/controls/ar/ui/FloorIndicator.ts","../src/consts/touch.ts","../src/controls/ar/common/DeadzoneChecker.ts","../src/controls/ar/floor/ARFloorControl.ts","../src/xr/FloorARSession.ts","../src/controls/ar/ui/ArrowIndicator.ts","../src/controls/ar/wall/ARWallTranslateControl.ts","../src/controls/ar/wall/ARWallControl.ts","../src/xr/WallARSession.ts","../src/controls/ar/common/ARSwipeControl.ts","../src/controls/ar/hover/ARHoverRotateControl.ts","../src/controls/ar/hover/ARHoverTranslateControl.ts","../src/controls/ar/hover/ARHoverControl.ts","../src/xr/HoverARSession.ts","../src/xr/SceneViewerSession.ts","../src/xr/QuickLookSession.ts","../src/xr/index.ts","../src/extra/TextureModel.ts","../src/extra/index.ts","../src/consts/external.ts","../src/index.umd.ts"],"sourcesContent":["/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nimport { AnyFunction } from \"~/types/external\";\n\ntype NoArguments = undefined | null | void | never;\ntype EventMap = Record<string, any>;\ntype EventKey<T extends EventMap> = string & keyof T;\ntype EventCallback<T extends EventMap, K extends EventKey<T>>\n  = T[K] extends NoArguments\n    ? () => any\n    : T[K] extends AnyFunction\n      ? T[K]\n      : (event: T[K]) => any;\n\nclass EventEmitter<T extends EventMap> {\n  private _listenerMap: Map<EventKey<T>, Array<EventCallback<T, EventKey<T>>>>;\n\n  constructor() {\n    this._listenerMap = new Map();\n  }\n\n  public on<K extends EventKey<T>>(eventName: K, callback: EventCallback<T, K>): this {\n    const listenerMap = this._listenerMap;\n    const listeners = listenerMap.get(eventName);\n\n    if (listeners && listeners.indexOf(callback) < 0) {\n      listeners.push(callback);\n    } else {\n      listenerMap.set(eventName, [callback]);\n    }\n    return this;\n  }\n\n  public off<K extends EventKey<T>>(eventName: K, callback?: EventCallback<T, K>): this {\n    const listenerMap = this._listenerMap;\n    const listeners = listenerMap.get(eventName);\n\n    if (!callback) {\n      listenerMap.delete(eventName);\n    } else if (listeners) {\n      const callbackIdx = listeners.indexOf(callback);\n      if (callbackIdx >= 0) {\n        listeners.splice(callbackIdx, 1);\n      }\n    }\n\n    return this;\n  }\n\n  public emit<K extends EventKey<T>>(eventName: K, ...event: T[K] extends NoArguments ? void[] : T[K] extends AnyFunction ? Parameters<T[K]> : [T[K]]): this {\n    const listeners = this._listenerMap.get(eventName);\n\n    if (listeners) {\n      listeners.forEach(callback => {\n        callback(...event);\n      });\n    }\n\n    return this;\n  }\n}\n\nexport default EventEmitter;\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nimport * as THREE from \"three\";\nimport Scene from \"./Scene\";\nimport Camera from \"./camera/Camera\";\n\n/**\n * Renderer that renders View3D's Scene\n * @category Core\n */\nclass Renderer {\n  private _renderer: THREE.WebGLRenderer;\n  private _canvas: HTMLCanvasElement;\n  private _clock: THREE.Clock;\n\n  /**\n   * {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement HTMLCanvasElement} given when creating View3D instance\n   * @type HTMLCanvasElement\n   * @readonly\n   */\n  public get canvas() { return this._canvas; }\n  /**\n   * Current {@link https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext WebGLRenderingContext}\n   * @type WebGLRenderingContext\n   * @readonly\n   */\n  public get context() { return this._renderer.context; }\n  /**\n   * The width and height of the renderer's output canvas\n   * @see https://threejs.org/docs/#api/en/math/Vector2\n   * @type THREE.Vector2\n   */\n  public get size() { return this._renderer.getSize(new THREE.Vector2()); }\n  /**\n   * Three.js {@link https://threejs.org/docs/#api/en/renderers/WebGLRenderer WebGLRenderer} instance\n   * @type THREE.WebGLRenderer\n   * @readonly\n   */\n  public get threeRenderer() { return this._renderer; }\n\n  public set size(val: THREE.Vector2) {\n    this._renderer.setSize(val.x, val.y, false);\n  }\n\n  /**\n   * Create new Renderer instance\n   * @param canvas \\<canvas\\> element to render 3d model\n   */\n  constructor(canvas: HTMLCanvasElement) {\n    this._canvas = canvas;\n\n    this._renderer = new THREE.WebGLRenderer({\n      canvas: this._canvas,\n      alpha: true,\n      antialias: true,\n      preserveDrawingBuffer: true,\n    });\n\n    this._renderer.xr.enabled = true;\n\n    this._renderer.outputEncoding = THREE.sRGBEncoding;\n\n    this._clock = new THREE.Clock(false);\n    this.enableShadow();\n  }\n\n  /**\n   * Resize the renderer based on current canvas width / height\n   * @returns {void} Nothing\n   */\n  public resize(): void {\n    const renderer = this._renderer;\n    const canvas = this._canvas;\n\n    if (renderer.xr.isPresenting) return;\n\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setSize(canvas.offsetWidth, canvas.offsetHeight, false);\n  }\n\n  /**\n   * Render a scene using a camera.\n   * @see https://threejs.org/docs/#api/en/renderers/WebGLRenderer.render\n   * @param scene {@link Scene} to render\n   * @param camera {@link Camera} to render\n   */\n  public render(scene: Scene, camera: Camera): void {\n    this._renderer.render(scene.root, camera.threeCamera);\n  }\n\n  public setAnimationLoop(callback: (delta: number, frame?: any) => void): void {\n    this._clock.start();\n    this._renderer.setAnimationLoop((timestamp: number, frame: any) => {\n      const delta = this._clock.getDelta();\n      callback(delta, frame);\n    });\n  }\n\n  public stopAnimationLoop(): void {\n    this._clock.stop();\n    // See https://threejs.org/docs/#api/en/renderers/WebGLRenderer.setAnimationLoop\n    this._renderer.setAnimationLoop(null);\n  }\n\n  /**\n   * Enable shadow map\n   */\n  public enableShadow() {\n    const threeRenderer = this._renderer;\n\n    threeRenderer.shadowMap.enabled = true;\n    threeRenderer.shadowMap.type = THREE.PCFSoftShadowMap;\n  }\n\n  /**\n   * Disable shadow map\n   */\n  public disableShadow() {\n    const threeRenderer = this._renderer;\n\n    threeRenderer.shadowMap.enabled = false;\n  }\n}\n\nexport default Renderer;\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\n// Constants that used internally\n\n// Texture map names that used in THREE#MeshStandardMaterial\nexport const STANDARD_MAPS = [\n  \"alphaMap\",\n  \"aoMap\",\n  \"bumpMap\",\n  \"displacementMap\",\n  \"emissiveMap\",\n  \"envMap\",\n  \"lightMap\",\n  \"map\",\n  \"metalnessMap\",\n  \"normalMap\",\n  \"roughnessMap\",\n];\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nclass View3DError extends Error {\n  constructor(\n    public message: string,\n    public code: number) {\n    super(message);\n    Object.setPrototypeOf(this, View3DError.prototype);\n    this.name = \"View3DError\";\n  }\n}\n\nexport default View3DError;\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\n/**\n * Error codes of {@link View3DError}\n * @name ERROR_CODES\n * @memberof Constants\n * @type object\n * @property {number} WRONG_TYPE 0\n * @property {number} ELEMENT_NOT_FOUND 1\n * @property {number} CANVAS_NOT_FOUND 2\n * @property {number} WEBGL_NOT_SUPPORTED 3\n * @property {number} ADD_CONTROL_FIRST 4\n * @property {number} PROVIDE_WIDTH_OR_HEIGHT 5\n */\nexport const CODES: {\n  [key in keyof typeof MESSAGES]: number;\n} = {\n  WRONG_TYPE: 0,\n  ELEMENT_NOT_FOUND: 1,\n  ELEMENT_NOT_CANVAS: 2,\n  WEBGL_NOT_SUPPORTED: 3,\n  ADD_CONTROL_FIRST: 4,\n  PROVIDE_WIDTH_OR_HEIGHT: 5,\n};\n\nexport const MESSAGES = {\n  WRONG_TYPE: (val: any, types: string[]) => `${typeof val} is not a ${types.map(type => `\"${type}\"`).join(\" or \")}.`,\n  ELEMENT_NOT_FOUND: (query: string) => `Element with selector \"${query}\" not found.`,\n  ELEMENT_NOT_CANVAS: (el: HTMLElement) => `Given element <${el.tagName}> is not a canvas.`,\n  WEBGL_NOT_SUPPORTED: \"WebGL is not supported on this browser.\",\n  ADD_CONTROL_FIRST: \"Control is enabled before setting a target element.\",\n  PROVIDE_WIDTH_OR_HEIGHT: \"Either width or height should be given.\",\n};\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nimport * as THREE from \"three\";\nimport View3DError from \"./View3DError\";\nimport * as ERROR from \"~/consts/error\";\n\nexport function getElement(el: HTMLElement | string | null, parent?: HTMLElement): HTMLElement | null {\n  let targetEl: HTMLElement | null = null;\n\n  if (typeof el === \"string\") {\n    const parentEl = parent ? parent : document;\n    const queryResult = parentEl.querySelector(el);\n    if (!queryResult) {\n      throw new View3DError(ERROR.MESSAGES.ELEMENT_NOT_FOUND(el), ERROR.CODES.ELEMENT_NOT_FOUND);\n    }\n    targetEl = queryResult as HTMLElement;\n  } else if (el && el.nodeType === Node.ELEMENT_NODE) {\n    targetEl = el;\n  }\n\n  return targetEl;\n}\n\nexport function getCanvas(el: HTMLElement | string): HTMLCanvasElement {\n  const targetEl = getElement(el);\n\n  if (!targetEl) {\n    throw new View3DError(ERROR.MESSAGES.WRONG_TYPE(el, [\"HTMLElement\", \"string\"]), ERROR.CODES.WRONG_TYPE);\n  }\n\n  if (!/^canvas$/i.test(targetEl.tagName)) {\n    throw new View3DError(ERROR.MESSAGES.ELEMENT_NOT_CANVAS(targetEl), ERROR.CODES.ELEMENT_NOT_CANVAS);\n  }\n\n  return targetEl as HTMLCanvasElement;\n}\n\nexport function range(end: number): number[] {\n  return Array.apply(0, Array(end)).map((undef, idx) => idx);\n}\n\nexport function toRadian(x: number) {\n  return x * Math.PI / 180;\n}\n\nexport function clamp(x: number, min: number, max: number) {\n  return Math.max(Math.min(x, max), min);\n}\n\n// Linear interpolation between a and b\nexport function mix(a: number, b: number, t: number) {\n  return a * (1 - t) + b * t;\n}\n\nexport function circulate(val: number, min: number, max: number) {\n  const size = max - min;\n\n  if (val < min) {\n    const offset = (min - val) % size;\n    val = max - offset;\n  } else if (val > max) {\n    const offset = (val - max) % size;\n    val = min + offset;\n  }\n\n  return val;\n}\n\nexport function merge(target: object, ...srcs: object[]): object {\n  srcs.forEach(source => {\n    Object.keys(source).forEach(key => {\n      const value = source[key];\n      if (Array.isArray(target[key]) && Array.isArray(value)) {\n        target[key] = [...target[key], ...value];\n      } else {\n        target[key] = value;\n      }\n    });\n  });\n\n  return target;\n}\n\nexport function findIndex<T>(target: T, list: T[]) {\n  let index = -1;\n  for (const itemIndex of range(list.length)) {\n    if (list[itemIndex] === target) {\n      index = itemIndex;\n      break;\n    }\n  }\n  return index;\n}\n\nexport function getBoxPoints(box: THREE.Box3) {\n  return [\n    box.min.clone(),\n    new THREE.Vector3(box.min.x, box.min.y, box.min.z),\n    new THREE.Vector3(box.min.x, box.max.y, box.min.z),\n    new THREE.Vector3(box.min.x, box.max.y, box.max.z),\n    new THREE.Vector3(box.max.x, box.min.y, box.min.z),\n    new THREE.Vector3(box.max.x, box.min.y, box.max.z),\n    new THREE.Vector3(box.max.x, box.max.y, box.min.z),\n    box.max.clone(),\n  ];\n}\n\nexport function toPowerOfTwo(val: number) {\n  let result = 1;\n\n  while (result < val) {\n    result *= 2;\n  }\n\n  return result;\n}\n\nexport function getPrimaryAxisIndex(basis: THREE.Vector3[], viewDir: THREE.Vector3) {\n  let primaryIdx = 0;\n  let maxDot = 0;\n\n  basis.forEach((axes, axesIdx) => {\n    const dotProduct = Math.abs(viewDir.dot(axes));\n\n    if (dotProduct > maxDot) {\n      primaryIdx = axesIdx;\n      maxDot = dotProduct;\n    }\n  });\n\n  return primaryIdx;\n}\n\n// In radian\nexport function getRotationAngle(center: THREE.Vector2, v1: THREE.Vector2, v2: THREE.Vector2) {\n  const centerToV1 = new THREE.Vector2().subVectors(v1, center).normalize();\n  const centerToV2 = new THREE.Vector2().subVectors(v2, center).normalize();\n\n  // Get the rotation angle with the model's NDC coordinates as the center.\n  const deg = centerToV2.angle() - centerToV1.angle();\n  const compDeg = -Math.sign(deg) * (2 * Math.PI - Math.abs(deg));\n  // Take the smaller deg\n  const rotationAngle = Math.abs(deg) < Math.abs(compDeg) ? deg : compDeg;\n\n  return rotationAngle;\n}\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nimport * as THREE from \"three\";\nimport Model from \"./Model\";\nimport Environment from \"~/environments/Environment\";\nimport { STANDARD_MAPS } from \"~/consts/internal\";\nimport { findIndex } from \"~/utils\";\n\n/**\n * Scene that View3D will render.\n * All model datas including Mesh, Lights, etc. will be included on this\n * @category Core\n */\nclass Scene {\n  private _root: THREE.Scene;\n  private _userObjects: THREE.Group;\n  private _envObjects: THREE.Group;\n  private _envs: Environment[];\n\n  /**\n   * Root {@link https://threejs.org/docs/#api/en/scenes/Scene THREE.Scene} object\n   */\n  public get root() { return this._root; }\n\n  /**\n   * {@link Environment}s inside scene\n   */\n  public get environments() { return this._envs; }\n\n  /**\n   * Return the visibility of the root scene\n   */\n  public get visible() { return this._root.visible; }\n\n  /**\n   * Create new Scene instance\n   */\n  constructor() {\n    this._root = new THREE.Scene();\n    this._userObjects = new THREE.Group();\n    this._envObjects = new THREE.Group();\n    this._envs = [];\n\n    const root = this._root;\n    const userObjects = this._userObjects;\n    const envObjects = this._envObjects;\n\n    userObjects.name = \"userObjects\";\n    envObjects.name = \"envObjects\";\n\n    root.add(userObjects);\n    root.add(envObjects);\n  }\n\n  /**\n   * Update scene to fit the given model\n   * @param model model to fit\n   * @param override options for specific environments\n   */\n  public update(model: Model, override?: any): void {\n    this._envs.forEach(env => env.fit(model, override));\n  }\n\n  /**\n   * Reset scene to initial state\n   * @returns {void} Nothing\n   */\n  public reset(): void {\n    this.resetModel();\n    this.resetEnv();\n  }\n\n  /**\n   * Fully remove all objects that added by calling {@link Scene#add add()}\n   * @returns {void} Nothing\n   */\n  public resetModel(): void {\n    this._removeChildsOf(this._userObjects);\n  }\n\n  /**\n   * Remove all objects that added by calling {@link Scene#addEnv addEnv()}\n   * This will also reset scene background & envmap\n   * @returns {void} Nothing\n   */\n  public resetEnv(): void {\n    this._removeChildsOf(this._envObjects);\n    this._envs = [];\n\n    this._root.background = null;\n    this._root.environment = null;\n  }\n\n  /**\n   * Add new Three.js {@link https://threejs.org/docs/#api/en/core/Object3D Object3D} into the scene\n   * @param object {@link https://threejs.org/docs/#api/en/core/Object3D THREE.Object3D}s to add\n   * @returns {void} Nothing\n   */\n  public add(...object: THREE.Object3D[]): void {\n    this._userObjects.add(...object);\n  }\n\n  /**\n   * Add new {@link Environment} or Three.js {@link https://threejs.org/docs/#api/en/core/Object3D Object3D}s to the scene, which won't be removed after displaying another 3D model\n   * @param envs {@link Environment} | {@link https://threejs.org/docs/#api/en/core/Object3D THREE.Object3D}s to add\n   * @returns {void} Nothing\n   */\n  public addEnv(...envs: Array<Environment | THREE.Object3D>): void {\n    envs.forEach(env => {\n      if ((env as THREE.Object3D).isObject3D) {\n        this._envObjects.add(env as THREE.Object3D);\n      } else {\n        this._envs.push(env as Environment);\n        this._envObjects.add(...(env as Environment).objects);\n      }\n    });\n  }\n\n  /**\n   * Remove Three.js {@link https://threejs.org/docs/#api/en/core/Object3D Object3D} into the scene\n   * @param object {@link https://threejs.org/docs/#api/en/core/Object3D THREE.Object3D}s to add\n   * @returns {void} Nothing\n   */\n  public remove(...object: THREE.Object3D[]): void {\n    this._userObjects.remove(...object);\n  }\n\n  /**\n   * Remove {@link Environment} or Three.js {@link https://threejs.org/docs/#api/en/core/Object3D Object3D}s to the scene, which won't be removed after displaying another 3D model\n   * @param envs {@link Environment} | {@link https://threejs.org/docs/#api/en/core/Object3D THREE.Object3D}s to add\n   * @returns {void} Nothing\n   */\n  public removeEnv(...envs: Array<Environment | THREE.Object3D>): void {\n    envs.forEach(env => {\n      if ((env as THREE.Object3D).isObject3D) {\n        this._envObjects.remove(env as THREE.Object3D);\n      } else {\n        const envIndex = findIndex(env as Environment, this._envs);\n        if (envIndex > -1) {\n          this._envs.splice(envIndex, 1);\n        }\n        this._envObjects.remove(...(env as Environment).objects);\n      }\n    });\n  }\n\n  /**\n   * Set background of the scene.\n   * @see {@link https://threejs.org/docs/#api/en/scenes/Scene.background THREE.Scene.background}\n   * @param background A texture to set as background\n   * @returns {void} Nothing\n   */\n  public setBackground(background: THREE.Color | THREE.Texture | THREE.CubeTexture | THREE.WebGLCubeRenderTarget | null): void {\n    // Three.js's type definition does not include WebGLCubeRenderTarget, but it works and defined on their document\n    // See https://threejs.org/docs/#api/en/scenes/Scene.background\n    this._root.background = background as THREE.Texture | null;\n  }\n\n  /**\n   * Set scene's environment map that affects all physical materials in the scene\n   * @see {@link https://threejs.org/docs/#api/en/scenes/Scene.environment THREE.Scene.environment}\n   * @param envmap A texture to set as environment map\n   * @returns {void} Nothing\n   */\n  public setEnvMap(envmap: THREE.Texture | THREE.CubeTexture | THREE.WebGLCubeRenderTarget | null): void {\n    // Next line written to silence Three.js's warning\n    const environment = (envmap as THREE.WebGLCubeRenderTarget).texture ? (envmap as THREE.WebGLCubeRenderTarget).texture : envmap;\n    this._root.environment = environment as THREE.Texture | null;\n  }\n\n  /**\n   * Make this scene visible\n   * @returns {void} Nothing\n   */\n  public show(): void {\n    this._root.visible = true;\n  }\n\n  /**\n   * Make this scene invisible\n   * @returns {void} Nothing\n   */\n  public hide(): void {\n    this._root.visible = false;\n  }\n\n  private _removeChildsOf(obj: THREE.Object3D) {\n    obj.traverse(child => {\n      if ((child as any).isMesh) {\n        const mesh = child as THREE.Mesh;\n\n        // Release geometry & material memory\n        mesh.geometry.dispose();\n        const materials = Array.isArray(mesh.material) ? mesh.material : [mesh.material];\n\n        materials.forEach(mat => {\n          STANDARD_MAPS.forEach(map => {\n            if (mat[map]) {\n              mat[map].dispose();\n            }\n          });\n        });\n      }\n    });\n\n    while (obj.children.length > 0) {\n      obj.remove(obj.children[0]);\n    }\n  }\n}\n\nexport default Scene;\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nimport * as THREE from \"three\";\nimport Camera from \"./Camera\";\nimport CameraControl from \"~/controls/CameraControl\";\nimport { findIndex } from \"~/utils\";\n\n/**\n * Controller that controls camera of the View3D\n * @category Core\n */\nclass Controller {\n  private _canvas: HTMLCanvasElement;\n  private _camera: Camera;\n  private _controls: CameraControl[] = [];\n\n  /**\n   * Create new Controller instance\n   */\n  constructor(canvas: HTMLCanvasElement, camera: Camera) {\n    this._canvas = canvas;\n    this._camera = camera;\n  }\n\n  /**\n   * Remove all attached controls, and removes all event listeners attached by that controls.\n   * @returns {void} Nothing\n   */\n  public clear(): void {\n    this._controls.forEach(control => control.destroy());\n    this._controls = [];\n  }\n\n  /**\n   * Add a new control\n   * @param control {@link Control Control} instance to add\n   * @see Adding Controls\n   * @returns {void} Nothing\n   */\n  public add(control: CameraControl): void {\n    const canvas = this._canvas;\n    if (!control.element) {\n      // Set canvas as default element\n      control.setElement(canvas);\n    }\n    control.sync(this._camera);\n    control.enable();\n    this._controls.push(control);\n  }\n\n  /**\n   * Remove control and disable it\n   * @param control {@link Control Control} instance to remove\n   * @returns removed control or null if it doesn't exists\n   */\n  public remove(control: CameraControl): CameraControl | null {\n    const controls = this._controls;\n    const controlIndex = findIndex(control, controls);\n    if (controlIndex < 0) return null;\n\n    const removedControl = controls.splice(controlIndex, 1)[0];\n    removedControl.disable();\n\n    return removedControl;\n  }\n\n  /**\n   * Enable all controls attached\n   * @returns {void} Nothing\n   */\n  public enableAll(): void {\n    this._controls.forEach(control => control.enable());\n    this.syncToCamera();\n  }\n\n  /**\n   * Disable all controls attached\n   * @returns {void} Nothing\n   */\n  public disableAll(): void {\n    this._controls.forEach(control => control.disable());\n  }\n\n  /**\n   * Update all controls attached to given screen size.\n   * @param size Size of the screen. Noramlly size of the canvas is used.\n   * @returns {void} Nothing\n   */\n  public resize(size: THREE.Vector2): void {\n    this._controls.forEach(control => control.resize(size));\n  }\n\n  /**\n   * Synchronize all controls attached to current camera position.\n   * @returns {void} Nothing\n   */\n  public syncToCamera(): void {\n    this._controls.forEach(control => control.sync(this._camera));\n  }\n\n  /**\n   * Update all controls attached to this controller & update camera position based on it.\n   * @param delta number of seconds to update controls\n   * @returns {void} Nothing\n   */\n  public update(delta: number): void {\n    const deltaMiliSec = delta * 1000;\n    const camera = this._camera;\n\n    this._controls.forEach(control => {\n      control.update(camera, deltaMiliSec);\n    });\n\n    camera.updatePosition();\n  }\n}\n\nexport default Controller;\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nimport * as THREE from \"three\";\n\n/**\n * Data class of camera's pose\n */\nclass Pose {\n  /**\n   * Create new instance of pose\n   * @param yaw yaw\n   * @param pitch pitch\n   * @param distance distance\n   * @param pivot pivot\n   * @see https://threejs.org/docs/#api/en/math/Vector3\n   * @example\n   * import { THREE, Pose } from \"@egjs/view3d\";\n   *\n   * const pose = new Pose(180, 45, 150, new THREE.Vector3(5, -1, 3));\n   */\n  constructor(\n    public yaw: number,\n    public pitch: number,\n    public distance: number,\n    public pivot: THREE.Vector3 = new THREE.Vector3(0, 0, 0),\n  ) {}\n\n  /**\n   * Clone this pose\n   * @returns Cloned pose\n   */\n  public clone(): Pose {\n    return new Pose(\n      this.yaw, this.pitch, this.distance,\n      this.pivot.clone(),\n    );\n  }\n}\n\nexport default Pose;\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\n/**\n * Collection of easing functions\n * @namespace EASING\n * @example\n * import View3D, { RotateControl, EASING } from \"@egjs/view3d\";\n *\n * new RotateControl({\n *  easing: EASING.EASE_OUT_CUBIC,\n * });\n */\n\n/**\n * @memberof EASING\n * @name SINE_WAVE\n */\nexport const SINE_WAVE = (x: number) => Math.sin(x * Math.PI * 2);\n/**\n * @memberof EASING\n * @name EASE_OUT_CUBIC\n */\nexport const EASE_OUT_CUBIC = (x: number) => 1 - Math.pow(1 - x, 3);\n/**\n * @memberof EASING\n * @name EASE_OUT_BOUNCE\n */\nexport const EASE_OUT_BOUNCE = (x: number): number => {\n  const n1 = 7.5625;\n  const d1 = 2.75;\n\n  if (x < 1 / d1) {\n      return n1 * x * x;\n  } else if (x < 2 / d1) {\n      return n1 * (x -= 1.5 / d1) * x + 0.75;\n  } else if (x < 2.5 / d1) {\n      return n1 * (x -= 2.25 / d1) * x + 0.9375;\n  } else {\n      return n1 * (x -= 2.625 / d1) * x + 0.984375;\n  }\n};\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nimport * as THREE from \"three\";\nimport Pose from \"~/core/camera/Pose\";\nimport { EASE_OUT_CUBIC } from \"./easing\";\nimport { Range } from \"~/types/internal\";\n\nexport const MODEL_SIZE = 80;\n\n// Animation related\nexport const EASING = EASE_OUT_CUBIC;\nexport const ANIMATION_DURATION = 500;\nexport const ANIMATION_LOOP = false;\nexport const ANIMATION_RANGE: Readonly<Range> = {\n  min: 0, max: 1,\n};\n\n// Camera related\nexport const CAMERA_POSE: Readonly<Pose> = new Pose(0, 0, 100, new THREE.Vector3(0, 0, 0));\nexport const INFINITE_RANGE: Readonly<Range> = {\n  min: -Infinity, max: Infinity,\n};\nexport const PITCH_RANGE: Readonly<Range> = {\n  min: -89.9, max: 89.9,\n};\nexport const DISTANCE_RANGE: Readonly<Range> = {\n  min: 0, max: 500,\n};\nexport const MINIMUM_DISTANCE = 1;\nexport const MAXIMUM_DISTANCE = 500;\nexport const NULL_ELEMENT: HTMLElement | string | null = null;\nexport const DRACO_DECODER_URL = \"https://www.gstatic.com/draco/v1/decoders/\";\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nimport { clamp, mix, circulate } from \"~/utils\";\nimport { Range } from \"~/types/internal\";\nimport * as DEFAULT from \"~/consts/default\";\n\nclass Motion {\n  // Options\n  private _duration: number;\n  private _loop: boolean;\n  private _range: Range;\n  private _easing: (x: number) => number;\n\n  // Internal states\n  private _progress: number;\n  private _val: number;\n  private _start: number;\n  private _end: number;\n  private _activated: boolean;\n\n  public get val() { return this._val; }\n  public get start() { return this._start; }\n  public get end() { return this._end; }\n  public get progress() { return this._progress; }\n  public get duration() { return this._duration; }\n  public get loop() { return this._loop; }\n  public get range() { return this._range; }\n  public get easing() { return this._easing; }\n\n  public set duration(val: number) { this._duration = val; }\n  public set loop(val: boolean) { this._loop = val; }\n  public set range(val: Range) { this._range = val; }\n  public set easing(val: (x: number) => number) { this._easing = val; }\n\n  constructor({\n    duration = DEFAULT.ANIMATION_DURATION,\n    loop = DEFAULT.ANIMATION_LOOP,\n    range = DEFAULT.ANIMATION_RANGE,\n    easing = DEFAULT.EASING,\n  } = {}) {\n    this._duration = duration;\n    this._loop = loop;\n    this._range = range;\n    this._easing = easing;\n    this._activated = false;\n    this.reset(0);\n  }\n\n  /**\n   * Update motion and progress it by given deltaTime\n   * @param deltaTime number of milisec to update motion\n   * @returns Difference(delta) of the value from the last update.\n   */\n  public update(deltaTime: number): number {\n    if (!this._activated) return 0;\n\n    const start = this._start;\n    const end = this._end;\n    const duration = this._duration;\n    const prev = this._val;\n    const loop = this._loop;\n\n    const nextProgress = this._progress + deltaTime / duration;\n\n    this._progress = loop\n     ? circulate(nextProgress, 0, 1)\n     : clamp(nextProgress, 0, 1);\n\n    const easedProgress = this._easing(this._progress);\n    this._val = mix(start, end, easedProgress);\n\n    if (!loop && this._progress >= 1) {\n      this._activated = false;\n    }\n\n    return this._val - prev;\n  }\n\n  public reset(defaultVal: number): void {\n    const range = this._range;\n    const val = clamp(defaultVal, range.min, range.max);\n    this._start = val;\n    this._end = val;\n    this._val = val;\n    this._progress = 0;\n    this._activated = false;\n  }\n\n  public setEndDelta(delta: number): void {\n    const range = this._range;\n\n    this._start = this._val;\n    this._end = clamp(this._end + delta, range.min, range.max);\n    this._progress = 0;\n    this._activated = true;\n  }\n}\n\nexport default Motion;\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nimport * as THREE from \"three\";\nimport CameraControl from \"./CameraControl\";\nimport Motion from \"./Motion\";\nimport Camera from \"~/core/camera/Camera\";\nimport Pose from \"~/core/camera/Pose\";\nimport * as DEFAULT from \"~/consts/default\";\nimport { AnyFunction } from \"~/types/external\";\nimport { mix, circulate } from \"~/utils\";\n\n/**\n * Control that animates model without user input\n * @category Controls\n */\nclass AnimationControl implements CameraControl {\n  // Options\n  private _from: Pose;\n  private _to: Pose;\n\n  // Internal values\n  private _motion: Motion;\n  private _enabled: boolean = false;\n  private _finishCallbacks: AnyFunction[] = [];\n\n  public get element() { return null; }\n  /**\n   * Whether this control is enabled or not\n   * @readonly\n   */\n  public get enabled() { return this._enabled; }\n  /**\n   * Duration of the animation\n   */\n  public get duration() { return this._motion.duration; }\n  /**\n   * Easing function of the animation\n   */\n  public get easing() { return this._motion.easing; }\n\n  public set duration(val: number) { this._motion.duration = val; }\n  public set easing(val: (x: number) => number) { this._motion.easing = val; }\n\n  /**\n   * Create new instance of AnimationControl\n   * @param from Start pose\n   * @param to End pose\n   * @param {object} options Options\n   * @param {number} [options.duration=500] Animation duration\n   * @param {function} [options.easing=(x: number) => 1 - Math.pow(1 - x, 3)] Animation easing function\n   */\n  constructor(from: Pose, to: Pose, {\n    duration = DEFAULT.ANIMATION_DURATION,\n    easing = DEFAULT.EASING,\n  } = {}) {\n    from = from.clone();\n    to = to.clone();\n\n    from.yaw = circulate(from.yaw, 0, 360);\n    to.yaw = circulate(to.yaw, 0, 360);\n\n    // Take the smaller degree\n    if (Math.abs(to.yaw - from.yaw) > 180) {\n      to.yaw = to.yaw < from.yaw\n        ? to.yaw + 360\n        : to.yaw - 360;\n    }\n\n    this._motion = new Motion({ duration, range: DEFAULT.ANIMATION_RANGE, easing });\n    this._from = from;\n    this._to = to;\n  }\n\n  /**\n   * Destroy the instance and remove all event listeners attached\n   * This also will reset CSS cursor to intial\n   * @returns {void} Nothing\n   */\n  public destroy(): void {\n    this.disable();\n  }\n\n  /**\n   * Update control by given deltaTime\n   * @param camera Camera to update position\n   * @param deltaTime Number of milisec to update\n   * @returns {void} Nothing\n   */\n  public update(camera: Camera, deltaTime: number): void {\n    if (!this._enabled) return;\n\n    const from = this._from;\n    const to = this._to;\n    const motion = this._motion;\n    motion.update(deltaTime);\n\n    // Progress that easing is applied\n    const progress = motion.val;\n\n    camera.yaw = mix(from.yaw, to.yaw, progress);\n    camera.pitch = mix(from.pitch, to.pitch, progress);\n    camera.distance = mix(from.distance, to.distance, progress);\n    camera.pivot = from.pivot.clone().lerp(to.pivot, progress);\n\n    if (motion.progress >= 1) {\n      this.disable();\n      this._finishCallbacks.forEach(callback => callback());\n    }\n  }\n\n  /**\n   * Enable this input and add event listeners\n   * @returns {void} Nothing\n   */\n  public enable(): void {\n    if (this._enabled) return;\n\n    this._enabled = true;\n    this._motion.reset(0);\n    this._motion.setEndDelta(1);\n  }\n\n  /**\n   * Disable this input and remove all event handlers\n   * @returns {void} Nothing\n   */\n  public disable(): void {\n    if (!this._enabled) return;\n\n    this._enabled = false;\n  }\n\n  /**\n   * Add callback which is called when animation is finished\n   * @param callback Callback that will be called when animation finishes\n   * @returns {void} Nothing\n   */\n  public onFinished(callback: AnyFunction): void {\n    this._finishCallbacks.push(callback);\n  }\n\n  /**\n   * Remove all onFinished callbacks\n   * @returns {void} Nothing\n   */\n  public clearFinished(): void {\n    this._finishCallbacks = [];\n  }\n\n  public resize(size: THREE.Vector2) {\n    // DO NOTHING\n  }\n\n  public setElement(element: HTMLElement) {\n    // DO NOTHING\n  }\n\n  public sync(camera: Camera): void {\n    // Do nothing\n  }\n}\n\nexport default AnimationControl;\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nimport * as THREE from \"three\";\nimport Pose from \"./Pose\";\nimport Controller from \"./Controller\";\nimport AnimationControl from \"~/controls/AnimationControl\";\nimport { toRadian, clamp, circulate } from \"~/utils\";\nimport * as DEFAULT from \"~/consts/default\";\n\n/**\n * Camera that renders the scene of View3D\n * @category Core\n */\nclass Camera {\n  private _threeCamera: THREE.PerspectiveCamera;\n  private _controller: Controller;\n  private _minDistance: number = DEFAULT.MINIMUM_DISTANCE;\n  private _maxDistance: number = DEFAULT.MAXIMUM_DISTANCE;\n  private _defaultPose: Pose = DEFAULT.CAMERA_POSE;\n  private _currentPose: Pose = this._defaultPose.clone();\n\n  /**\n   * Three.js {@link https://threejs.org/docs/#api/en/cameras/PerspectiveCamera PerspectiveCamera} instance\n   * @readonly\n   * @type THREE.PerspectiveCamera\n   */\n  public get threeCamera() { return this._threeCamera; }\n\n  /**\n   * Controller of the camera\n   * @readonly\n   * @type Controller\n   */\n  public get controller() { return this._controller; }\n\n  /**\n   * Camera's default pose(yaw, pitch, distance, pivot)\n   * This will be new currentPose when {@link Camera#reset reset()} is called\n   * @readonly\n   * @type Pose\n   */\n  public get defaultPose(): Readonly<Pose> { return this._defaultPose; }\n\n  /**\n   * Camera's current pose value\n   * @readonly\n   * @type Pose\n   */\n  public get currentPose(): Pose { return this._currentPose.clone(); }\n\n  /**\n   * Camera's current yaw\n   * {@link Camera#updatePosition} should be called after changing this value, and normally it is called every frame.\n   * @type number\n   */\n  public get yaw() { return this._currentPose.yaw; }\n\n  /**\n   * Camera's current pitch\n   * {@link Camera#updatePosition} should be called after changing this value, and normally it is called every frame.\n   * @type number\n   */\n  public get pitch() { return this._currentPose.pitch; }\n\n  /**\n   * Camera's current distance\n   * {@link Camera#updatePosition} should be called after changing this value, and normally it is called every frame.\n   * @type number\n   */\n  public get distance() { return this._currentPose.distance; }\n\n  /**\n   * Current pivot point of camera rotation\n   * @readonly\n   * @type THREE.Vector3\n   * @see {@link https://threejs.org/docs/#api/en/math/Vector3 THREE#Vector3}\n   */\n  public get pivot() { return this._currentPose.pivot; }\n\n  /**\n   * Minimum distance from lookAtPosition\n   * @type number\n   * @example\n   * import View3D from \"@egjs/view3d\";\n   *\n   * const view3d = new View3D(\"#view3d-canvas\");\n   * view3d.camera.minDistance = 100;\n   */\n  public get minDistance() { return this._minDistance; }\n\n  /**\n   * Maximum distance from lookAtPosition\n   * @type number\n   * @example\n   * import View3D from \"@egjs/view3d\";\n   *\n   * const view3d = new View3D(\"#view3d-canvas\");\n   * view3d.camera.maxDistance = 400;\n   */\n  public get maxDistance() { return this._maxDistance; }\n\n  /**\n   * Camera's focus of view value\n   * @type number\n   * @see {@link https://threejs.org/docs/#api/en/cameras/PerspectiveCamera.fov THREE#PerspectiveCamera}\n   */\n  public get fov() { return this._threeCamera.fov; }\n\n  /**\n   * Camera's frustum width on current distance value\n   * @type number\n   */\n  public get renderWidth() { return this.renderHeight * this._threeCamera.aspect; }\n\n  /**\n   * Camera's frustum height on current distance value\n   * @type number\n   */\n  public get renderHeight() { return 2 * this.distance * Math.tan(toRadian(this.fov / 2)); }\n\n  public set minDistance(val: number) { this._minDistance = val; }\n  public set maxDistance(val: number) { this._maxDistance = val; }\n  public set pose(val: Pose) {\n    this._currentPose = val;\n    this._controller.syncToCamera();\n  }\n  public set yaw(val: number) { this._currentPose.yaw = val; }\n  public set pitch(val: number) { this._currentPose.pitch = val; }\n  public set distance(val: number) { this._currentPose.distance = val; }\n  public set pivot(val: THREE.Vector3) { this._currentPose.pivot = val; }\n\n  public set fov(val: number) {\n    this._threeCamera.fov = val;\n    this._threeCamera.updateProjectionMatrix();\n  }\n\n  /**\n   * Create new Camera instance\n   * @param canvas \\<canvas\\> element to render 3d model\n   */\n  constructor(canvas: HTMLCanvasElement) {\n    this._threeCamera = new THREE.PerspectiveCamera();\n    this._controller = new Controller(canvas, this);\n  }\n\n  /**\n   * Reset camera to default pose\n   * @param duration Duration of the reset animation\n   * @param easing Easing function for the reset animation\n   * @returns Promise that resolves when the animation finishes\n   */\n  public reset(duration: number = 0, easing: (x: number) => number = DEFAULT.EASING): Promise<void> {\n    const controller = this._controller;\n    const currentPose = this._currentPose;\n    const defaultPose = this._defaultPose;\n\n    if (duration <= 0) {\n      // Reset camera immediately\n      this._currentPose = defaultPose.clone();\n\n      controller.syncToCamera();\n\n      return new Promise(resolve => resolve);\n    } else {\n      // Add reset animation control to controller\n      const resetControl = new AnimationControl(currentPose, defaultPose);\n      resetControl.duration = duration;\n      resetControl.easing = easing;\n\n      return new Promise(resolve => {\n        resetControl.onFinished(() => {\n          controller.remove(resetControl);\n          controller.syncToCamera();\n          resolve();\n        });\n\n        controller.add(resetControl);\n      });\n    }\n  }\n\n  /**\n   * Update camera's aspect to given size\n   * @param size {@link THREE.Vector2} instance that has width(x), height(y)\n   * @returns {void} Nothing\n   */\n  public resize(size: THREE.Vector2): void {\n    const cam = this._threeCamera;\n    const aspect = size.x / size.y;\n\n    cam.aspect = aspect;\n    cam.updateProjectionMatrix();\n\n    this._controller.resize(size);\n  }\n\n  /**\n   * Set default position of camera relative to the 3d model\n   * New default pose will be used when {@link Camera#reset reset()} is called\n   * @param newDefaultPose new default pose to apply\n   * @returns {void} Nothing\n   */\n  public setDefaultPose(newDefaultPose: Partial<{\n    yaw: number,\n    pitch: number,\n    distance: number,\n    pivot: THREE.Vector3,\n  }>): void {\n    const defaultPose = this._defaultPose;\n    const { yaw, pitch, distance, pivot } = newDefaultPose;\n\n    if (yaw != null) {\n      defaultPose.yaw = yaw;\n    }\n    if (pitch != null) {\n      defaultPose.pitch = pitch;\n    }\n    if (distance != null) {\n      defaultPose.distance = distance;\n    }\n    if (pivot != null) {\n      defaultPose.pivot = pivot;\n    }\n  }\n\n  /**\n   * Update camera position base on the {@link Camera#currentPose currentPose} value\n   * @returns {void} Nothing\n   */\n  public updatePosition(): void {\n    this._clampCurrentPose();\n\n    const threeCamera = this._threeCamera;\n    const pose = this._currentPose;\n\n    const yaw = toRadian(pose.yaw);\n    const pitch = toRadian(pose.pitch);\n    // Should use minimum distance to prevent distance becomes 0, which makes whole x,y,z to 0 regardless of pose\n    const distance = Math.max(pose.distance + this._minDistance, DEFAULT.MINIMUM_DISTANCE);\n\n    const newCamPos = new THREE.Vector3(0, 0, 0);\n    newCamPos.y = distance * Math.sin(pitch);\n    newCamPos.z = distance * Math.cos(pitch);\n\n    newCamPos.x = newCamPos.z * Math.sin(-yaw);\n    newCamPos.z = newCamPos.z * Math.cos(-yaw);\n\n    newCamPos.add(pose.pivot);\n\n    threeCamera.position.copy(newCamPos);\n    threeCamera.lookAt(pose.pivot);\n    threeCamera.updateProjectionMatrix();\n  }\n\n  private _clampCurrentPose() {\n    const currentPose = this._currentPose;\n\n    currentPose.yaw = circulate(currentPose.yaw, 0, 360);\n    currentPose.pitch = clamp(currentPose.pitch, DEFAULT.PITCH_RANGE.min, DEFAULT.PITCH_RANGE.max);\n    currentPose.distance = clamp(currentPose.distance, this._minDistance, this._maxDistance);\n  }\n}\n\nexport default Camera;\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nimport * as THREE from \"three\";\n\n/**\n * Component that manages animations of the 3D Model\n * @category Core\n */\nclass ModelAnimator {\n  private _mixer: THREE.AnimationMixer;\n  private _clips: THREE.AnimationClip[];\n  private _actions: THREE.AnimationAction[];\n\n  /**\n   * Three.js {@link https://threejs.org/docs/#api/en/animation/AnimationClip AnimationClip}s that stored\n   * @type THREE.AnimationClip\n   * @readonly\n   */\n  public get clips() { return this._clips; }\n\n  /**\n   * {@link https://threejs.org/docs/index.html#api/en/animation/AnimationMixer THREE.AnimationMixer} instance\n   * @type THREE.AnimationMixer\n   * @readonly\n   */\n  public get mixer() { return this._mixer; }\n\n  /**\n   * Create new ModelAnimator instance\n   * @param scene {@link https://threejs.org/docs/index.html#api/en/scenes/Scene THREE.Scene} instance that is root of all 3d objects\n   */\n  constructor(scene: THREE.Scene) {\n    this._mixer = new THREE.AnimationMixer(scene);\n    this._clips = [];\n    this._actions = [];\n  }\n\n  /**\n   * Store the given clips\n   * @param clips Three.js {@link https://threejs.org/docs/#api/en/animation/AnimationClip AnimationClip}s of the model\n   * @returns {void} Nothing\n   * @example\n   * // After loading model\n   * view3d.animator.setClips(model.animations);\n   */\n  public setClips(clips: THREE.AnimationClip[]): void {\n    const mixer = this._mixer;\n    this._clips = clips;\n    this._actions = clips.map(clip => mixer.clipAction(clip));\n  }\n\n  /**\n   * Play one of the model's animation\n   * @param index Index of the animation to play\n   * @returns {void} Nothing\n   */\n  public play(index: number): void {\n    const action = this._actions[index];\n\n    if (action) {\n      action.play();\n    }\n  }\n\n  /**\n   * Pause one of the model's animation\n   * If you want to stop animation completely, you should call {@link ModelAnimator#stop stop} instead\n   * You should call {@link ModelAnimator#resume resume} to resume animation\n   * @param index Index of the animation to pause\n   * @returns {void} Nothing\n   */\n  public pause(index: number): void {\n    const action = this._actions[index];\n\n    if (action) {\n      action.timeScale = 0;\n    }\n  }\n\n  /**\n   * Resume one of the model's animation\n   * This will play animation from the point when the animation is paused\n   * @param index Index of the animation to resume\n   * @returns {void} Nothing\n   */\n  public resume(index: number): void {\n    const action = this._actions[index];\n\n    if (action) {\n      action.timeScale = 1;\n    }\n  }\n\n  /**\n   * Fully stops one of the model's animation\n   * @param index Index of the animation to stop\n   * @returns {void} Nothing\n   */\n  public stop(index: number): void {\n    const action = this._actions[index];\n\n    if (action) {\n      action.stop();\n    }\n  }\n\n  /**\n   * Update animations\n   * @param delta number of seconds to play animations attached\n   * @returns {void} Nothing\n   */\n  public update(delta: number): void {\n    this._mixer.update(delta);\n  }\n\n  /**\n   * Reset the instance and remove all cached animation clips attached to it\n   * @returns {void} Nothing\n   */\n  public reset(): void {\n    const mixer = this._mixer;\n\n    mixer.uncacheRoot(mixer.getRoot());\n\n    this._clips = [];\n    this._actions = [];\n  }\n}\n\nexport default ModelAnimator;\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nimport View3D from \"~/View3D\";\nimport XRSession from \"../xr/XRSession\";\nimport WebARSession from \"../xr/WebARSession\";\n\n/**\n * XRManager that manages XRSessions\n * @category Core\n */\nclass XRManager {\n  private _view3d: View3D;\n  private _sessions: XRSession[];\n  private _currentSession: XRSession | null;\n\n  /**\n   * Array of {@link XRSession}s added\n   */\n  public get sessions() { return this._sessions; }\n  /**\n   * Current entry session. Note that only WebXR type session can be returned.\n   */\n  public get currentSession() { return this._currentSession; }\n\n  /**\n   * Create a new instance of the XRManager\n   * @param view3d Instance of the View3D\n   */\n  constructor(view3d: View3D) {\n    this._view3d = view3d;\n    this._sessions = [];\n    this._currentSession = null;\n  }\n\n  /**\n   * Return a Promise containing whether any of the added session is available\n   */\n  public async isAvailable(): Promise<boolean> {\n    const results = await Promise.all(this._sessions.map(session => session.isAvailable()));\n\n    return results.some(result => result === true);\n  }\n\n  /**\n   * Add new {@link XRSession}.\n   * The XRSession's order added is the same as the order of entry.\n   * @param xrSession XRSession to add\n   */\n  public addSession(...xrSession: XRSession[]) {\n    this._sessions.push(...xrSession);\n  }\n\n  /**\n   * Enter XR Session.\n   */\n  public async enter(): Promise<void> {\n    return this._enterSession(0, []);\n  }\n\n  /**\n   * Exit current XR Session.\n   */\n  public exit() {\n    if (this._currentSession) {\n      this._currentSession.exit(this._view3d);\n      this._currentSession = null;\n    }\n  }\n\n  private async _enterSession(sessionIdx: number, errors: any[]) {\n    const view3d = this._view3d;\n    const sessions = this._sessions;\n\n    if (sessionIdx >= sessions.length) {\n      if (errors.length < 1) {\n        errors.push(new Error(\"No sessions available\"));\n      }\n      return Promise.reject(errors);\n    }\n\n    const xrSession = sessions[sessionIdx];\n    const isSessionAvailable = await xrSession.isAvailable();\n    if (!isSessionAvailable) {\n      return this._enterSession(sessionIdx + 1, errors);\n    }\n\n    return await xrSession.enter(view3d).then(() => {\n      if (xrSession.isWebXRSession) {\n        // Non-webxr sessions are ignored\n        this._currentSession = xrSession;\n        (xrSession as WebARSession).session.addEventListener(\"end\", () => {\n          this._currentSession = null;\n        });\n      }\n      return errors;\n    }).catch(e => {\n      errors.push(e);\n      return this._enterSession(sessionIdx + 1, errors);\n    });\n  }\n}\n\nexport default XRManager;\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nexport const EVENTS = {\n  MOUSE_DOWN: \"mousedown\",\n  MOUSE_MOVE: \"mousemove\",\n  MOUSE_UP: \"mouseup\",\n  TOUCH_START: \"touchstart\",\n  TOUCH_MOVE: \"touchmove\",\n  TOUCH_END: \"touchend\",\n  WHEEL: \"wheel\",\n  RESIZE: \"resize\",\n  CONTEXT_MENU: \"contextmenu\",\n  MOUSE_ENTER: \"mouseenter\",\n  MOUSE_LEAVE: \"mouseleave\",\n};\n\n// https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent.button\nexport enum MOUSE_BUTTON {\n  LEFT,\n  MIDDLE,\n  RIGHT,\n}\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nimport EventEmitter from \"./core/EventEmitter\";\nimport Renderer from \"./core/Renderer\";\nimport Scene from \"./core/Scene\";\nimport Camera from \"./core/camera/Camera\";\nimport Model from \"./core/Model\";\nimport ModelAnimator from \"./core/ModelAnimator\";\nimport XRManager from \"./core/XRManager\";\nimport { EVENTS } from \"./consts/event\";\nimport * as DEFAULT from \"./consts/default\";\nimport { getCanvas } from \"./utils\";\n\n/**\n * Yet another 3d model viewer\n * @category Core\n * @mermaid\n * classDiagram\n *   class View3D\n *     View3D *-- Camera\n *     View3D *-- Renderer\n *     View3D *-- Scene\n *     View3D *-- ModelAnimator\n *     Camera *-- Controller\n * @event resize\n * @event beforeRender\n * @event afterRender\n */\nclass View3D extends EventEmitter<{\n  resize: {\n    width: number;\n    height: number;\n    target: View3D;\n  };\n  beforeRender: View3D;\n  afterRender: View3D;\n}> {\n  /**\n   * Current version of the View3D\n   */\n  public static VERSION: string = \"#__VERSION__#\";\n\n  private _model: Model | null;\n  private _renderer: Renderer;\n  private _scene: Scene;\n  private _camera: Camera;\n  private _animator: ModelAnimator;\n  private _xr: XRManager;\n\n  /**\n   * {@link Renderer} instance of the View3D\n   * @type {Renderer}\n   */\n  public get renderer() { return this._renderer; }\n  /**\n   * {@link Scene} instance of the View3D\n   * @type {Scene}\n   */\n  public get scene() { return this._scene; }\n  /**\n   * {@link Camera} instance of the View3D\n   * @type {Camera}\n   */\n  public get camera() { return this._camera; }\n  /**\n   * {@link Controller} instance of the Camera\n   * @type {Controller}\n   */\n  public get controller() { return this._camera.controller; }\n  /**\n   * {@link ModelAnimator} instance of the View3D\n   * @type {ModelAnimator}\n   */\n  public get animator() { return this._animator; }\n  /**\n   * {@link XRManager} instance of the View3D\n   * @type {XRManager}\n   */\n  public get xr() { return this._xr; }\n  /**\n   * {@link Model} that View3D is currently showing\n   * @type {Model|null}\n   */\n  public get model() { return this._model; }\n\n  /**\n   * Creates new View3D instance\n   * @example\n   * import View3D, { ERROR_CODES } from \"@egjs/view3d\";\n   *\n   * try {\n   *   const view3d = new View3D(\"#wrapper\")\n   * } catch (e) {\n   *   if (e.code === ERROR_CODES.ELEMENT_NOT_FOUND) {\n   *     console.error(\"Element not found\")\n   *   }\n   * }\n   * @throws {View3DError} `CODES.WRONG_TYPE`<br/>When parameter does not either string or the canvas element.\n   * @throws {View3DError} `CODES.ELEMENT_NOT_FOUND`<br/>When the element with given query does not exist.\n   * @throws {View3DError} `CODES.ELEMENT_NOT_CANVAS`<br/>When the element given is not a \\<canvas\\> element.\n   * @throws {View3DError} `CODES.WEBGL_NOT_SUPPORTED`<br/>When browser does not support WebGL.\n   * @see Model\n   * @see Camera\n   * @see Renderer\n   * @see Scene\n   * @see Controller\n   * @see XRManager\n   */\n  constructor(el: string | HTMLCanvasElement) {\n    super();\n    const canvas = getCanvas(el);\n\n    this._renderer = new Renderer(canvas);\n    this._camera = new Camera(canvas);\n    this._scene = new Scene();\n    this._animator = new ModelAnimator(this._scene.root);\n    this._xr = new XRManager(this);\n    this._model = null;\n\n    this.resize();\n\n    window.addEventListener(EVENTS.RESIZE, this.resize);\n  }\n\n  /**\n   * Destroy the denam instance and remove all events attached to it\n   * @returns {void} Nothing\n   */\n  public destroy(): void {\n    this._scene.reset();\n    this.controller.clear();\n    this._model = null;\n\n    window.removeEventListener(EVENTS.RESIZE, this.resize);\n  }\n\n  /**\n   * Resize the denam instance to fit current canvas size\n   * @method\n   * @returns {void} Nothing\n   */\n  public resize = (): void => {\n    this._renderer.resize();\n\n    const newSize = this._renderer.size;\n    this._camera.resize(newSize);\n  }\n\n  /**\n   * Display the given model.\n   * This method will remove the current displaying model, and reset the camera & control to default position.\n   * View3D can only show one model at a time\n   * @param model {@link Model} instance to show\n   * @param {object} [options={}] Display options\n   * @param {number} [options.applySize=true] Whether to change model size to given \"size\" option.\n   * @param {number} [options.size=80] Size of the model to show as.\n   * @param {boolean} [options.resetView=true] Whether to reset the view to the camera's default pose.\n   * @returns {void} Nothing\n   */\n  public display(model: Model, {\n    applySize = true,\n    size = DEFAULT.MODEL_SIZE,\n    resetView = true,\n  } = {}): void {\n    const renderer = this._renderer;\n    const scene = this._scene;\n    const camera = this._camera;\n    const animator = this._animator;\n\n    if (applySize) {\n      model.size = size;\n    }\n    // model.moveToOrigin();\n\n    scene.resetModel();\n\n    if (resetView) {\n      camera.reset();\n    }\n\n    animator.reset();\n\n    this._model = model;\n\n    scene.add(model.scene);\n    animator.setClips(model.animations);\n\n    scene.update(model);\n\n    renderer.stopAnimationLoop();\n    renderer.setAnimationLoop(this.renderLoop);\n  }\n\n  /**\n   * View3D's basic render loop function\n   * @param delta Number of seconds passed since last frame\n   */\n  public renderLoop = (delta: number) => {\n    const renderer = this._renderer;\n    const scene = this._scene;\n    const camera = this._camera;\n    const controller = this.controller;\n    const animator = this._animator;\n\n    animator.update(delta);\n    controller.update(delta);\n\n    this.emit(\"beforeRender\", this);\n    renderer.render(scene, camera);\n    this.emit(\"afterRender\", this);\n  }\n}\n\nexport default View3D;\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nimport * as THREE from \"three\";\n\n/**\n * Data class for loaded 3d model\n * @category Core\n */\nclass Model {\n  private _scene: THREE.Group;\n  private _animations: THREE.AnimationClip[];\n  private _initialBbox: THREE.Box3;\n  private _originalSize: number;\n  private _cachedLights: THREE.Light[] | null;\n  private _cachedMeshes: THREE.Mesh[] | null;\n  private _fixSkinnedBbox: boolean;\n\n  /**\n   * {@link https://threejs.org/docs/#api/en/scenes/Scene THREE.Scene} of the model\n   * @readonly\n   */\n  public get scene() { return this._scene; }\n  /**\n   * {@link https://threejs.org/docs/#api/en/animation/AnimationClip THREE.AnimationClip}s inside model\n   */\n  public get animations() { return this._animations; }\n  /***\n   * {@link https://threejs.org/docs/#api/en/lights/Light THREE.Light}s inside model if there's any.\n   * @readonly\n   */\n  public get lights() {\n    return this._cachedLights ? this._cachedLights : this._getAllLights();\n  }\n  /**\n   * {@link https://threejs.org/docs/#api/en/objects/Mesh THREE.Mesh}es inside model if there's any.\n   * @readonly\n   */\n  public get meshes() {\n    return this._cachedMeshes ? this._cachedMeshes : this._getAllMeshes();\n  }\n  /**\n   * Get a copy of model's current bounding box\n   * @type THREE#Box3\n   * @see https://threejs.org/docs/#api/en/math/Box3\n   */\n  public get bbox() {\n    return this._getTransformedBbox();\n  }\n  /**\n   * Get a copy of model's initial bounding box without transform\n   */\n  public get initialBbox() {\n    return this._initialBbox.clone();\n  }\n  /**\n   * Model's bounding box size\n   * Changing this will scale the model.\n   * @type number\n   * @example\n   * import { GLTFLoader } from \"@egjs/view3d\";\n   * new GLTFLoader().load(URL_TO_GLTF)\n   *  .then(model => {\n   *    model.size = 100;\n   *  })\n   */\n  public get size() {\n    return this._getTransformedBbox().getSize(new THREE.Vector3()).length();\n  }\n\n  /**\n   * Whether to apply inference from skeleton when calculating bounding box\n   * This can fix some models with skinned mesh when it has wrong bounding box\n   * @type boolean\n   */\n  public get fixSkinnedBbox() { return this._fixSkinnedBbox; }\n\n  /**\n   * Return the model's original bbox size before applying any transform\n   * @type number\n   */\n  public get originalSize() { return this._originalSize; }\n\n  /**\n   * Whether the model's meshes gets rendered into shadow map\n   * @type boolean\n   * @example\n   * model.castShadow = true;\n   */\n  public set castShadow(val: boolean) {\n    const meshes = this.meshes;\n    meshes.forEach(mesh => mesh.castShadow = val);\n  }\n\n  /**\n   * Whether the model's mesh materials receive shadows\n   * @type boolean\n   * @example\n   * model.receiveShadow = true;\n   */\n  public set receiveShadow(val: boolean) {\n    const meshes = this.meshes;\n    meshes.forEach(mesh => mesh.receiveShadow = val);\n  }\n\n  public set size(val: number) {\n    const scene = this._scene;\n    const initialBbox = this._initialBbox;\n\n    // Modify scale\n    const bboxSize = initialBbox.getSize(new THREE.Vector3());\n    const scale = val / bboxSize.length();\n    scene.scale.setScalar(scale);\n    scene.updateMatrix();\n  }\n\n  public set fixSkinnedBbox(val: boolean) { this._fixSkinnedBbox = val; }\n\n  /**\n   * Create new Model instance\n   */\n  constructor({\n    scenes,\n    animations = [],\n    fixSkinnedBbox = false,\n    castShadow = true,\n    receiveShadow = false,\n  }: {\n    scenes: THREE.Object3D[],\n    animations?: THREE.AnimationClip[],\n    fixSkinnedBbox?: boolean,\n    castShadow?: boolean,\n    receiveShadow?: boolean,\n  }) {\n    // This guarantees model's root has identity matrix at creation\n    this._scene = new THREE.Group();\n    const pivot = new THREE.Object3D();\n    pivot.name = \"Pivot\";\n    pivot.add(...scenes);\n    this._scene.add(pivot);\n\n    this._animations = animations;\n    this._fixSkinnedBbox = fixSkinnedBbox;\n    this._cachedLights = null;\n    this._cachedMeshes = null;\n\n    this._setInitialBbox();\n\n    const bboxCenter = this._initialBbox.getCenter(new THREE.Vector3());\n    pivot.position.copy(bboxCenter.negate());\n\n    this._moveInitialBboxToCenter();\n\n    this._originalSize = this.size;\n\n    this.castShadow = castShadow;\n    this.receiveShadow = receiveShadow;\n  }\n\n  /**\n   * Translate the model to center the model's bounding box to world origin (0, 0, 0).\n   */\n  public moveToOrigin() {\n    // Translate scene position to origin\n    const scene = this._scene;\n    const initialBbox = this._initialBbox.clone();\n\n    initialBbox.min.multiply(scene.scale);\n    initialBbox.max.multiply(scene.scale);\n\n    const bboxCenter = initialBbox.getCenter(new THREE.Vector3());\n    scene.position.copy(bboxCenter.negate());\n    scene.updateMatrix();\n  }\n\n  private _setInitialBbox() {\n    this._scene.updateMatrixWorld();\n    if (this._fixSkinnedBbox && this._hasSkinnedMesh()) {\n      this._initialBbox = this._getSkeletonBbox();\n    } else {\n      this._initialBbox = new THREE.Box3().setFromObject(this._scene);\n    }\n  }\n\n  private _getSkeletonBbox() {\n    const bbox = new THREE.Box3();\n\n    this.meshes.forEach((mesh: THREE.SkinnedMesh) => {\n      if (!mesh.isSkinnedMesh) {\n        bbox.expandByObject(mesh);\n        return;\n      }\n\n      const geometry = mesh.geometry as THREE.BufferGeometry;\n      const positions = geometry.attributes.position;\n      const skinIndicies = geometry.attributes.skinIndex;\n      const skinWeights = geometry.attributes.skinWeight;\n      const skeleton = mesh.skeleton;\n\n      skeleton.update();\n      const boneMatricies = skeleton.boneMatrices;\n\n      const finalMatrix = new THREE.Matrix4();\n      for (let posIdx = 0; posIdx < positions.count; posIdx++) {\n        finalMatrix.identity();\n\n        const skinned = new THREE.Vector4();\n        skinned.set(0, 0, 0, 0);\n        const skinVertex = new THREE.Vector4();\n        skinVertex.set(\n          positions.getX(posIdx),\n          positions.getY(posIdx),\n          positions.getZ(posIdx),\n          1,\n        ).applyMatrix4(mesh.bindMatrix);\n\n        const weights = [\n          skinWeights.getX(posIdx),\n          skinWeights.getY(posIdx),\n          skinWeights.getZ(posIdx),\n          skinWeights.getW(posIdx),\n        ];\n\n        const indicies = [\n          skinIndicies.getX(posIdx),\n          skinIndicies.getY(posIdx),\n          skinIndicies.getZ(posIdx),\n          skinIndicies.getW(posIdx),\n        ];\n\n        weights.forEach((weight, index) => {\n          const boneMatrix = new THREE.Matrix4().fromArray(boneMatricies, indicies[index] * 16);\n          skinned.add(skinVertex.clone().applyMatrix4(boneMatrix).multiplyScalar(weight));\n        });\n\n        const transformed = new THREE.Vector3().fromArray(skinned.applyMatrix4(mesh.bindMatrixInverse).toArray());\n        transformed.applyMatrix4(mesh.matrixWorld);\n\n        bbox.expandByPoint(transformed);\n      }\n    });\n\n    return bbox;\n  }\n\n  private _moveInitialBboxToCenter() {\n    const bboxCenter = this._initialBbox.getCenter(new THREE.Vector3());\n    this._initialBbox.translate(bboxCenter.negate());\n  }\n\n  private _getAllLights(): THREE.Light[] {\n    const lights: THREE.Light[] = [];\n\n    this._scene.traverse(obj => {\n      if ((obj as any).isLight) {\n        lights.push(obj as THREE.Light);\n      }\n    });\n\n    this._cachedLights = lights;\n\n    return lights;\n  }\n\n  /**\n   * Get all {@link https://threejs.org/docs/#api/en/objects/Mesh THREE.Mesh}es inside model if there's any.\n   * @private\n   * @returns Meshes found at model's scene\n   */\n  private _getAllMeshes(): THREE.Mesh[] {\n    const meshes: THREE.Mesh[] = [];\n\n    this._scene.traverse(obj => {\n      if ((obj as any).isMesh) {\n        meshes.push(obj as THREE.Mesh);\n      }\n    });\n\n    this._cachedMeshes = meshes;\n\n    return meshes;\n  }\n\n  private _hasSkinnedMesh(): boolean {\n    return this.meshes.some(mesh => (mesh as THREE.SkinnedMesh).isSkinnedMesh);\n  }\n\n  private _getTransformedBbox(): THREE.Box3 {\n    return this._initialBbox.clone().applyMatrix4(this._scene.matrix);\n  }\n}\n\nexport default Model;\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nimport ModelAnimator from \"./ModelAnimator\";\nimport Model from \"./Model\";\nimport Renderer from \"./Renderer\";\nimport Scene from \"./Scene\";\nimport XRManager from \"./XRManager\";\nimport Camera from \"./camera/Camera\";\nimport Controller from \"./camera/Controller\";\nimport Pose from \"./camera/Pose\";\n\nexport {\n  ModelAnimator,\n  Model,\n  Renderer,\n  Scene,\n  XRManager,\n  Camera,\n  Controller,\n  Pose,\n};\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nimport * as THREE from \"three\";\nimport CameraControl from \"./CameraControl\";\nimport View3DError from \"~/View3DError\";\nimport Camera from \"~/core/camera/Camera\";\nimport { getElement } from \"~/utils\";\nimport { EVENTS, MOUSE_BUTTON } from \"~/consts/event\";\nimport * as ERROR from \"~/consts/error\";\nimport * as DEFAULT from \"~/consts/default\";\n\n/**\n * Control that animates model without user input\n * @category Controls\n */\nclass AutoControl implements CameraControl {\n  // Options\n  private _delay: number;\n  private _delayOnMouseLeave: number;\n  private _speed: number;\n  private _pauseOnHover: boolean;\n  private _canInterrupt: boolean;\n  private _disableOnInterrupt: boolean;\n\n  // Internal values\n  private _targetEl: HTMLElement | null = null;\n  private _enabled: boolean = false;\n  private _interrupted: boolean = false;\n  private _interruptionTimer: number = -1;\n  private _hovering: boolean = false;\n\n  /**\n   * Control's current target element to attach event listeners\n   * @readonly\n   */\n  public get element() { return this._targetEl; }\n  /**\n   * Whether this control is enabled or not\n   * @readonly\n   */\n  public get enabled() { return this._enabled; }\n  /**\n   * Reactivation delay after mouse input in milisecond\n   */\n  public get delay() { return this._delay; }\n  /**\n   * Reactivation delay after mouse leave\n   * This option only works when {@link AutoControl#pauseOnHover pauseOnHover} is activated\n   */\n  public get delayOnMouseLeave() { return this._delayOnMouseLeave; }\n  /**\n   * Y-axis(yaw) rotation speed\n   * @default 1\n   */\n  public get speed() { return this._speed; }\n  /**\n   * Whether to pause rotation on mouse hover\n   * @default false\n   */\n  public get pauseOnHover() { return this._pauseOnHover; }\n  /**\n   * Whether user can interrupt the rotation with click/wheel input\n   * @default true\n   */\n  public get canInterrupt() { return this._canInterrupt; }\n  /**\n   * Whether to disable control on user interrupt\n   * @default false\n   */\n  public get disableOnInterrupt() { return this._disableOnInterrupt; }\n\n  public set delay(val: number) { this._delay = val; }\n  public set delayOnMouseLeave(val: number) { this._delayOnMouseLeave = val; }\n  public set speed(val: number) { this._speed = val; }\n  public set pauseOnHover(val: boolean) { this._pauseOnHover = val; }\n  public set canInterrupt(val: boolean) { this._canInterrupt = val; }\n  public set disableOnInterrupt(val: boolean) { this._disableOnInterrupt = val; }\n\n  /**\n   * Create new RotateControl instance\n   * @param {object} options Options\n   * @param {HTMLElement | string | null} [options.element=null] Attaching element / selector of the element\n   * @param {number} [options.delay=2000] Reactivation delay after mouse input in milisecond\n   * @param {number} [options.delayOnMouseLeave=0] Reactivation delay after mouse leave\n   * @param {number} [options.speed=1] Y-axis(yaw) rotation speed\n   * @param {boolean} [options.pauseOnHover=false] Whether to pause rotation on mouse hover\n   * @param {boolean} [options.canInterrupt=true] Whether user can interrupt the rotation with click/wheel input\n   * @param {boolean} [options.disableOnInterrupt=false] Whether to disable control on user interrupt\n   * @tutorial Adding Controls\n   */\n  constructor({\n    element = DEFAULT.NULL_ELEMENT,\n    delay = 2000,\n    delayOnMouseLeave = 0,\n    speed = 1,\n    pauseOnHover = false,\n    canInterrupt = true,\n    disableOnInterrupt = false,\n  } = {}) {\n    const targetEl = getElement(element);\n    if (targetEl) {\n      this.setElement(targetEl);\n    }\n    this._delay = delay;\n    this._delayOnMouseLeave = delayOnMouseLeave;\n    this._speed = speed;\n    this._pauseOnHover = pauseOnHover;\n    this._canInterrupt = canInterrupt;\n    this._disableOnInterrupt = disableOnInterrupt;\n  }\n\n  /**\n   * Destroy the instance and remove all event listeners attached\n   * This also will reset CSS cursor to intial\n   * @returns {void} Nothing\n   */\n  public destroy(): void {\n    this.disable();\n  }\n\n  /**\n   * Update control by given deltaTime\n   * @param camera Camera to update position\n   * @param deltaTime Number of milisec to update\n   * @returns {void} Nothing\n   */\n  public update(camera: Camera, deltaTime: number): void {\n    if (!this._enabled) return;\n    if (this._interrupted) {\n      if (this._disableOnInterrupt) {\n        this.disable();\n      }\n\n      return;\n    }\n\n    camera.yaw += this._speed * deltaTime / 100;\n  }\n\n  // This is not documetned on purpose as it doesn't do nothing\n  public resize(size: THREE.Vector2) {\n    // DO NOTHING\n  }\n\n  /**\n   * Enable this input and add event listeners\n   * @returns {void} Nothing\n   */\n  public enable(): void {\n    if (this._enabled) return;\n    if (!this._targetEl) {\n      throw new View3DError(ERROR.MESSAGES.ADD_CONTROL_FIRST, ERROR.CODES.ADD_CONTROL_FIRST);\n    }\n\n    const targetEl = this._targetEl;\n\n    targetEl.addEventListener(EVENTS.MOUSE_DOWN, this._onMouseDown, false);\n\n    targetEl.addEventListener(EVENTS.TOUCH_START, this._onTouchStart, false);\n    targetEl.addEventListener(EVENTS.TOUCH_END, this._onTouchEnd, false);\n\n    targetEl.addEventListener(EVENTS.MOUSE_ENTER, this._onMouseEnter, false);\n    targetEl.addEventListener(EVENTS.MOUSE_LEAVE, this._onMouseLeave, false);\n\n    targetEl.addEventListener(EVENTS.WHEEL, this._onWheel, false);\n\n    this._enabled = true;\n  }\n\n  /**\n   * Disable this input and remove all event handlers\n   * @returns {void} Nothing\n   */\n  public disable(): void {\n    if (!this._enabled || !this._targetEl) return;\n\n    const targetEl = this._targetEl;\n\n    targetEl.removeEventListener(EVENTS.MOUSE_DOWN, this._onMouseDown, false);\n    window.removeEventListener(EVENTS.MOUSE_UP, this._onMouseUp, false);\n\n    targetEl.removeEventListener(EVENTS.TOUCH_START, this._onTouchStart, false);\n    targetEl.removeEventListener(EVENTS.TOUCH_END, this._onTouchEnd, false);\n\n    targetEl.removeEventListener(EVENTS.MOUSE_ENTER, this._onMouseEnter, false);\n    targetEl.removeEventListener(EVENTS.MOUSE_LEAVE, this._onMouseLeave, false);\n\n    targetEl.removeEventListener(EVENTS.WHEEL, this._onWheel, false);\n\n    this._enabled = false;\n    this._interrupted = false;\n    this._hovering = false;\n\n    this._clearTimeout();\n  }\n\n  // This does nothing\n  public sync(camera: Camera): void {\n    // Do nothing\n  }\n\n  /**\n   * Set target element to attach event listener\n   * @param element target element\n   * @returns {void} Nothing\n   */\n  public setElement(element: HTMLElement): void {\n    this._targetEl = element;\n  }\n\n  private _onMouseDown = (evt: MouseEvent) => {\n    if (!this._canInterrupt) return;\n    if (evt.button !== MOUSE_BUTTON.LEFT && evt.button !== MOUSE_BUTTON.RIGHT) return;\n\n    this._interrupted = true;\n    this._clearTimeout();\n    window.addEventListener(EVENTS.MOUSE_UP, this._onMouseUp, false);\n  }\n\n  private _onMouseUp = () => {\n    window.removeEventListener(EVENTS.MOUSE_UP, this._onMouseUp, false);\n    this._setUninterruptedAfterDelay(this._delay);\n  }\n\n  private _onTouchStart = () => {\n    if (!this._canInterrupt) return;\n    this._interrupted = true;\n    this._clearTimeout();\n  }\n\n  private _onTouchEnd = () => {\n    this._setUninterruptedAfterDelay(this._delay);\n  }\n\n  private _onMouseEnter = () => {\n    if (!this._pauseOnHover) return;\n    this._interrupted = true;\n    this._hovering = true;\n  }\n\n  private _onMouseLeave = () => {\n    if (!this._pauseOnHover) return;\n    this._hovering = false;\n    this._setUninterruptedAfterDelay(this._delayOnMouseLeave);\n  }\n\n  private _onWheel = () => {\n    if (!this._canInterrupt) return;\n    this._interrupted = true;\n    this._setUninterruptedAfterDelay(this._delay);\n  }\n\n  private _setUninterruptedAfterDelay(delay: number): void {\n    if (this._hovering) return;\n\n    this._clearTimeout();\n\n    if (delay > 0) {\n      this._interruptionTimer = window.setTimeout(() => {\n        this._interrupted = false;\n        this._interruptionTimer = -1;\n      }, delay);\n    } else {\n      this._interrupted = false;\n      this._interruptionTimer = -1;\n    }\n  }\n\n  private _clearTimeout(): void {\n    if (this._interruptionTimer >= 0) {\n      window.clearTimeout(this._interruptionTimer);\n      this._interruptionTimer = -1;\n    }\n  }\n}\n\nexport default AutoControl;\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nexport const CURSOR: {\n  GRAB: \"grab\",\n  GRABBING: \"grabbing\",\n} = {\n  GRAB: \"grab\",\n  GRABBING: \"grabbing\",\n};\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nimport * as THREE from \"three\";\nimport CameraControl from \"./CameraControl\";\nimport Motion from \"./Motion\";\nimport View3DError from \"~/View3DError\";\nimport Camera from \"~/core/camera/Camera\";\nimport { getElement } from \"~/utils\";\nimport { EVENTS, MOUSE_BUTTON } from \"~/consts/event\";\nimport { CURSOR } from \"~/consts/css\";\nimport * as DEFAULT from \"~/consts/default\";\nimport * as ERROR from \"~/consts/error\";\nimport { ValueOf } from \"~/types/internal\";\n\n/**\n * Model's rotation control that supports both mouse & touch\n * @category Controls\n */\nclass RotateControl implements CameraControl {\n  // Options\n  private _useGrabCursor: boolean;\n  private _scaleToElement: boolean;\n  private _userScale: THREE.Vector2;\n\n  // Internal values\n  private _targetEl: HTMLElement | null = null;\n  private _xMotion: Motion;\n  private _yMotion: Motion;\n  private _screenScale: THREE.Vector2 = new THREE.Vector2(0, 0);\n  private _prevPos: THREE.Vector2 = new THREE.Vector2(0, 0);\n  private _enabled: boolean = false;\n\n  /**\n   * Control's current target element to attach event listeners\n   * @readonly\n   */\n  public get element() { return this._targetEl; }\n  /**\n   * Scale factor for panning, x is for horizontal and y is for vertical panning.\n   * @type THREE.Vector2\n   * @see https://threejs.org/docs/#api/en/math/Vector2\n   * @example\n   * const rotateControl = new View3D.RotateControl();\n   * rotateControl.scale.setX(2);\n   */\n  public get scale() { return this._userScale; }\n  /**\n   * Whether to apply CSS style `cursor: grab` on the target element or not\n   * @default true\n   * @example\n   * const rotateControl = new View3D.RotateControl();\n   * rotateControl.useGrabCursor = true;\n   */\n  public get useGrabCursor() { return this._useGrabCursor; }\n  /**\n   * Whether to scale control to fit element size.\n   * When this is true and {@link RotateControl#scale scale.x} is 1, panning through element's width will make 3d model's yaw rotate 360°.\n   * When this is true and {@link RotateControl#scale scale.y} is 1, panning through element's height will make 3d model's pitch rotate 180°.\n   * @default true\n   * @example\n   * import View3D, { RotateControl } from \"@egjs/view3d\";\n   * const view3d = new View3D(\"#view3d-canvas\");\n   * const rotateControl = new RotateControl();\n   * rotateControl.scaleToElement = true;\n   * view3d.controller.add(rotateControl);\n   * view3d.resize();\n   */\n  public get scaleToElement() { return this._scaleToElement; }\n  /**\n   * Whether this control is enabled or not\n   * @readonly\n   */\n  public get enabled() { return this._enabled; }\n\n  public set scale(val: THREE.Vector2) {\n    this._userScale.copy(val);\n  }\n  public set useGrabCursor(val: boolean) {\n    if (!val) {\n      this._setCursor(\"\");\n      this._useGrabCursor = false;\n    } else {\n      this._useGrabCursor = true;\n      this._setCursor(CURSOR.GRAB);\n    }\n  }\n  public set scaleToElement(val: boolean) {\n    this._scaleToElement = val;\n  }\n\n  /**\n   * Create new RotateControl instance\n   * @param {object} options Options\n   * @param {HTMLElement | null} [options.element] Target element.\n   * @param {number} [options.duration=500] Motion's duration.\n   * @param {function} [options.easing=(x: number) => 1 - Math.pow(1 - x, 3)] Motion's easing function.\n   * @param {THREE.Vector2} [options.scale=new THREE.Vector2(1, 1)] Scale factor for panning, x is for horizontal and y is for vertical panning.\n   * @param {boolean} [options.useGrabCursor=true] Whether to apply CSS style `cursor: grab` on the target element or not.\n   * @param {boolean} [options.scaleToElement=true] Whether to scale control to fit element size.\n   * @tutorial Adding Controls\n   */\n  constructor({\n    element = DEFAULT.NULL_ELEMENT,\n    duration = DEFAULT.ANIMATION_DURATION,\n    easing = DEFAULT.EASING,\n    scale = new THREE.Vector2(1, 1),\n    useGrabCursor = true,\n    scaleToElement = true,\n  } = {}) {\n    const targetEl = getElement(element);\n    if (targetEl) {\n      this.setElement(targetEl);\n    }\n    this._userScale = scale;\n    this._useGrabCursor = useGrabCursor;\n    this._scaleToElement = scaleToElement;\n    this._xMotion = new Motion({ duration, range: DEFAULT.INFINITE_RANGE, easing });\n    this._yMotion = new Motion({ duration, range: DEFAULT.PITCH_RANGE, easing });\n  }\n\n  /**\n   * Destroy the instance and remove all event listeners attached\n   * This also will reset CSS cursor to intial\n   * @returns {void} Nothing\n   */\n  public destroy(): void {\n    this.disable();\n  }\n\n  /**\n   * Update control by given deltaTime\n   * @param camera Camera to update position\n   * @param deltaTime Number of milisec to update\n   * @returns {void} Nothing\n   */\n  public update(camera: Camera, deltaTime: number): void {\n    const xMotion = this._xMotion;\n    const yMotion = this._yMotion;\n\n    const delta = new THREE.Vector2(\n      xMotion.update(deltaTime),\n      yMotion.update(deltaTime),\n    );\n\n    camera.yaw += delta.x;\n    camera.pitch += delta.y;\n  }\n\n  /**\n   * Resize control to match target size\n   * This method is only meaningful when {@link RotateControl#scaleToElement scaleToElement} is enabled\n   * @param size {@link https://threejs.org/docs/#api/en/math/Vector2 THREE.Vector2} instance of width(x), height(y)\n   */\n  public resize(size: THREE.Vector2) {\n    this._screenScale.set(360 / size.x, 180 / size.y);\n  }\n\n  /**\n   * Enable this input and add event listeners\n   * @returns {void} Nothing\n   */\n  public enable(): void {\n    if (this._enabled) return;\n    if (!this._targetEl) {\n      throw new View3DError(ERROR.MESSAGES.ADD_CONTROL_FIRST, ERROR.CODES.ADD_CONTROL_FIRST);\n    }\n\n    const targetEl = this._targetEl;\n\n    targetEl.addEventListener(EVENTS.MOUSE_DOWN, this._onMouseDown, false);\n\n    targetEl.addEventListener(EVENTS.TOUCH_START, this._onTouchStart, false);\n    targetEl.addEventListener(EVENTS.TOUCH_MOVE, this._onTouchMove, false);\n    targetEl.addEventListener(EVENTS.TOUCH_END, this._onTouchEnd, false);\n\n    this._enabled = true;\n    this._setCursor(CURSOR.GRAB);\n  }\n\n  /**\n   * Disable this input and remove all event handlers\n   * @returns {void} Nothing\n   */\n  public disable(): void {\n    if (!this._enabled || !this._targetEl) return;\n\n    const targetEl = this._targetEl;\n\n    targetEl.removeEventListener(EVENTS.MOUSE_DOWN, this._onMouseDown, false);\n    window.removeEventListener(EVENTS.MOUSE_MOVE, this._onMouseMove, false);\n    window.removeEventListener(EVENTS.MOUSE_UP, this._onMouseUp, false);\n\n    targetEl.removeEventListener(EVENTS.TOUCH_START, this._onTouchStart, false);\n    targetEl.removeEventListener(EVENTS.TOUCH_MOVE, this._onTouchMove, false);\n    targetEl.removeEventListener(EVENTS.TOUCH_END, this._onTouchEnd, false);\n\n    this._setCursor(\"\");\n    this._enabled = false;\n  }\n\n  /**\n   * Synchronize this control's state to given camera position\n   * @param camera Camera to match state\n   * @returns {void} Nothing\n   */\n  public sync(camera: Camera): void {\n    this._xMotion.reset(camera.yaw);\n    this._yMotion.reset(camera.pitch);\n  }\n\n  /**\n   * Set target element to attach event listener\n   * @param element target element\n   * @returns {void} Nothing\n   */\n  public setElement(element: HTMLElement): void {\n    this._targetEl = element;\n    this.resize(new THREE.Vector2(element.offsetWidth, element.offsetHeight));\n  }\n\n  private _setCursor(val: ValueOf<typeof CURSOR> | \"\") {\n    const targetEl = this._targetEl;\n    if (!this._useGrabCursor || !targetEl || !this._enabled) return;\n\n    targetEl.style.cursor = val;\n  }\n\n  private _onMouseDown = (evt: MouseEvent) => {\n    if (evt.button !== MOUSE_BUTTON.LEFT) return;\n\n    const targetEl = this._targetEl!;\n    evt.preventDefault();\n\n    targetEl.focus ? targetEl.focus() : window.focus();\n\n    this._prevPos.set(evt.clientX, evt.clientY);\n    window.addEventListener(EVENTS.MOUSE_MOVE, this._onMouseMove, false);\n    window.addEventListener(EVENTS.MOUSE_UP, this._onMouseUp, false);\n\n    this._setCursor(CURSOR.GRABBING);\n  }\n\n  private _onMouseMove = (evt: MouseEvent) => {\n    evt.preventDefault();\n\n    const prevPos = this._prevPos;\n    const rotateDelta = new THREE.Vector2(evt.clientX, evt.clientY)\n      .sub(prevPos)\n      .multiply(this._userScale);\n\n    if (this._scaleToElement) {\n      rotateDelta.multiply(this._screenScale);\n    }\n\n    this._xMotion.setEndDelta(rotateDelta.x);\n    this._yMotion.setEndDelta(rotateDelta.y);\n\n    prevPos.set(evt.clientX, evt.clientY);\n  }\n\n  private _onMouseUp = () => {\n    this._prevPos.set(0, 0);\n    window.removeEventListener(EVENTS.MOUSE_MOVE, this._onMouseMove, false);\n    window.removeEventListener(EVENTS.MOUSE_UP, this._onMouseUp, false);\n\n    this._setCursor(CURSOR.GRAB);\n  }\n\n  private _onTouchStart = (evt: TouchEvent) => {\n    evt.preventDefault();\n\n    const touch = evt.touches[0];\n    this._prevPos.set(touch.clientX, touch.clientY);\n  }\n\n  private _onTouchMove = (evt: TouchEvent) => {\n    // Only the one finger motion should be considered\n    if (evt.touches.length > 1) return;\n\n    if (evt.cancelable !== false) {\n      evt.preventDefault();\n    }\n    evt.stopPropagation();\n\n    const touch = evt.touches[0];\n\n    const prevPos = this._prevPos;\n    const rotateDelta = new THREE.Vector2(touch.clientX, touch.clientY)\n      .sub(prevPos)\n      .multiply(this._userScale);\n\n    if (this._scaleToElement) {\n      rotateDelta.multiply(this._screenScale);\n    }\n\n    this._xMotion.setEndDelta(rotateDelta.x);\n    this._yMotion.setEndDelta(rotateDelta.y);\n\n    prevPos.set(touch.clientX, touch.clientY);\n  }\n\n  private _onTouchEnd = (evt: TouchEvent) => {\n    const touch = evt.touches[0];\n    if (touch) {\n      this._prevPos.set(touch.clientX, touch.clientY);\n    } else {\n      this._prevPos.set(0, 0);\n    }\n  }\n}\n\nexport default RotateControl;\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nimport * as THREE from \"three\";\nimport CameraControl from \"./CameraControl\";\nimport Motion from \"./Motion\";\nimport View3DError from \"~/View3DError\";\nimport Camera from \"~/core/camera/Camera\";\nimport { getElement } from \"~/utils\";\nimport { EVENTS, MOUSE_BUTTON } from \"~/consts/event\";\nimport { CURSOR } from \"~/consts/css\";\nimport * as DEFAULT from \"~/consts/default\";\nimport * as ERROR from \"~/consts/error\";\nimport { ValueOf } from \"~/types/internal\";\n\n/**\n * Model's translation control that supports both mouse & touch\n * @category Controls\n */\nclass TranslateControl implements CameraControl {\n  // Options\n  private _useGrabCursor: boolean;\n  private _scaleToElement: boolean;\n  private _userScale: THREE.Vector2;\n\n  // Internal values\n  private _targetEl: HTMLElement | null = null;\n  private _enabled: boolean = false;\n  // Sometimes, touchstart for second finger doesn't triggered.\n  // This flag checks whether that happened\n  private _touchInitialized: boolean = false;\n  private _xMotion: Motion;\n  private _yMotion: Motion;\n  private _prevPos: THREE.Vector2 = new THREE.Vector2(0, 0);\n  private _screenSize: THREE.Vector2 = new THREE.Vector2(0, 0);\n\n  /**\n   * Control's current target element to attach event listeners\n   * @readonly\n   */\n  public get element() { return this._targetEl; }\n  /**\n   * Scale factor for translation\n   * @type THREE.Vector2\n   * @see https://threejs.org/docs/#api/en/math/Vector2\n   * @example\n   * import { TranslateControl } from \"@egjs/view3d\";\n   * const translateControl = new TranslateControl();\n   * translateControl.scale.set(2, 2);\n   */\n  public get scale() { return this._userScale; }\n  /**\n   * Whether to apply CSS style `cursor: grab` on the target element or not\n   * @default true\n   * @example\n   * import { TranslateControl } from \"@egjs/view3d\";\n   * const translateControl = new TranslateControl();\n   * translateControl.useGrabCursor = true;\n   */\n  public get useGrabCursor() { return this._useGrabCursor; }\n  /**\n   * Scale control to fit element size.\n   * When this is true, camera's pivot change will correspond same amount you've dragged.\n   * @default true\n   * @example\n   * import View3D, { TranslateControl } from \"@egjs/view3d\";\n   * const view3d = new View3D(\"#view3d-canvas\");\n   * const translateControl = new TranslateControl();\n   * translateControl.scaleToElement = true;\n   * view3d.controller.add(translateControl);\n   * view3d.resize();\n   */\n  public get scaleToElement() { return this._scaleToElement; }\n  /**\n   * Whether this control is enabled or not\n   * @readonly\n   */\n  public get enabled() { return this._enabled; }\n\n  public set scale(val: THREE.Vector2) {\n    this._userScale.copy(val);\n  }\n  public set useGrabCursor(val: boolean) {\n    if (!val) {\n      this._setCursor(\"\");\n      this._useGrabCursor = false;\n    } else {\n      this._useGrabCursor = true;\n      this._setCursor(CURSOR.GRAB);\n    }\n  }\n  public set scaleToElement(val: boolean) {\n    this._scaleToElement = val;\n  }\n\n  /**\n   * Create new TranslateControl instance\n   * @param {object} options Options\n   * @param {HTMLElement | null} [options.element] Target element.\n   * @param {function} [options.easing=(x: number) => 1 - Math.pow(1 - x, 3)] Motion's easing function.\n   * @param {THREE.Vector2} [options.scale=new THREE.Vector2(1, 1)] Scale factor for translation.\n   * @param {boolean} [options.useGrabCursor=true] Whether to apply CSS style `cursor: grab` on the target element or not.\n   * @param {boolean} [options.scaleToElement=true] Whether to scale control to fit element size.\n   * @tutorial Adding Controls\n   */\n  constructor({\n    element = DEFAULT.NULL_ELEMENT,\n    easing = DEFAULT.EASING,\n    scale = new THREE.Vector2(1, 1),\n    useGrabCursor = true,\n    scaleToElement = true,\n  } = {}) {\n    const targetEl = getElement(element);\n    if (targetEl) {\n      this.setElement(targetEl);\n    }\n    this._xMotion = new Motion({ duration: 0, range: DEFAULT.INFINITE_RANGE, easing });\n    this._yMotion = new Motion({ duration: 0, range: DEFAULT.INFINITE_RANGE, easing });\n    this._userScale = scale;\n    this._useGrabCursor = useGrabCursor;\n    this._scaleToElement = scaleToElement;\n  }\n\n  /**\n   * Destroy the instance and remove all event listeners attached\n   * This also will reset CSS cursor to intial\n   * @returns {void} Nothing\n   */\n  public destroy(): void {\n    this.disable();\n  }\n\n  /**\n   * Update control by given deltaTime\n   * @param deltaTime Number of milisec to update\n   * @returns {void} Nothing\n   */\n  public update(camera: Camera, deltaTime: number): void {\n    const screenSize = this._screenSize;\n\n    const delta = new THREE.Vector2(\n      this._xMotion.update(deltaTime),\n      this._yMotion.update(deltaTime),\n    );\n\n    const viewXDir = new THREE.Vector3(1, 0, 0).applyQuaternion(camera.threeCamera.quaternion);\n    const viewYDir = new THREE.Vector3(0, 1, 0).applyQuaternion(camera.threeCamera.quaternion);\n\n    if (this._scaleToElement) {\n      const screenScale = new THREE.Vector2(camera.renderWidth, camera.renderHeight).divide(screenSize);\n      delta.multiply(screenScale);\n    }\n\n    camera.pivot.add(viewXDir.multiplyScalar(delta.x));\n    camera.pivot.add(viewYDir.multiplyScalar(delta.y));\n  }\n\n  /**\n   * Resize control to match target size\n   * This method is only meaningful when {@link RotateControl#scaleToElementSize scaleToElementSize} is enabled\n   * @param size {@link https://threejs.org/docs/#api/en/math/Vector2 THREE.Vector2} instance of width(x), height(y)\n   */\n  public resize(size: THREE.Vector2) {\n    const screenSize = this._screenSize;\n\n    screenSize.copy(size);\n  }\n\n  /**\n   * Enable this input and add event listeners\n   * @returns {void} Nothing\n   */\n  public enable(): void {\n    if (this._enabled) return;\n    if (!this._targetEl) {\n      throw new View3DError(ERROR.MESSAGES.ADD_CONTROL_FIRST, ERROR.CODES.ADD_CONTROL_FIRST);\n    }\n\n    const targetEl = this._targetEl;\n\n    targetEl.addEventListener(EVENTS.MOUSE_DOWN, this._onMouseDown, false);\n\n    targetEl.addEventListener(EVENTS.TOUCH_START, this._onTouchStart, false);\n    targetEl.addEventListener(EVENTS.TOUCH_MOVE, this._onTouchMove, false);\n    targetEl.addEventListener(EVENTS.TOUCH_END, this._onTouchEnd, false);\n\n    targetEl.addEventListener(EVENTS.CONTEXT_MENU, this._onContextMenu, false);\n\n    this._setCursor(CURSOR.GRAB);\n\n    this._enabled = true;\n  }\n\n  /**\n   * Disable this input and remove all event handlers\n   * @returns {void} Nothing\n   */\n  public disable(): void {\n    if (!this._enabled || !this._targetEl) return;\n\n    const targetEl = this._targetEl;\n\n    targetEl.removeEventListener(EVENTS.MOUSE_DOWN, this._onMouseDown, false);\n    window.removeEventListener(EVENTS.MOUSE_MOVE, this._onMouseMove, false);\n    window.removeEventListener(EVENTS.MOUSE_UP, this._onMouseUp, false);\n\n    targetEl.removeEventListener(EVENTS.TOUCH_START, this._onTouchStart, false);\n    targetEl.removeEventListener(EVENTS.TOUCH_MOVE, this._onTouchMove, false);\n    targetEl.removeEventListener(EVENTS.TOUCH_END, this._onTouchEnd, false);\n\n    targetEl.removeEventListener(EVENTS.CONTEXT_MENU, this._onContextMenu, false);\n\n    this._setCursor(\"\");\n\n    this._enabled = false;\n  }\n\n  /**\n   * Synchronize this control's state to given camera position\n   * @param camera Camera to match state\n   * @returns {void} Nothing\n   */\n  public sync(camera: Camera): void {\n    this._xMotion.reset(0);\n    this._yMotion.reset(0);\n  }\n\n  /**\n   * Set target element to attach event listener\n   * @param element target element\n   * @returns {void} Nothing\n   */\n  public setElement(element: HTMLElement): void {\n    this._targetEl = element;\n    this.resize(new THREE.Vector2(element.offsetWidth, element.offsetHeight));\n  }\n\n  private _setCursor(val: ValueOf<typeof CURSOR> | \"\") {\n    const targetEl = this._targetEl;\n    if (!this._useGrabCursor || !targetEl) return;\n\n    targetEl.style.cursor = val;\n  }\n\n  private _onMouseDown = (evt: MouseEvent) => {\n    if (evt.button !== MOUSE_BUTTON.RIGHT) return;\n\n    const targetEl = this._targetEl!;\n    evt.preventDefault();\n\n    targetEl.focus ? targetEl.focus() : window.focus();\n\n    this._prevPos.set(evt.clientX, evt.clientY);\n    window.addEventListener(EVENTS.MOUSE_MOVE, this._onMouseMove, false);\n    window.addEventListener(EVENTS.MOUSE_UP, this._onMouseUp, false);\n\n    this._setCursor(CURSOR.GRABBING);\n  }\n\n  private _onMouseMove = (evt: MouseEvent) => {\n    evt.preventDefault();\n\n    const prevPos = this._prevPos;\n    const delta = new THREE.Vector2(evt.clientX, evt.clientY)\n      .sub(prevPos)\n      .multiply(this._userScale);\n\n    // X value is negated to match cursor direction\n    this._xMotion.setEndDelta(-delta.x);\n    this._yMotion.setEndDelta(delta.y);\n\n    prevPos.set(evt.clientX, evt.clientY);\n  }\n\n  private _onMouseUp = () => {\n    this._prevPos.set(0, 0);\n    window.removeEventListener(EVENTS.MOUSE_MOVE, this._onMouseMove, false);\n    window.removeEventListener(EVENTS.MOUSE_UP, this._onMouseUp, false);\n\n    this._setCursor(CURSOR.GRAB);\n  }\n\n  private _onTouchStart = (evt: TouchEvent) => {\n    // Only the two finger motion should be considered\n    if (evt.touches.length !== 2) return;\n    evt.preventDefault();\n\n    this._prevPos.copy(this._getTouchesMiddle(evt.touches));\n    this._touchInitialized = true;\n  }\n\n  private _onTouchMove = (evt: TouchEvent) => {\n    // Only the two finger motion should be considered\n    if (evt.touches.length !== 2) return;\n\n    if (evt.cancelable !== false) {\n      evt.preventDefault();\n    }\n    evt.stopPropagation();\n\n    const prevPos = this._prevPos;\n    const middlePoint = this._getTouchesMiddle(evt.touches);\n\n    if (!this._touchInitialized) {\n      prevPos.copy(middlePoint);\n      this._touchInitialized = true;\n      return;\n    }\n\n    const delta = new THREE.Vector2()\n      .subVectors(middlePoint, prevPos)\n      .multiply(this._userScale);\n\n    // X value is negated to match cursor direction\n    this._xMotion.setEndDelta(-delta.x);\n    this._yMotion.setEndDelta(delta.y);\n\n    prevPos.copy(middlePoint);\n  }\n\n  private _onTouchEnd = (evt: TouchEvent) => {\n    // Only the two finger motion should be considered\n    if (evt.touches.length !== 2) {\n      this._touchInitialized = false;\n      return;\n    }\n\n    // Three fingers to two fingers\n    this._prevPos.copy(this._getTouchesMiddle(evt.touches));\n    this._touchInitialized = true;\n  }\n\n  private _getTouchesMiddle(touches: TouchEvent[\"touches\"]): THREE.Vector2 {\n    return new THREE.Vector2(\n      touches[0].clientX + touches[1].clientX,\n      touches[0].clientY + touches[1].clientY,\n    ).multiplyScalar(0.5);\n  }\n\n  private _onContextMenu = (evt: MouseEvent) => {\n    evt.preventDefault();\n  }\n}\n\nexport default TranslateControl;\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nimport * as THREE from \"three\";\nimport CameraControl from \"./CameraControl\";\nimport Motion from \"./Motion\";\nimport View3DError from \"~/View3DError\";\nimport Camera from \"~/core/camera/Camera\";\nimport { getElement } from \"~/utils\";\nimport { EVENTS } from \"~/consts/event\";\nimport * as DEFAULT from \"~/consts/default\";\nimport * as ERROR from \"~/consts/error\";\n\n/**\n * Distance controller handling both mouse wheel and pinch zoom\n * @category Controls\n */\nclass DistanceControl implements CameraControl {\n  // Options\n  private _scale: number = 1;\n\n  // Internal values\n  private _targetEl: HTMLElement | null = null;\n  private _scaleModifier: number = 0.25;\n  private _motion: Motion;\n  private _prevTouchDistance: number = -1;\n  private _enabled: boolean = false;\n\n  /**\n   * Control's current target element to attach event listeners\n   * @readonly\n   */\n  public get element() { return this._targetEl; }\n  /**\n   * Scale factor of the distance\n   * @type number\n   * @example\n   * import { DistanceControl } from \"@egjs/view3d\";\n   * const distanceControl = new DistanceControl();\n   * distanceControl.scale = 2;\n   */\n  public get scale() { return this._scale; }\n  /**\n   * Whether this control is enabled or not\n   * @readonly\n   */\n  public get enabled() { return this._enabled; }\n\n  public set scale(val: number) { this._scale = val; }\n\n  /**\n   * Create new DistanceControl instance\n   * @tutorial Adding Controls\n   * @param {object} options Options\n   * @param {HTMLElement | string | null} [options.element=null] Attaching element / selector of the element.\n   * @param {number} [options.duration=500] Motion's duration.\n   * @param {object} [options.range={min: 0, max: 500}] Motion's range.\n   * @param {function} [options.easing=(x: number) => 1 - Math.pow(1 - x, 3)] Motion's easing function.\n   */\n  constructor({\n    element = DEFAULT.NULL_ELEMENT,\n    duration = DEFAULT.ANIMATION_DURATION,\n    range = DEFAULT.DISTANCE_RANGE,\n    easing = DEFAULT.EASING,\n  } = {}) {\n    const targetEl = getElement(element);\n    if (targetEl) {\n      this.setElement(targetEl);\n    }\n    this._motion = new Motion({ duration, range, easing });\n  }\n\n  /**\n   * Destroy the instance and remove all event listeners attached\n   * @returns {void} Nothing\n   */\n  public destroy(): void {\n    this.disable();\n  }\n\n  /**\n   * Update control by given deltaTime\n   * @param camera Camera to update position\n   * @param deltaTime Number of milisec to update\n   * @returns {void} Nothing\n   */\n  public update(camera: Camera, deltaTime: number): void {\n    const motion = this._motion;\n\n    camera.distance += motion.update(deltaTime);\n  }\n\n  // This is not documetned on purpose as it doesn't do nothing\n  public resize(size: THREE.Vector2) {\n    // DO NOTHING\n  }\n\n  /**\n   * Enable this input and add event listeners\n   * @returns {void} Nothing\n   */\n  public enable(): void {\n    if (this._enabled) return;\n    if (!this._targetEl) {\n      throw new View3DError(ERROR.MESSAGES.ADD_CONTROL_FIRST, ERROR.CODES.ADD_CONTROL_FIRST);\n    }\n\n    const targetEl = this._targetEl;\n\n    targetEl.addEventListener(EVENTS.WHEEL, this._onWheel, false);\n    targetEl.addEventListener(EVENTS.TOUCH_MOVE, this._onTouchMove, false);\n    targetEl.addEventListener(EVENTS.TOUCH_END, this._onTouchEnd, false);\n\n    this._enabled = true;\n  }\n\n  /**\n   * Disable this input and remove all event handlers\n   * @returns {void} Nothing\n   */\n  public disable(): void {\n    if (!this._enabled || !this._targetEl) return;\n\n    const targetEl = this._targetEl;\n\n    targetEl.removeEventListener(EVENTS.WHEEL, this._onWheel, false);\n    targetEl.removeEventListener(EVENTS.TOUCH_MOVE, this._onTouchMove, false);\n    targetEl.removeEventListener(EVENTS.TOUCH_END, this._onTouchEnd, false);\n\n    this._enabled = false;\n  }\n\n  /**\n   * Synchronize this control's state to given camera position\n   * @param camera Camera to match state\n   * @returns {void} Nothing\n   */\n  public sync(camera: Camera): void {\n    this._motion.range.min = camera.minDistance;\n    this._motion.range.max = camera.maxDistance;\n    this._motion.reset(camera.distance);\n  }\n\n  /**\n   * Set target element to attach event listener\n   * @param element target element\n   * @returns {void} Nothing\n   */\n  public setElement(element: HTMLElement): void {\n    this._targetEl = element;\n  }\n\n  private _onWheel = (evt: MouseWheelEvent) => {\n    if (evt.deltaY === 0) return;\n\n    evt.preventDefault();\n    evt.stopPropagation();\n\n    const animation = this._motion;\n    const delta = this._scale * this._scaleModifier * evt.deltaY;\n\n    animation.setEndDelta(delta);\n  }\n\n  private _onTouchMove = (evt: TouchEvent) => {\n    const touches = evt.touches;\n    if (touches.length !== 2) return;\n\n    if (evt.cancelable !== false) {\n      evt.preventDefault();\n    }\n    evt.stopPropagation();\n\n    const animation = this._motion;\n    const prevTouchDistance = this._prevTouchDistance;\n\n    const touchPoint1 = new THREE.Vector2(touches[0].pageX, touches[0].pageY);\n    const touchPoint2 = new THREE.Vector2(touches[1].pageX, touches[1].pageY);\n    const touchDiff = touchPoint1.sub(touchPoint2);\n    const touchDistance = touchDiff.length() * this._scale * this._scaleModifier;\n    const delta = -(touchDistance - prevTouchDistance);\n\n    this._prevTouchDistance = touchDistance;\n\n    if (prevTouchDistance < 0) return;\n\n    animation.setEndDelta(delta);\n  }\n\n  private _onTouchEnd = () => {\n    this._prevTouchDistance = -1;\n  }\n}\n\nexport default DistanceControl;\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nimport * as THREE from \"three\";\nimport CameraControl from \"./CameraControl\";\nimport RotateControl from \"./RotateControl\";\nimport TranslateControl from \"./TranslateControl\";\nimport DistanceControl from \"./DistanceControl\";\nimport Camera from \"~/core/camera/Camera\";\nimport View3DError from \"~/View3DError\";\nimport { getElement } from \"~/utils\";\nimport * as ERROR from \"~/consts/error\";\nimport * as DEFAULT from \"~/consts/default\";\n\n/**\n * Aggregation of {@link RotateControl}, {@link TranslateControl}, and {@link DistanceControl}.\n * @category Controls\n */\nclass OrbitControl implements CameraControl {\n  private _targetEl: HTMLElement | null;\n  private _rotateControl: RotateControl;\n  private _translateControl: TranslateControl;\n  private _distanceControl: DistanceControl;\n  private _enabled: boolean = false;\n\n  /**\n   * Control's current target element to attach event listeners\n   * @readonly\n   */\n  public get element() { return this._targetEl; }\n  /**\n   * Whether this control is enabled or not\n   * @readonly\n   */\n  public get enabled() { return this._enabled; }\n  /**\n   * {@link RotateControl} of this control\n   */\n  public get rotate() { return this._rotateControl; }\n  /**\n   * {@link TranslateControl} of this control\n   */\n  public get translate() { return this._translateControl; }\n  /**\n   * {@link DistanceControl} of this control\n   */\n  public get distance() { return this._distanceControl; }\n\n  /**\n   * Create new OrbitControl instance\n   * @param {object} options Options\n   * @param {HTMLElement | string | null} [options.element=null] Attaching element / selector of the element\n   * @param {object} [options.rotate={}] Constructor options of {@link RotateControl}\n   * @param {object} [options.translate={}] Constructor options of {@link TranslateControl}\n   * @param {object} [options.distance={}] Constructor options of {@link DistanceControl}\n   * @tutorial Adding Controls\n   */\n  constructor({\n    element = DEFAULT.NULL_ELEMENT,\n    rotate = {},\n    translate = {},\n    distance = {},\n  }: Partial<{\n    rotate: ConstructorParameters<typeof RotateControl>[0],\n    translate: ConstructorParameters<typeof TranslateControl>[0],\n    distance: ConstructorParameters<typeof DistanceControl>[0],\n    element: HTMLElement | string | null,\n  }> = {}) {\n    this._targetEl = getElement(element);\n    this._rotateControl = new RotateControl({ ...rotate, element: rotate.element || this._targetEl });\n    this._translateControl = new TranslateControl({ ...translate, element: translate.element || this._targetEl });\n    this._distanceControl = new DistanceControl({ ...distance, element: distance.element || this._targetEl });\n  }\n\n  /**\n   * Destroy the instance and remove all event listeners attached\n   * This also will reset CSS cursor to intial\n   * @returns {void} Nothing\n   */\n  public destroy(): void {\n    this.disable();\n  }\n\n  /**\n   * Update control by given deltaTime\n   * @param camera Camera to update position\n   * @param deltaTime Number of milisec to update\n   * @returns {void} Nothing\n   */\n  public update(camera: Camera, deltaTime: number): void {\n    this._rotateControl.update(camera, deltaTime);\n    this._translateControl.update(camera, deltaTime);\n    this._distanceControl.update(camera, deltaTime);\n  }\n\n  /**\n   * Resize control to match target size\n   * @param size {@link https://threejs.org/docs/#api/en/math/Vector2 THREE.Vector2} instance of width(x), height(y)\n   */\n  public resize(size: THREE.Vector2) {\n    this._rotateControl.resize(size);\n    this._translateControl.resize(size);\n    this._distanceControl.resize(size);\n  }\n\n  /**\n   * Enable this control and add event listeners\n   * @returns {void} Nothingß\n   */\n  public enable(): void {\n    if (this._enabled) return;\n    if (!this._targetEl) {\n      throw new View3DError(ERROR.MESSAGES.ADD_CONTROL_FIRST, ERROR.CODES.ADD_CONTROL_FIRST);\n    }\n\n    this._rotateControl.enable();\n    this._translateControl.enable();\n    this._distanceControl.enable();\n\n    this._enabled = true;\n  }\n\n  /**\n   * Disable this control and remove all event handlers\n   * @returns {void} Nothing\n   */\n  public disable(): void {\n    if (!this._enabled || !this._targetEl) return;\n\n    this._rotateControl.disable();\n    this._translateControl.disable();\n    this._distanceControl.disable();\n\n    this._enabled = false;\n  }\n\n  /**\n   * Synchronize this control's state to given camera position\n   * @param camera Camera to match state\n   * @returns {void} Nothing\n   */\n  public sync(camera: Camera): void {\n    this._rotateControl.sync(camera);\n    this._translateControl.sync(camera);\n    this._distanceControl.sync(camera);\n  }\n\n  /**\n   * Set target element to attach event listener\n   * @param element target element\n   * @returns {void} Nothing\n   */\n  public setElement(element: HTMLElement): void {\n    this._targetEl = element;\n    this._rotateControl.setElement(element);\n    this._translateControl.setElement(element);\n    this._distanceControl.setElement(element);\n  }\n}\n\nexport default OrbitControl;\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nimport AnimationControl from \"./AnimationControl\";\nimport AutoControl from \"./AutoControl\";\nimport CameraControl from \"./CameraControl\";\nimport Motion from \"./Motion\";\nimport OrbitControl from \"./OrbitControl\";\nimport RotateControl from \"./RotateControl\";\nimport TranslateControl from \"./TranslateControl\";\nimport DistanceControl from \"./DistanceControl\";\n\nexport {\n  AnimationControl,\n  AutoControl,\n  CameraControl,\n  Motion,\n  OrbitControl,\n  RotateControl,\n  TranslateControl,\n  DistanceControl,\n};\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nimport * as THREE from \"three\";\nimport Environment from \"./Environment\";\nimport Model from \"~/core/Model\";\nimport { getBoxPoints } from \"~/utils\";\n\n/**\n * THREE.DirectionalLight wrapper that will automatically update its shadow size to model\n * Shadow is enabled by default, use {@link AutoDirectionalLight#disableShadow disableShadow} to disable it\n * @category Environment\n */\nclass AutoDirectionalLight implements Environment {\n  private _light: THREE.DirectionalLight;\n  private _direction: THREE.Vector3; // Direction to light, from (0, 0, 0)\n\n  /**\n   * Array of lights that used in this preset\n   * @see https://threejs.org/docs/#api/en/lights/Light\n   */\n  public get objects(): THREE.Object3D[] {\n    return [this._light, this._light.target];\n  }\n\n  /**\n   * The actual THREE.DirectionalLight\n   * @type THREE#DirectionalLight\n   * @see https://threejs.org/docs/#api/en/lights/DirectionalLight\n   */\n  public get light() { return this._light; }\n\n  /**\n   * Position of the light\n   * @type THREE#Vector3\n   * @see https://threejs.org/docs/#api/en/math/Vector3\n   */\n  public get position() { return this._light.position; }\n\n  public get direction() { return this._direction; }\n\n  /**\n   * Create new instance of AutoDirectionalLight\n   * @param [color=\"#ffffff\"] Color of the light\n   * @param [intensity=1] Intensity of the light\n   * @param {object} [options={}] Additional options\n   * @param {THREE.Vector3} [options.direction=new THREE.Vector3(-1, -1, -1)] Direction of the light\n   */\n  constructor(color: string | number | THREE.Color = \"#ffffff\", intensity: number = 1, {\n    direction = new THREE.Vector3(-1, -1, -1),\n  } = {}) {\n    this._light = new THREE.DirectionalLight(color, intensity);\n\n    // Set the default position ratio of the directional light\n    const light = this._light;\n    light.castShadow = true; // Is enabled by default\n    light.shadow.mapSize.width = 2048;\n    light.shadow.mapSize.height = 2048;\n    light.matrixAutoUpdate = false;\n\n    this._direction = direction.clone().normalize();\n  }\n\n  /**\n   * Make light cast a shadow\n   */\n  public enableShadow() {\n    this._light.castShadow = true;\n  }\n\n  /**\n   * Make light don't cast a shadow\n   */\n  public disableShadow() {\n    this._light.castShadow = false;\n  }\n\n  /**\n   * Modify light's position & shadow camera size from model's bounding box\n   * @param model Model to fit size\n   * @param scale Scale factor for shadow camera size\n   */\n  public fit(model: Model, {\n    scale = 1.5,\n  } = {}) {\n    const bbox = model.bbox;\n    const light = this._light;\n    const direction = this._direction;\n    const boxSize = bbox.getSize(new THREE.Vector3()).length();\n    const boxCenter = bbox.getCenter(new THREE.Vector3());\n\n    // Position fitting\n    const newPos = new THREE.Vector3().addVectors(boxCenter, direction.clone().negate().multiplyScalar(boxSize * 0.5));\n    light.position.copy(newPos);\n    light.target.position.copy(boxCenter);\n    light.updateMatrix();\n\n    // Shadowcam fitting\n    const shadowCam = light.shadow.camera;\n    shadowCam.near = 0;\n    shadowCam.far = 2 * boxSize;\n    shadowCam.position.copy(newPos);\n    shadowCam.lookAt(boxCenter);\n\n    shadowCam.left = -1;\n    shadowCam.right = 1;\n    shadowCam.top = 1;\n    shadowCam.bottom = -1;\n\n    shadowCam.updateMatrixWorld();\n    shadowCam.updateProjectionMatrix();\n\n    const bboxPoints = getBoxPoints(bbox);\n    const projectedPoints = bboxPoints.map(position => position.project(shadowCam));\n    const screenBbox = new THREE.Box3().setFromPoints(projectedPoints);\n\n    shadowCam.left *= -scale * screenBbox.min.x;\n    shadowCam.right *= scale * screenBbox.max.x;\n    shadowCam.top *= scale * screenBbox.max.y;\n    shadowCam.bottom *= -scale * screenBbox.min.y;\n\n    shadowCam.updateProjectionMatrix();\n  }\n}\n\nexport default AutoDirectionalLight;\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nimport * as THREE from \"three\";\nimport Model from \"~/core/Model\";\nimport Environment from \"./Environment\";\n\n/**\n * Helper class to easily add shadow plane under your 3D model\n * @category Environment\n * @example\n * import View3D, { ShadowPlane } from \"@egjs/view3d\";\n *\n * const view3d = new View3D(\"#view3d-canvas\");\n * const shadowPlane = new ShadowPlane();\n * view3d.scene.addEnv(shadowPlane);\n */\nclass ShadowPlane implements Environment {\n  // Developers can change those values if they know what they're doing\n  // So I'm leaving those values public\n\n  /**\n   * Geometry of the shadow plane\n   * @see https://threejs.org/docs/#api/en/geometries/PlaneGeometry\n   */\n  public geometry: THREE.PlaneGeometry;\n  /**\n   * Material of the shadow plane\n   * @see https://threejs.org/docs/#api/en/materials/ShadowMaterial\n   */\n  public material: THREE.ShadowMaterial;\n  /**\n   * Mesh of the shadow plane\n   * @see https://threejs.org/docs/#api/en/objects/Mesh\n   */\n  public mesh: THREE.Mesh;\n\n  public get objects() { return [this.mesh]; }\n\n  /**\n   * Shadow opacity, value can be between 0(invisible) and 1(solid)\n   * @type number\n   */\n  public get opacity() {\n    return this.material.opacity;\n  }\n\n  public set opacity(val: number) {\n    this.material.opacity = val;\n  }\n\n  /**\n   * Create new shadow plane\n   * @param {object} options Options\n   * @param {number} [options.size=10000] Size of the shadow plane\n   * @param {number} [options.opacity=0.3] Opacity of the shadow\n   */\n  constructor({\n    size = 10000,\n    opacity = 0.3,\n  } = {}) {\n    this.geometry = new THREE.PlaneGeometry(size, size, 100, 100);\n    this.material = new THREE.ShadowMaterial({ opacity });\n    this.mesh = new THREE.Mesh(this.geometry, this.material);\n\n    const mesh = this.mesh;\n    mesh.rotateX(-Math.PI / 2);\n    mesh.receiveShadow = true;\n  }\n\n  /**\n   * Fit shadow plane's size & position to given model\n   * @param model Model to fit\n   */\n  public fit(model: Model, {\n    floorPosition,\n    floorRotation = new THREE.Quaternion(0, 0, 0, 1),\n  }: Partial<{\n    floorPosition: THREE.Vector3,\n    floorRotation: THREE.Quaternion,\n  }> = {}): void {\n    const modelPosition = model.scene.position;\n    const localYAxis = new THREE.Vector3(0, 1, 0).applyQuaternion(floorRotation);\n\n    // Apply position\n    if (floorPosition) {\n      // Apply a tiny offset to prevent z-fighting with original model\n      this.mesh.position.copy(floorPosition.clone().add(localYAxis.clone().multiplyScalar(0.001)));\n    } else {\n      const modelBbox = model.bbox;\n      const modelBboxYOffset = modelBbox.getCenter(new THREE.Vector3()).y - modelBbox.min.y;\n      const modelFloor = new THREE.Vector3().addVectors(\n        modelPosition,\n        // Apply a tiny offset to prevent z-fighting with original model\n        localYAxis.multiplyScalar(-modelBboxYOffset + 0.0001),\n      );\n      this.mesh.position.copy(modelFloor);\n    }\n\n    // Apply rotation\n    const rotX90 = new THREE.Quaternion().setFromEuler(new THREE.Euler(-Math.PI / 2, 0, 0));\n    const shadowRotation = new THREE.Quaternion().multiplyQuaternions(floorRotation, rotX90);\n\n    this.mesh.quaternion.copy(shadowRotation);\n    this.mesh.updateMatrix();\n  }\n}\n\nexport default ShadowPlane;\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nimport AutoDirectionalLight from \"./AutoDirectionalLight\";\nimport ShadowPlane from \"./ShadowPlane\";\n\nexport {\n  AutoDirectionalLight,\n  ShadowPlane,\n};\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nimport * as THREE from \"three\";\nimport { GLTFLoader as ThreeGLTFLoader, GLTF } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport { DRACOLoader } from \"three/examples/jsm/loaders/DRACOLoader\";\nimport Model from \"~/core/Model\";\nimport * as DEFAULT from \"~/consts/default\";\nimport View3D from \"~/View3D\";\nimport { ShadowPlane, AutoDirectionalLight } from \"~/environments\";\nimport { ModelLoadOption } from \"~/types/external\";\n\n/**\n * GLTFLoader\n * @category Loaders\n */\nclass GLTFLoader {\n  private _loader: ThreeGLTFLoader;\n  private _dracoLoader: DRACOLoader;\n\n  public get loader() { return this._loader; }\n  public get dracoLoader() { return this._dracoLoader; }\n\n  /**\n   * Create a new instance of GLTFLoader\n   */\n  constructor() {\n    this._loader = new ThreeGLTFLoader();\n\n    const loader = this._loader;\n    loader.setCrossOrigin(\"anonymous\");\n\n    const dracoLoader = new DRACOLoader();\n    dracoLoader.setDecoderPath(DEFAULT.DRACO_DECODER_URL);\n    loader.setDRACOLoader(dracoLoader);\n  }\n\n  /**\n   * Load new GLTF model from the given url\n   * @param url URL to fetch glTF/glb file\n   * @param options Options for a loaded model\n   * @returns Promise that resolves {@link Model}\n   */\n  public load(url: string, options: Partial<ModelLoadOption> = {}): Promise<Model> {\n    const loader = this._loader;\n    loader.manager = new THREE.LoadingManager();\n\n    return new Promise((resolve, reject) => {\n      loader.load(url, gltf => {\n        const model = this._parseToModel(gltf, options);\n        resolve(model);\n      }, undefined, err => {\n        reject(err);\n      });\n    });\n  }\n\n  /**\n   * Load preset generated from View3D editor.\n   * @param viewer Instance of the {@link View3D}.\n   * @param url Preset url\n   * @param {object} options Options\n   * @param {string} [options.path] Base path for additional files.\n   * @param {function} [options.onLoad] Callback which called after each model LOD is loaded.\n   */\n  public loadPreset(viewer: View3D, url: string, options: Partial<{\n    path: string;\n    onLoad: (model: Model, lodIndex: number) => any;\n  }> = {}): Promise<void> {\n    const loader = this._loader;\n    const fileLoader = new THREE.FileLoader();\n\n    return fileLoader.loadAsync(url)\n      .then(jsonRaw => {\n        const json = JSON.parse(jsonRaw);\n        const baseURL = THREE.LoaderUtils.extractUrlBase(url);\n\n        // Reset\n        viewer.scene.reset();\n        viewer.camera.reset();\n        viewer.animator.reset();\n\n        const modelOptions = json.model;\n        const cameraOptions = json.camera;\n        const environmentOptions = json.env;\n\n        viewer.camera.setDefaultPose({\n          yaw: cameraOptions.yaw,\n          pitch: cameraOptions.pitch,\n        });\n        viewer.camera.minDistance = cameraOptions.distanceRange[0];\n        viewer.camera.maxDistance = cameraOptions.distanceRange[1];\n\n        if (environmentOptions.background) {\n          viewer.scene.setBackground(new THREE.Color(environmentOptions.background));\n        }\n\n        const shadowPlane = new ShadowPlane();\n        shadowPlane.opacity = environmentOptions.shadow.opacity;\n        viewer.scene.addEnv(shadowPlane);\n\n        const ambientOptions = environmentOptions.ambient;\n        const ambient = new THREE.AmbientLight(new THREE.Color(ambientOptions.color), ambientOptions.intensity);\n        viewer.scene.addEnv(ambient);\n\n        const lightOptions = [environmentOptions.light1, environmentOptions.light2, environmentOptions.light3];\n        lightOptions.forEach(lightOption => {\n          const lightDirection = new THREE.Vector3(lightOption.x, lightOption.y, lightOption.z).negate();\n          const directional = new AutoDirectionalLight(new THREE.Color(lightOption.color), lightOption.intensity, {\n            direction: lightDirection,\n          });\n          directional.light.castShadow = lightOption.castShadow;\n          directional.light.updateMatrixWorld();\n          viewer.scene.addEnv(directional);\n        });\n\n        let isFirstLoad = true;\n        const loadFlags = json.LOD.map(() => false) as boolean[];\n        json.LOD.forEach((fileName: string, lodIndex: number) => {\n          const glbURL = this._resolveURL(`${baseURL}${fileName}`, options.path || \"\");\n\n          loader.load(glbURL, gltf => {\n            loadFlags[lodIndex] = true;\n            const higherLODLoaded = loadFlags.slice(lodIndex + 1).some(loaded => loaded);\n            if (higherLODLoaded) return;\n\n            const model = this._parseToModel(gltf);\n\n            viewer.display(model, {\n              size: modelOptions.size,\n              resetView: isFirstLoad,\n            });\n            isFirstLoad = false;\n\n            model.castShadow = modelOptions.castShadow;\n            model.receiveShadow = modelOptions.receiveShadow;\n\n            if (options.onLoad) {\n              options.onLoad(model, lodIndex);\n            }\n          }, undefined, err => {\n            throw err;\n          });\n        });\n        return;\n      });\n  }\n\n  /**\n   * Load new GLTF model from the given files\n   * @param files Files that has glTF/glb and all its associated resources like textures and .bin data files\n   * @param options Options for a loaded model\n   * @returns Promise that resolves {@link Model}\n   */\n  public loadFromFiles(files: File[], options: Partial<ModelLoadOption> = {}): Promise<Model> {\n    const objectURLs: string[] = [];\n    const revokeURLs = () => {\n      objectURLs.forEach(url => {\n        URL.revokeObjectURL(url);\n      });\n    };\n\n    return new Promise((resolve, reject) => {\n      if (files.length <= 0) {\n        reject(new Error(\"No files found\"));\n        return;\n      }\n\n      const gltfFile = files.find(file => /\\.(gltf|glb)$/i.test(file.name));\n      if (!gltfFile) {\n        reject(new Error(\"No glTF file found\"));\n        return;\n      }\n\n      const filesMap = new Map<string, File>();\n      files.forEach(file => {\n        filesMap.set(file.name, file);\n      });\n\n      const gltfURL = URL.createObjectURL(gltfFile);\n\n      objectURLs.push(gltfURL);\n\n      const manager = new THREE.LoadingManager();\n      manager.setURLModifier(fileURL => {\n        const fileNameResult = /[^\\/|\\\\]+$/.exec(fileURL);\n        const fileName = (fileNameResult && fileNameResult[0]) || \"\";\n\n        if (filesMap.has(fileName)) {\n          const blob = filesMap.get(fileName);\n          const blobURL = URL.createObjectURL(blob);\n          objectURLs.push(blobURL);\n\n          return blobURL;\n        }\n\n        return fileURL;\n      });\n\n      const loader = this._loader;\n      loader.manager = manager;\n      loader.load(gltfURL, gltf => {\n        const model = this._parseToModel(gltf, options);\n        resolve(model);\n        revokeURLs();\n      }, undefined, err => {\n        reject(err);\n        revokeURLs();\n      });\n    });\n  }\n\n  /**\n   * Parse from array buffer\n   * @param data glTF asset to parse, as an ArrayBuffer or JSON string.\n   * @param path The base path from which to find subsequent glTF resources such as textures and .bin data files.\n   * @param options Options for a loaded model\n   * @returns Promise that resolves {@link Model}\n   */\n  public parse(data: ArrayBuffer, path: string, options: Partial<ModelLoadOption> = {}): Promise<Model> {\n    const loader = this._loader;\n    loader.manager = new THREE.LoadingManager();\n\n    return new Promise((resolve, reject) => {\n      loader.parse(data, path, gltf => {\n        const model = this._parseToModel(gltf, options);\n        resolve(model);\n      }, err => {\n        reject(err);\n      });\n    });\n  }\n\n  private _parseToModel(gltf: GLTF, {\n    fixSkinnedBbox = false,\n  }: Partial<ModelLoadOption> = {}): Model {\n    const model = new Model({\n      scenes: gltf.scenes,\n      animations: gltf.animations,\n      fixSkinnedBbox,\n    });\n\n    model.meshes.forEach(mesh => {\n      const materials = Array.isArray(mesh.material)\n        ? mesh.material\n        : [mesh.material];\n\n      materials.forEach((mat: THREE.MeshStandardMaterial) => {\n        if (mat.map) {\n          mat.map.encoding = THREE.sRGBEncoding;\n        }\n      });\n    });\n\n    return model;\n  }\n\n  // Grabbed from three.js/GLTFLoader\n  // Original code: https://github.com/mrdoob/three.js/blob/master/examples/jsm/loaders/GLTFLoader.js#L1221\n  // License: MIT\n  private _resolveURL(url: string, path: string): string {\n    // Invalid URL\n    if ( typeof url !== \"string\" || url === \"\" ) return \"\";\n\n    // Host Relative URL\n    if ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n      path = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, \"$1\" );\n\n    }\n\n    // Absolute URL http://,https://,//\n    if ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n    // Data URI\n    if ( /^data:.*,.*$/i.test( url ) ) return url;\n\n    // Blob URL\n    if ( /^blob:.*$/i.test( url ) ) return url;\n\n    // Relative URL\n    return path + url;\n  }\n}\n\nexport default GLTFLoader;\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nimport * as THREE from \"three\";\nimport { RGBELoader } from \"three/examples/jsm/loaders/RGBELoader\";\nimport Renderer from \"~/core/Renderer\";\n\n/**\n * Texture loader\n * @category Loaders\n */\nclass TextureLoader {\n  private _renderer: Renderer;\n\n  /**\n   * Create new TextureLoader instance\n   * @param renderer {@link Renderer} instance of View3D\n   */\n  constructor(renderer: Renderer) {\n    this._renderer = renderer;\n  }\n\n  /**\n   * Create new {@link https://threejs.org/docs/index.html#api/en/textures/Texture Texture} with given url\n   * Texture's {@link https://threejs.org/docs/index.html#api/en/textures/Texture.flipY flipY} property is `true` by Three.js's policy, so be careful when using it as a map texture.\n   * @param url url to fetch image\n   */\n  public load(url: string): Promise<THREE.Texture> {\n    return new Promise((resolve, reject) => {\n      const loader = new THREE.TextureLoader();\n      loader.load(url, resolve, undefined, reject);\n    });\n  }\n\n  /**\n   * Create new {@link https://threejs.org/docs/#api/en/renderers/WebGLCubeRenderTarget WebGLCubeRenderTarget} with given equirectangular image url\n   * Be sure that equirectangular image has height of power of 2, as it will be resized if it isn't\n   * @param url url to fetch equirectangular image\n   * @returns WebGLCubeRenderTarget created\n   */\n  public loadEquirectagularTexture(url: string): Promise<THREE.WebGLCubeRenderTarget> {\n    return new Promise((resolve, reject) => {\n      const loader = new THREE.TextureLoader();\n      loader.load(url, skyboxTexture => {\n        resolve(this._equirectToCubemap(skyboxTexture));\n      }, undefined, reject);\n    });\n  }\n\n  /**\n   * Create new {@link https://threejs.org/docs/#api/en/textures/CubeTexture CubeTexture} with given cubemap image urls\n   * Image order should be: px, nx, py, ny, pz, nz\n   * @param urls cubemap image urls\n   * @returns CubeTexture created\n   */\n  public loadCubeTexture(urls: string[]): Promise<THREE.CubeTexture> {\n    return new Promise((resolve, reject) => {\n      const loader = new THREE.CubeTextureLoader();\n      loader.load(urls, resolve, undefined, reject);\n    });\n  }\n\n  public loadHDRTexture(url: string, isEquirectangular: false): Promise<THREE.DataTexture>;\n\n  public loadHDRTexture(url: string, isEquirectangular: true): Promise<THREE.WebGLCubeRenderTarget>;\n\n  /**\n   * Create new texture with given HDR(RGBE) image url\n   * @param url image url\n   * @param isEquirectangular Whether to read this image as a equirectangular texture\n   */\n  public loadHDRTexture(url: string, isEquirectangular: boolean = true): Promise<THREE.DataTexture | THREE.WebGLCubeRenderTarget> {\n    return new Promise((resolve, reject) => {\n      const loader = new RGBELoader();\n      loader.load(url, texture => {\n        if (isEquirectangular) {\n          resolve(this._equirectToCubemap(texture));\n        } else {\n          resolve(texture);\n        }\n      }, undefined, reject);\n    });\n  }\n\n  private _equirectToCubemap(texture: THREE.Texture): THREE.WebGLCubeRenderTarget {\n    return new THREE.WebGLCubeRenderTarget(texture.image.height)\n      .fromEquirectangularTexture(this._renderer.threeRenderer, texture);\n  }\n}\n\nexport default TextureLoader;\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nimport GLTFLoader from \"./GLTFLoader\";\nimport TextureLoader from \"./TextureLoader\";\n\nexport {\n  GLTFLoader,\n  TextureLoader,\n};\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\ndeclare global {\n  interface Window {\n    XRSession: any;\n    XRDOMOverlayState: any;\n  }\n}\n\nexport const QUICKLOOK_SUPPORTED = (() => {\n  const anchorEl = document.createElement(\"a\");\n  return anchorEl.relList && anchorEl.relList.supports && anchorEl.relList.supports(\"ar\");\n})();\nexport const WEBXR_SUPPORTED = navigator.xr && navigator.xr.isSessionSupported;\nexport const HIT_TEST_SUPPORTED = window.XRSession && window.XRSession.prototype.requestHitTestSource;\nexport const DOM_OVERLAY_SUPPORTED = window.XRDOMOverlayState != null;\n\nexport const SESSION = {\n  AR: \"immersive-ar\",\n  VR: \"immersive-ar\",\n};\n\nexport const REFERENCE_SPACE = {\n  LOCAL: \"local\",\n  LOCAL_FLOOR: \"local-floor\",\n  VIEWER: \"viewer\",\n};\n\nexport const EVENTS = {\n  SELECT_START: \"selectstart\",\n  SELECT: \"select\",\n  SELECT_END: \"selectend\",\n};\n\nexport const INPUT_PROFILE = {\n  TOUCH: \"generic-touchscreen\",\n};\n\nexport const FEATURES = {\n  HIT_TEST: { requiredFeatures: [\"hit-test\"] },\n  DOM_OVERLAY: (root: HTMLElement) => ({\n    optionalFeatures: [\"dom-overlay\"],\n    domOverlay: { root },\n  }),\n};\n\n// For type definition\nexport const EMPTY_FEATURES: {\n  requiredFeatures?: any[],\n  optionalFeatures?: any[],\n  [key: string]: any,\n} = {};\n\nexport const SCENE_VIEWER = {\n  INTENT_AR_CORE: (params: string, fallback?: string) => `intent://arvr.google.com/scene-viewer/1.1?${params}#Intent;scheme=https;package=com.google.ar.core;action=android.intent.action.VIEW;${fallback ? `S.browser_fallback_url=${fallback};` : \"\"}end;`,\n  INTENT_SEARCHBOX: (params: string, fallback: string) => `intent://arvr.google.com/scene-viewer/1.1?${params}#Intent;scheme=https;package=com.google.android.googlequicksearchbox;action=android.intent.action.VIEW;${fallback ? `S.browser_fallback_url=${fallback};` : \"\"}end;`,\n  FALLBACK_DEFAULT: (params: string) => `https://arvr.google.com/scene-viewer?${params}`,\n};\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nimport * as XR from \"~/consts/xr\";\n\n/**\n * Manager for WebXR dom-overlay feature\n * @category XR\n */\nclass DOMOverlay {\n  private _root: HTMLElement;\n  private _loadingEl: HTMLElement | null;\n\n  /**\n   * Overlay root element\n   */\n  public get root() { return this._root; }\n  /**\n   * Loading indicator element, if there's any\n   */\n  public get loadingElement() { return this._loadingEl; }\n  /**\n   * {@link https://developer.mozilla.org/en-US/docs/Web/API/XRSessionInit XRSessionInit} object for dom-overlay feature\n   */\n  public get features() { return XR.FEATURES.DOM_OVERLAY(this._root); }\n\n  /**\n   * Create new DOMOverlay instance\n   * @param {object} [options] Options\n   * @param {HTMLElement} [options.root] Overlay root element\n   * @param {HTMLElement | null} [options.loadingEl] Model loading indicator element which will be invisible after placing model on the floor.\n   */\n  constructor(options: {\n    root: HTMLElement,\n    loadingEl: HTMLElement | null,\n  }) {\n    this._root = options.root;\n    this._loadingEl = options.loadingEl;\n  }\n\n  /**\n   * Return whether dom-overlay feature is available\n   */\n  public isAvailable() {\n    return XR.DOM_OVERLAY_SUPPORTED;\n  }\n\n  /**\n   * Show loading indicator, if there's any\n   */\n  public showLoading() {\n    if (!this._loadingEl) return;\n\n    this._loadingEl.style.visibility = \"visible\";\n  }\n\n  /**\n   * Hide loading indicator, if there's any\n   */\n  public hideLoading() {\n    if (!this._loadingEl) return;\n\n    this._loadingEl.style.visibility = \"hidden\";\n  }\n}\n\nexport default DOMOverlay;\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nimport * as THREE from \"three\";\nimport View3D from \"~/View3D\";\nimport XRSession from \"./XRSession\";\nimport DOMOverlay from \"./features/DOMOverlay\";\nimport EventEmitter from \"~/core/EventEmitter\";\nimport { getElement, merge } from \"~/utils\";\nimport * as DEFAULT from \"~/consts/default\";\nimport * as XR from \"~/consts/xr\";\nimport { XRContext, XRRenderContext } from \"~/types/internal\";\n\ndeclare global {\n  interface Navigator { xr: any; }\n}\n\n/**\n * Options for WebARSession\n * @category XR\n * @interface\n * @property {object} [features={}] You can set additional features(see {@link https://developer.mozilla.org/en-US/docs/Web/API/XRSessionInit XRSessionInit}) with this option.\n * @property {number} [maxModelSize=Infinity] If model's size is too big to show on AR, you can restrict it's size with this option. Model with size bigger than this value will clamped to this value.\n * @property {HTMLElement|string|null} [overlayRoot=null] If this value is set, dom-overlay feature will be automatically added for this session. And this value will be used as dom-overlay's root element. You can set either HTMLElement or query selector for that element.\n * @property {HTMLElement|string|null} [loadingEl=null] This will be used for loading indicator element, which will automatically invisible after placing 3D model by setting `visibility: hidden`. This element must be placed under `overlayRoot`. You can set either HTMLElement or query selector for that element.\n * @property {boolean} [forceOverlay=false] Whether to apply `dom-overlay` feature as required. If set to false, `dom-overlay` will be optional feature.\n */\nexport interface WebARSessionOption {\n  features: typeof XR.EMPTY_FEATURES;\n  maxModelSize: number;\n  overlayRoot: HTMLElement | string | null;\n  loadingEl: HTMLElement | string | null;\n  forceOverlay: boolean;\n}\n\n/**\n * WebXR based abstract AR session class\n * @category XR\n * @fires WebARSession#start\n * @fires WebARSession#end\n * @fires WebARSession#canPlace\n * @fires WebARSession#modelPlaced\n */\nabstract class WebARSession extends EventEmitter<{\n  start: void;\n  end: void;\n  canPlace: void;\n  modelPlaced: void;\n}> implements XRSession {\n  /**\n   * Whether it's webxr-based session or not\n   * @type true\n   */\n  public readonly isWebXRSession = true;\n\n  protected _session: any = null;\n  protected _domOverlay: DOMOverlay | null = null;\n  // As \"dom-overlay\" is an optional feature by default,\n  // user can choose whether to show XR only when this feature is available\n  protected _forceOverlay: boolean;\n  protected _features: typeof XR.EMPTY_FEATURES;\n  protected _maxModelSize: number;\n\n  /**\n   * {@link https://developer.mozilla.org/en-US/docs/Web/API/XRSession XRSession} of this session\n   * This value is only available after calling enter\n   */\n  public get session() { return this._session; }\n  /**\n   * {@link https://developer.mozilla.org/en-US/docs/Web/API/XRSessionInit XRSessionInit} object for this session.\n   */\n  public get features() { return this._features; }\n\n  /**\n   * Emitted when session is started.\n   * @event start\n   * @category XR\n   * @memberof WebARSession\n   * @type void\n   */\n  /**\n   * Emitted when session is ended.\n   * @event end\n   * @category XR\n   * @memberof WebARSession\n   * @type void\n   */\n  /**\n   * Emitted when model can be placed on the space.\n   * @event canPlace\n   * @category XR\n   * @memberof WebARSession\n   * @type void\n   */\n  /**\n   * Emitted when model is placed.\n   * @event modelPlaced\n   * @category XR\n   * @memberof WebARSession\n   * @type void\n   */\n\n  /**\n   * Create new instance of WebARSession\n   * @param {object} [options={}] Options\n   * @param {object} [options.features={}] You can set additional features(see {@link https://developer.mozilla.org/en-US/docs/Web/API/XRSessionInit XRSessionInit}) with this option.\n   * @param {number} [options.maxModelSize=Infinity] If model's size is too big to show on AR, you can restrict it's size with this option. Model with size bigger than this value will clamped to this value.\n   * @param {HTMLElement|string|null} [options.overlayRoot=null] If this value is set, dom-overlay feature will be automatically added for this session. And this value will be used as dom-overlay's root element. You can set either HTMLElement or query selector for that element.\n   * @param {HTMLElement|string|null} [options.loadingEl=null] This will be used for loading indicator element, which will automatically invisible after placing 3D model by setting `visibility: hidden`. This element must be placed under `overlayRoot`. You can set either HTMLElement or query selector for that element.\n   * @param {boolean} [options.forceOverlay=false] Whether to apply `dom-overlay` feature as required. If set to false, `dom-overlay` will be optional feature.\n   */\n  constructor({\n    features: userFeatures = XR.EMPTY_FEATURES, // https://developer.mozilla.org/en-US/docs/Web/API/XRSessionInit\n    maxModelSize = Infinity,\n    overlayRoot = DEFAULT.NULL_ELEMENT,\n    loadingEl = DEFAULT.NULL_ELEMENT,\n    forceOverlay = false,\n  }: Partial<WebARSessionOption> = {}) {\n    super();\n    const overlayEl = getElement(overlayRoot);\n\n    const features: Array<typeof XR.EMPTY_FEATURES> = [];\n    if (overlayEl) {\n      this._domOverlay = new DOMOverlay({\n        root: overlayEl,\n        loadingEl: getElement(loadingEl, overlayEl),\n      });\n      features.push(this._domOverlay.features);\n    }\n\n    this._features = merge({}, ...features, userFeatures);\n    this._maxModelSize = maxModelSize;\n    this._forceOverlay = forceOverlay;\n  }\n\n  /**\n   * Return availability of this session\n   * @returns {Promise} A Promise that resolves availability of this session(boolean).\n   */\n  public isAvailable() {\n    const domOverlay = this._domOverlay;\n\n    if (!XR.WEBXR_SUPPORTED || !XR.HIT_TEST_SUPPORTED) return Promise.resolve(false);\n    if (this._forceOverlay) {\n      if (domOverlay && !domOverlay.isAvailable()) return Promise.resolve(false);\n    }\n\n    return navigator.xr.isSessionSupported(XR.SESSION.AR);\n  }\n\n  /**\n   * Enter session\n   * @param view3d Instance of the View3D\n   * @returns {Promise}\n   */\n  public enter(view3d: View3D) {\n    // Model not loaded yet\n    if (!view3d.model) return Promise.reject(\"3D Model is not loaded\");\n\n    const model = view3d.model;\n\n    return navigator.xr.requestSession(XR.SESSION.AR, this._features)\n      .then(session => {\n        const renderer = view3d.renderer;\n        const threeRenderer = renderer.threeRenderer;\n        const xrContext = {\n          view3d,\n          model,\n          session,\n        };\n\n        // Cache original values\n        const originalMatrix = model.scene.matrix.clone();\n        const originalModelSize = model.size;\n        const originalBackground = view3d.scene.root.background;\n\n        const arModelSize = Math.min(model.originalSize, this._maxModelSize);\n        model.size = arModelSize;\n        model.moveToOrigin();\n        view3d.scene.setBackground(null);\n\n        // Cache original model rotation\n        threeRenderer.xr.setReferenceSpaceType(XR.REFERENCE_SPACE.LOCAL);\n        threeRenderer.xr.setSession(session);\n        threeRenderer.setPixelRatio(1);\n\n        this.onStart(xrContext);\n        session.addEventListener(\"end\", () => {\n          this.onEnd(xrContext);\n\n          // Restore original values\n          model.scene.matrix.copy(originalMatrix);\n          model.scene.matrix.decompose(model.scene.position, model.scene.quaternion, model.scene.scale);\n          model.size = originalModelSize;\n          model.moveToOrigin();\n\n          view3d.scene.update(model);\n          view3d.scene.setBackground(originalBackground);\n\n          // Restore renderer values\n          threeRenderer.xr.setSession(null);\n          threeRenderer.setPixelRatio(window.devicePixelRatio);\n\n          // Restore render loop\n          renderer.stopAnimationLoop();\n          renderer.setAnimationLoop(view3d.renderLoop);\n        }, { once: true });\n\n        // Set XR session render loop\n        renderer.stopAnimationLoop();\n        renderer.setAnimationLoop((delta, frame) => {\n          const xrCam = threeRenderer.xr.getCamera(new THREE.PerspectiveCamera()) as THREE.PerspectiveCamera;\n          const referenceSpace = threeRenderer.xr.getReferenceSpace();\n          const glLayer = session.renderState.baseLayer;\n          const size = {\n            width: glLayer.framebufferWidth,\n            height: glLayer.framebufferHeight,\n          };\n          const renderContext: XRRenderContext = {\n            ...xrContext,\n            delta,\n            frame,\n            referenceSpace,\n            xrCam,\n            size,\n          };\n\n          this._beforeRender(renderContext);\n          view3d.renderLoop(delta);\n        });\n      });\n  }\n\n  /**\n   * Exit this session\n   * @param view3d Instance of the View3D\n   */\n  public exit(view3d: View3D) {\n    const session = view3d.renderer.threeRenderer.xr.getSession();\n    session.end();\n  }\n\n  public onStart(ctx: XRContext) {\n    this._session = ctx.session;\n    this._domOverlay?.showLoading();\n    this.emit(\"start\");\n  }\n\n  public onEnd(ctx: XRContext) {\n    this._session = null;\n    this._domOverlay?.hideLoading();\n    this.emit(\"end\");\n  }\n\n  protected abstract _beforeRender(ctx: XRRenderContext): void;\n}\n\nexport default WebARSession;\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nimport * as XR from \"~/consts/xr\";\n\n/**\n * Manager for WebXR hit-test feature\n * @category XR\n */\nclass HitTest {\n  private _source: any = null;\n\n  /**\n   * Return whether hit-test is ready\n   */\n  public get ready() { return this._source != null; }\n  /**\n   * {@link https://developer.mozilla.org/en-US/docs/Web/API/XRSessionInit XRSessionInit} object for hit-test feature\n   */\n  public get features() { return XR.FEATURES.HIT_TEST; }\n\n  /**\n   * Destroy instance\n   */\n  public destroy() {\n    if (this._source) {\n      this._source.cancel();\n      this._source = null;\n    }\n  }\n\n  /**\n   * Initialize hit-test feature\n   * @param {XRSession} session XRSession instance\n   */\n  public init(session: any) {\n    session.requestReferenceSpace(XR.REFERENCE_SPACE.VIEWER).then(referenceSpace => {\n      session.requestHitTestSource({ space: referenceSpace }).then(source => {\n        this._source = source;\n      });\n    });\n  }\n\n  /**\n   * Return whether hit-test feature is available\n   */\n  public isAvailable() {\n    return XR.HIT_TEST_SUPPORTED;\n  }\n\n  /**\n   * Get hit-test results\n   * @param {XRFrame} frame XRFrame instance\n   */\n  public getResults(frame: any) {\n    return frame.getHitTestResults(this._source);\n  }\n}\n\nexport default HitTest;\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\n// Browser related constants\n\nexport const IS_IOS = /iPad|iPhone|iPod/.test(navigator.userAgent)\n  || (navigator.platform === \"MacIntel\" && navigator.maxTouchPoints > 1);\n\nexport const IS_ANDROID = /android/i.test(navigator.userAgent);\n\nexport const IS_SAFARI = /safari/i.test(navigator.userAgent);\n\n// tslint:disable-next-line naming-convention\nexport const Time = typeof performance === \"undefined\" ? Date : performance;\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nimport EventEmitter from \"./EventEmitter\";\nimport { Time } from \"~/consts/browser\";\nimport * as DEFAULT from \"~/consts/default\";\nimport * as EASING from \"~/consts/easing\";\nimport { circulate } from \"~/utils\";\n\n/**\n * Fires for every frame when animation is active.\n * @type object\n * @property {object} event Event object.\n * @property {number} [event.progress] Current animation progress value.\n * Value is ranged from 0(start) to 1(end).\n * @property {number} [event.easedProgress] Eased progress value.\n * @event Animation#progress\n */\n\n /**\n  * @type object\n  * @property {object} event Event object.\n  * @property {number} [event.progress] Current animation progress value.\n  * Value is ranged from 0(start) to 1(end).\n  * @property {number} [event.easedProgress] Eased progress value.\n  */\n\n/**\n * Fires when animation ends.\n * @type void\n * @event Animation#finish\n */\n\n/**\n * Self-running animation\n * @category Core\n */\nclass Animation extends EventEmitter<{\n  progress: (event: { progress: number, easedProgress: number }) => any,\n  loop: (event: { progress: number, easedProgress: number, loopIndex: number }) => any,\n  finish: void,\n}> {\n  // Options\n  private _ctx: any; // Window or XRSession\n  private _repeat: number;\n  private _duration: number;\n  private _easing: (x: number) => number;\n\n  // Internal state\n  private _rafId: number;\n  private _loopCount: number;\n  private _time: number;\n  private _clock: number;\n\n  /**\n   * Create new instance of the Animation\n   * @param {object} [options={}] Options\n   */\n  constructor({\n    context = window,\n    repeat = 0,\n    duration = DEFAULT.ANIMATION_DURATION,\n    easing = EASING.EASE_OUT_CUBIC,\n  }: Partial<{\n    context: any,\n    repeat: number,\n    duration: number,\n    easing: (x: number) => number;\n  }> = {}) {\n    super();\n\n    // Options\n    this._repeat = repeat;\n    this._duration = duration;\n    this._easing = easing;\n\n    // Internal States\n    this._ctx = context;\n    this._rafId = -1;\n    this._time = 0;\n    this._clock = 0;\n    this._loopCount = 0;\n  }\n\n  public start() {\n    if (this._rafId >= 0) return;\n\n    // This guarantees \"progress\" event with progress = 0 on first start\n    this._updateClock();\n    this._loop();\n  }\n\n  public stop() {\n    if (this._rafId < 0) return;\n\n    this._loopCount = 0;\n    this._stopLoop();\n  }\n\n  public pause() {\n    if (this._rafId < 0) return;\n\n    this._stopLoop();\n  }\n\n  private _loop = () => {\n    const delta = this._getDeltaTime();\n    const duration = this._duration;\n    this._time += delta;\n\n    const loopIncrease = Math.floor(this._time / duration);\n    this._time = circulate(this._time, 0, duration);\n\n    const progress = this._time / duration;\n    const progressEvent = {\n      progress,\n      easedProgress: this._easing(progress),\n    };\n    this.emit(\"progress\", progressEvent);\n\n    for (let loopIdx = 0; loopIdx < loopIncrease; loopIdx++) {\n      this._loopCount++;\n      if (this._loopCount > this._repeat) {\n        this.emit(\"finish\");\n        this.stop();\n        return;\n      } else {\n        this.emit(\"loop\", {\n          ...progressEvent,\n          loopIndex: this._loopCount,\n        });\n      }\n    }\n\n    this._rafId = this._ctx.requestAnimationFrame(this._loop);\n  }\n\n  private _stopLoop() {\n    this._ctx.cancelAnimationFrame(this._rafId);\n    this._rafId = -1;\n  }\n\n  private _getDeltaTime() {\n    const lastTime = this._clock;\n    this._updateClock();\n    return this._clock - lastTime;\n  }\n\n  private _updateClock() {\n    this._clock = Time.now();\n  }\n}\n\nexport default Animation;\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nimport * as THREE from \"three\";\n\n/**\n * Options for {@link RotationIndicator}\n * @category Controls-AR\n * @interface\n * @property {string | number | THREE.Color} [ringColor=0xffffff] Ring color\n * @property {string | number | THREE.Color} [axisColor=0xffffff] Axis color\n */\nexport interface RotationIndicatorOption {\n  ringColor: string | number | THREE.Color;\n  axisColor: string | number | THREE.Color;\n}\n\n/**\n * Rotation indicator for ARHoverSession\n * @category Controls-AR\n */\nclass RotationIndicator {\n  private _ring: THREE.Mesh;\n  private _axis: THREE.Line;\n  private _obj: THREE.Group;\n\n  /**\n   * {@link https://threejs.org/docs/index.html#api/en/objects/Group THREE.Group} object that contains ring & axis.\n   */\n  public get object() { return this._obj; }\n\n  /**\n   * Create new RotationIndicator\n   * @param {RotationIndicatorOption} [options={}] Options\n   */\n  constructor({\n    ringColor = 0xffffff,\n    axisColor = 0xffffff,\n  }: Partial<RotationIndicatorOption> = {}) {\n    const ringGeometry = new THREE.RingGeometry(0.99, 1, 150, 1, 0, Math.PI * 2);\n    const ringMaterial = new THREE.MeshBasicMaterial({ color: ringColor, side: THREE.DoubleSide });\n\n    this._ring = new THREE.Mesh(ringGeometry, ringMaterial);\n\n    const axisVertices = [\n      new THREE.Vector3(0, 0, -1000),\n      new THREE.Vector3(0, 0, +1000),\n    ];\n    const axisGeometry = new THREE.BufferGeometry().setFromPoints(axisVertices);\n    const axisMaterial = new THREE.LineBasicMaterial({ color: axisColor });\n\n    this._axis = new THREE.Line(axisGeometry, axisMaterial);\n\n    this._obj = new THREE.Group();\n    this._obj.add(this._ring);\n    this._obj.add(this._axis);\n\n    this.hide();\n  }\n\n  /**\n   * Show indicator\n   */\n  public show() {\n    this._obj.visible = true;\n  }\n\n  /**\n   * Hide indicator\n   */\n  public hide() {\n    this._obj.visible = false;\n  }\n\n  /**\n   * Change the position of the indicator\n   * @param position New position\n   */\n  public updatePosition(position: THREE.Vector3) {\n    this._obj.position.copy(position);\n  }\n\n  /**\n   * Update scale of the ring\n   * @param scale New scale\n   */\n  public updateScale(scale: number) {\n    this._ring.scale.setScalar(scale);\n  }\n\n  /**\n   * Update indicator's rotation\n   * @param rotation Quaternion value set as new rotation.\n   */\n  public updateRoation(rotation: THREE.Quaternion) {\n    this._obj.quaternion.copy(rotation);\n  }\n}\n\nexport default RotationIndicator;\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nimport * as THREE from \"three\";\nimport Motion from \"~/controls/Motion\";\nimport RotationIndicator from \"../ui/RotationIndicator\";\nimport * as DEFAULT from \"~/consts/default\";\nimport * as TOUCH from \"~/consts/touch\";\nimport { XRRenderContext, XRContext, XRInputs } from \"~/types/internal\";\nimport { getRotationAngle } from \"~/utils\";\nimport ARControl from \"./ARControl\";\n\n/**\n * Options for {@link ARSwirlControl}\n * @category Controls-AR\n * @interface\n * @property {number} [scale=1] Scale(speed) factor of the rotation\n * @property {boolean} [showIndicator=true] Whether to show rotation indicator or not.\n */\nexport interface ARSwirlControlOption {\n  scale: number;\n  showIndicator: boolean;\n}\n\n/**\n * One finger swirl control on single axis\n * @category Controls-AR\n */\nclass ARSwirlControl implements ARControl {\n  /**\n   * Current rotation value\n   */\n  public readonly rotation = new THREE.Quaternion();\n\n  // Options\n  private _userScale: number;\n\n  // Internal States\n  private _axis = new THREE.Vector3(0, 1, 0);\n  private _enabled = true;\n  private _active = false;\n\n  private _prevPos = new THREE.Vector2();\n  private _fromQuat = new THREE.Quaternion();\n  private _toQuat = new THREE.Quaternion();\n\n  private _motion: Motion;\n  private _rotationIndicator: RotationIndicator | null;\n\n  /**\n   * Whether this control is enabled or not.\n   * @readonly\n   */\n  public get enabled() { return this._enabled; }\n  /**\n   * Scale(speed) factor of this control.\n   */\n  public get scale() { return this._userScale; }\n\n  public set scale(val: number) { this._userScale = val; }\n\n  /**\n   * Create new ARSwirlControl\n   * @param {ARSwirlControlOption} [options={}] Options\n   */\n  constructor({\n    scale = 1,\n    showIndicator = true,\n  }: Partial<ARSwirlControlOption> = {}) {\n    this._motion = new Motion({ range: DEFAULT.INFINITE_RANGE });\n    this._userScale = scale;\n\n    if (showIndicator) {\n      this._rotationIndicator = new RotationIndicator();\n    }\n  }\n\n  public init({ view3d }: XRRenderContext) {\n    const initialRotation = view3d.model!.scene.quaternion;\n    this.updateRotation(initialRotation);\n\n    if (this._rotationIndicator) {\n      view3d.scene.add(this._rotationIndicator.object);\n    }\n  }\n\n  public destroy({ view3d }: XRContext) {\n    if (this._rotationIndicator) {\n      view3d.scene.remove(this._rotationIndicator.object);\n    }\n  }\n\n  public updateRotation(rotation: THREE.Quaternion) {\n    this.rotation.copy(rotation);\n    this._fromQuat.copy(rotation);\n    this._toQuat.copy(rotation);\n  }\n\n  /**\n   * Enable this control\n   */\n  public enable() {\n    this._enabled = true;\n  }\n\n  /**\n   * Disable this control\n   */\n  public disable() {\n    this._enabled = false;\n  }\n\n  public activate({ view3d }: XRRenderContext, gesture: TOUCH.GESTURE) {\n    if (!this._enabled) return;\n\n    this._active = true;\n\n    const model = view3d.model!;\n    const rotationIndicator = this._rotationIndicator;\n\n    if (rotationIndicator) {\n      rotationIndicator.show();\n      rotationIndicator.updatePosition(model.bbox.getCenter(new THREE.Vector3()));\n      rotationIndicator.updateScale(model.size / 2);\n      rotationIndicator.updateRoation(model.scene.quaternion);\n    }\n  }\n\n  public deactivate() {\n    this._active = false;\n\n    if (this._rotationIndicator) {\n      this._rotationIndicator.hide();\n    }\n  }\n\n  public updateAxis(axis: THREE.Vector3) {\n    this._axis.copy(axis);\n  }\n\n  public setInitialPos(coords: THREE.Vector2[]) {\n    this._prevPos.copy(coords[0]);\n  }\n\n  public process({ view3d, xrCam }: XRRenderContext, { coords }: XRInputs) {\n    if (!this._active || coords.length !== 1) return;\n\n    const prevPos = this._prevPos;\n    const motion = this._motion;\n\n    const model = view3d.model!;\n    const coord = coords[0];\n\n    const modelPos = model.scene.position.clone();\n    const ndcModelPos = new THREE.Vector2().fromArray(modelPos.project(xrCam).toArray());\n\n    // Get the rotation angle with the model's NDC coordinates as the center.\n    const rotationAngle = getRotationAngle(ndcModelPos, prevPos, coord);\n    const rotation = new THREE.Quaternion().setFromAxisAngle(this._axis, rotationAngle);\n    const interpolated = this._getInterpolatedQuaternion();\n\n    this._fromQuat.copy(interpolated);\n    this._toQuat.premultiply(rotation);\n\n    motion.reset(0);\n    motion.setEndDelta(1);\n\n    prevPos.copy(coord);\n  }\n\n  public update({ model }: XRRenderContext, deltaTime: number) {\n    if (!this._active) return;\n\n    const motion = this._motion;\n    motion.update(deltaTime);\n\n    const interpolated = this._getInterpolatedQuaternion();\n\n    this.rotation.copy(interpolated);\n    model.scene.quaternion.copy(interpolated);\n  }\n\n  private _getInterpolatedQuaternion(): THREE.Quaternion {\n    const motion = this._motion;\n    const toEuler = this._toQuat;\n    const fromEuler = this._fromQuat;\n\n    const progress = motion.val;\n\n    return new THREE.Quaternion().copy(fromEuler).slerp(toEuler, progress);\n  }\n}\n\nexport default ARSwirlControl;\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nimport * as THREE from \"three\";\nimport Motion from \"../../Motion\";\nimport * as DEFAULT from \"~/consts/default\";\nimport * as EASING from \"~/consts/easing\";\nimport * as TOUCH from \"~/consts/touch\";\nimport { XRRenderContext, XRContext, XRInputs } from \"~/types/internal\";\nimport ARControl from \"../common/ARControl\";\n\nenum STATE {\n  WAITING,\n  TRANSLATING,\n  BOUNCING,\n}\n\n/**\n * Options for {@link ARFloorTranslateControl}\n * @category Controls-AR\n * @interface\n * @property {number} [threshold=0.05] Threshold until translation works, this value is relative to screen size.\n * @property {number} [hoverAmplitude=0.01] How much model will hover up and down, in meter. Default value is 0.01(1cm).\n * @property {number} [hoverHeight=0.1] How much model will float from the floor, in meter. Default value is 0.1(10cm).\n * @property {number} [hoverPeriod=1000] Hover cycle's period, in milisecond.\n * @property {function} [hoverEasing=EASING.SINE_WAVE] Hover animation's easing function.\n * @property {number} [bounceDuration=1000] Bounce-to-floor animation's duration, in milisecond.\n * @property {number} [bounceEasing=EASING.EASE_OUT_BOUNCE] Bounce-to-floor animation's easing function.\n */\nexport interface ARFloorTranslateControlOption {\n  threshold: number;\n  hoverAmplitude: number;\n  hoverHeight: number;\n  hoverPeriod: number;\n  hoverEasing: (x: number) => number;\n  bounceDuration: number;\n  bounceEasing: (x: number) => number;\n}\n\n/**\n * Model's translation(position) control for {@link ARFloorControl}\n * @category Controls-AR\n */\nclass ARFloorTranslateControl implements ARControl {\n  // Options\n  private _hoverAmplitude: number;\n  private _hoverHeight: number;\n\n  // Internal states\n  private _modelPosition = new THREE.Vector3();\n  private _hoverPosition = new THREE.Vector3();\n  private _floorPosition = new THREE.Vector3();\n  private _dragPlane = new THREE.Plane();\n  private _enabled = true;\n  private _state = STATE.WAITING;\n  private _initialPos = new THREE.Vector2();\n  private _hoverMotion: Motion;\n  private _bounceMotion: Motion;\n\n  /**\n   * Whether this control is enabled or not\n   * @readonly\n   */\n  public get enabled() { return this._enabled; }\n  /**\n   * Position including hover/bounce animation offset from the floor.\n   * @readonly\n   */\n  public get modelPosition() { return this._modelPosition.clone(); }\n  /**\n   * Last detected floor position\n   * @readonly\n   */\n  public get floorPosition() { return this._floorPosition.clone(); }\n  /**\n   * How much model will hover up and down, in meter.\n   */\n  public get hoverAmplitude() { return this._hoverAmplitude; }\n  /**\n   * How much model will float from the floor, in meter.\n   */\n  public get hoverHeight() { return this._hoverHeight; }\n\n  public set hoverAmplitude(val: number) { this._hoverAmplitude = val; }\n  public set hoverHeight(val: number) { this._hoverHeight = val; }\n\n  /**\n   * Create new instance of ARTranslateControl\n   * @param {ARFloorTranslateControlOption} [options={}] Options\n   */\n  constructor({\n    hoverAmplitude = 0.01,\n    hoverHeight = 0.1,\n    hoverPeriod = 1000,\n    hoverEasing = EASING.SINE_WAVE,\n    bounceDuration = 1000,\n    bounceEasing = EASING.EASE_OUT_BOUNCE,\n  }: Partial<ARFloorTranslateControlOption> = {}) {\n    this._hoverAmplitude = hoverAmplitude;\n    this._hoverHeight = hoverHeight;\n    this._hoverMotion = new Motion({\n      loop: true,\n      duration: hoverPeriod,\n      easing: hoverEasing,\n    });\n    this._bounceMotion = new Motion({\n      duration: bounceDuration,\n      easing: bounceEasing,\n      range: DEFAULT.INFINITE_RANGE,\n    });\n  }\n\n  public initFloorPosition(position: THREE.Vector3) {\n    this._modelPosition.copy(position);\n    this._floorPosition.copy(position);\n    this._hoverPosition.copy(position);\n    this._hoverPosition.setY(position.y + this._hoverHeight);\n  }\n\n  // tslint:disable-next-line no-empty\n  public init(ctx: XRRenderContext) {}\n\n  // tslint:disable-next-line no-empty\n  public destroy(ctx: XRContext) {}\n\n  /**\n   * Enable this control\n   */\n  public enable() {\n    this._enabled = true;\n  }\n\n  /**\n   * Disable this control\n   */\n  public disable() {\n    this._enabled = false;\n    this.deactivate();\n  }\n\n  public activate({ model }: XRRenderContext, gesture: TOUCH.GESTURE) {\n    if (!this._enabled) return;\n\n    const modelBbox = model.bbox;\n    const modelBboxYOffset = modelBbox.getCenter(new THREE.Vector3()).y - modelBbox.min.y;\n    this._dragPlane.set(new THREE.Vector3(0, 1, 0), -(this._floorPosition.y + this._hoverHeight + modelBboxYOffset));\n\n    this._hoverMotion.reset(0);\n    this._hoverMotion.setEndDelta(1);\n    this._state = STATE.TRANSLATING;\n  }\n\n  public deactivate() {\n    if (!this._enabled || this._state === STATE.WAITING) {\n      this._state = STATE.WAITING;\n      return;\n    }\n\n    this._state = STATE.BOUNCING;\n\n    const floorPosition = this._floorPosition;\n    const modelPosition = this._modelPosition;\n    const hoverPosition = this._hoverPosition;\n    const bounceMotion = this._bounceMotion;\n\n    const hoveringAmount = modelPosition.y - floorPosition.y;\n    bounceMotion.reset(modelPosition.y);\n    bounceMotion.setEndDelta(-hoveringAmount);\n\n    // Restore hover pos\n    hoverPosition.copy(floorPosition);\n    hoverPosition.setY(floorPosition.y + this._hoverHeight);\n  }\n\n  public setInitialPos(coords: THREE.Vector2[]) {\n    this._initialPos.copy(coords[0]);\n  }\n\n  public process({ view3d, model, frame, referenceSpace, xrCam }: XRRenderContext, { hitResults }: XRInputs) {\n    const state = this._state;\n    const notActive = state === STATE.WAITING || state === STATE.BOUNCING;\n    if (!hitResults || hitResults.length !== 1 || notActive) return;\n\n    const hitResult = hitResults[0];\n\n    const prevFloorPosition = this._floorPosition.clone();\n    const floorPosition = this._floorPosition;\n    const hoverPosition = this._hoverPosition;\n    const hoverHeight = this._hoverHeight;\n    const dragPlane = this._dragPlane;\n\n    const modelBbox = model.bbox;\n    const modelBboxYOffset = modelBbox.getCenter(new THREE.Vector3()).y - modelBbox.min.y;\n\n    const hitPose = hitResult.results[0] && hitResult.results[0].getPose(referenceSpace);\n    const isFloorHit = hitPose && hitPose.transform.matrix[5] >= 0.75;\n    const camPos = new THREE.Vector3().setFromMatrixPosition(xrCam.matrixWorld);\n\n    if (!hitPose || !isFloorHit) {\n      // Use previous drag plane if no hit plane is found\n      const targetRayPose = frame.getPose(hitResult.inputSource.targetRaySpace, view3d.renderer.threeRenderer.xr.getReferenceSpace());\n      const fingerDir = new THREE.Vector3().copy(targetRayPose.transform.position).sub(camPos).normalize();\n\n      const fingerRay = new THREE.Ray(camPos, fingerDir);\n      const intersection = fingerRay.intersectPlane(dragPlane, new THREE.Vector3());\n\n      if (intersection) {\n        floorPosition.copy(intersection);\n        floorPosition.setY(prevFloorPosition.y);\n        hoverPosition.copy(intersection);\n        hoverPosition.setY(intersection.y - modelBboxYOffset);\n      }\n      return;\n    }\n\n    const hitMatrix = new THREE.Matrix4().fromArray(hitPose.transform.matrix);\n    const hitPosition = new THREE.Vector3().setFromMatrixPosition(hitMatrix);\n\n    // Set new floor level when it's increased at least 10cm\n    const currentDragPlaneHeight = -dragPlane.constant;\n    const hitDragPlaneHeight = hitPosition.y + hoverHeight + modelBboxYOffset;\n\n    if (hitDragPlaneHeight - currentDragPlaneHeight > 0.1) {\n      dragPlane.constant = -hitDragPlaneHeight;\n    }\n\n    const camToHitDir = new THREE.Vector3().subVectors(hitPosition, camPos).normalize();\n    const camToHitRay = new THREE.Ray(camPos, camToHitDir);\n    const hitOnDragPlane = camToHitRay.intersectPlane(dragPlane, new THREE.Vector3());\n\n    if (!hitOnDragPlane) return;\n\n    floorPosition.copy(hitOnDragPlane);\n    floorPosition.setY(hitPosition.y);\n    hoverPosition.copy(hitOnDragPlane);\n    hoverPosition.setY(hitOnDragPlane.y - modelBboxYOffset);\n  }\n\n  public update({ model }: XRRenderContext, delta: number) {\n    const state = this._state;\n    const modelPosition = this._modelPosition;\n    const hoverPosition = this._hoverPosition;\n    if (state === STATE.WAITING) return;\n\n    if (state !== STATE.BOUNCING) {\n      // Hover\n      const hoverMotion = this._hoverMotion;\n      hoverMotion.update(delta);\n\n      // Change only x, y component of position\n      const hoverOffset = hoverMotion.val * this._hoverAmplitude;\n      modelPosition.copy(hoverPosition);\n      modelPosition.setY(hoverPosition.y + hoverOffset);\n    } else {\n      // Bounce\n      const bounceMotion = this._bounceMotion;\n      bounceMotion.update(delta);\n\n      modelPosition.setY(bounceMotion.val);\n\n      if (bounceMotion.progress >= 1) {\n        this._state = STATE.WAITING;\n      }\n    }\n\n    const modelBbox = model.bbox;\n    const modelYOffset = modelBbox.getCenter(new THREE.Vector3()).y - modelBbox.min.y;\n\n    // modelPosition = where model.bbox.min.y should be\n    model.scene.position.copy(modelPosition.clone().setY(modelPosition.y + modelYOffset));\n  }\n}\n\nexport default ARFloorTranslateControl;\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nimport * as THREE from \"three\";\nimport { toPowerOfTwo } from \"~/utils\";\n\n/**\n * Options for {@link ScaleUI}\n * @category Controls-AR\n * @interface\n * @property {number} [width=0.1] UI width, in meter.\n * @property {number} [padding=20] UI's padding value, in px.\n * @property {number} [offset=0.05] UI's Y-axis offset from model's bbox max y, in meter.\n * @property {number} [font=\"64px sans-serif\"] UI's font. See {@link https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font CanvasRenderingContext2D#font}\n * @property {number} [color=\"white\"] UI's font color. See {@link https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/fillStyle CanvasRenderingContext2D#fillStyle}\n */\nexport interface ScaleUIOption {\n  width: number;\n  padding: number;\n  offset: number;\n  font: CanvasRenderingContext2D[\"font\"];\n  color: CanvasRenderingContext2D[\"fillStyle\"];\n}\n\n/**\n * UI element displaying model's scale percentage info when user chaning model's scale.\n * @category Controls-AR\n */\nclass ScaleUI {\n  private _canvas: HTMLCanvasElement;\n  private _ctx: CanvasRenderingContext2D;\n  private _mesh: THREE.Mesh;\n  private _texture: THREE.CanvasTexture;\n  private _font: CanvasRenderingContext2D[\"font\"];\n  private _color: CanvasRenderingContext2D[\"fillStyle\"];\n  private _padding: number;\n  private _offset: number;\n  private _height: number;\n\n  /**\n   * Scale UI's plane mesh\n   * @readonly\n   */\n  public get mesh() { return this._mesh; }\n  /**\n   * Scale UI's height value\n   * @readonly\n   */\n  public get height() { return this._height; }\n  /**\n   * Whether UI is visible or not.\n   * @readonly\n   */\n  public get visible() { return this._mesh.visible; }\n\n  /**\n   * Create new instance of ScaleUI\n   * @param {ScaleUIOption} [options={}] Options\n   */\n  constructor({\n    width = 0.1,\n    padding = 20,\n    offset = 0.05,\n    font = \"64px sans-serif\",\n    color = \"white\",\n  }: Partial<ScaleUIOption> = {}) {\n    const canvas = document.createElement(\"canvas\");\n    const ctx = canvas.getContext(\"2d\")!;\n\n    ctx.font = font;\n\n    // Maximum canvas width should be equal to this\n    const maxText = ctx.measureText(\"100%\");\n\n    // Following APIs won't work on IE, but it's WebXR so I think it's okay\n    const maxWidth = maxText.actualBoundingBoxLeft + maxText.actualBoundingBoxRight;\n    const maxHeight = maxText.actualBoundingBoxAscent + maxText.actualBoundingBoxDescent;\n    const widthPowerOfTwo = toPowerOfTwo(maxWidth);\n\n    canvas.width = widthPowerOfTwo;\n    canvas.height = widthPowerOfTwo;\n\n    // This considers increased amount by making width to power of two\n    const planeWidth = width * (widthPowerOfTwo / maxWidth);\n\n    this._ctx = ctx;\n    this._canvas = canvas;\n    this._height = planeWidth * maxHeight / maxWidth; // Text height inside plane\n    this._texture = new THREE.CanvasTexture(canvas);\n\n    // Plane is square\n    const uiGeometry = new THREE.PlaneGeometry(planeWidth, planeWidth);\n    const mesh = new THREE.Mesh(\n      uiGeometry,\n      new THREE.MeshBasicMaterial({\n        map: this._texture,\n        transparent: true,\n      }),\n    );\n    mesh.matrixAutoUpdate = false;\n\n    this._mesh = mesh;\n    this._font = font;\n    this._color = color;\n    this._padding = padding;\n    this._offset = offset;\n  }\n\n  public updatePosition(position: THREE.Vector3, focus: THREE.Vector3) {\n    // Update mesh\n    const mesh = this._mesh;\n    mesh.lookAt(focus);\n    mesh.position.copy(position);\n    mesh.position.setY(position.y + this._height / 2 + this._offset);\n    mesh.updateMatrix();\n  }\n\n  public updateScale(scale: number) {\n    const ctx = this._ctx;\n    const canvas = this._canvas;\n    const padding = this._padding;\n    const scalePercentage = (scale * 100).toFixed(0);\n\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    const centerX = canvas.width / 2;\n    const centerY = canvas.height / 2;\n\n    // Draw round rect\n    const textSize = ctx.measureText(`${scalePercentage}%`);\n    const halfWidth = (textSize.actualBoundingBoxLeft + textSize.actualBoundingBoxRight) / 2;\n    const halfHeight = (textSize.actualBoundingBoxAscent + textSize.actualBoundingBoxDescent) / 2;\n\n    ctx.beginPath();\n\n    ctx.moveTo(centerX - halfWidth, centerY - halfHeight - padding);\n    ctx.lineTo(centerX + halfWidth, centerY - halfHeight - padding);\n    ctx.quadraticCurveTo(centerX + halfWidth + padding, centerY - halfHeight - padding, centerX + halfWidth + padding, centerY - halfHeight);\n    ctx.lineTo(centerX + halfWidth + padding, centerY + halfHeight);\n    ctx.quadraticCurveTo(centerX + halfWidth + padding, centerY + halfHeight + padding, centerX + halfWidth, centerY + halfHeight + padding);\n    ctx.lineTo(centerX - halfWidth, centerY + halfHeight + padding);\n    ctx.quadraticCurveTo(centerX - halfWidth - padding, centerY + halfHeight + padding, centerX - halfWidth - padding, centerY + halfHeight);\n    ctx.lineTo(centerX - halfWidth - padding, centerY - halfHeight);\n    ctx.quadraticCurveTo(centerX - halfWidth - padding, centerY - halfHeight - padding, centerX - halfWidth, centerY - halfHeight - padding);\n\n    ctx.closePath();\n\n    ctx.lineWidth = 5;\n    ctx.fillStyle = \"rgba(0, 0, 0, 0.3)\";\n    ctx.fill();\n    ctx.stroke();\n\n    // Draw text\n    ctx.font = this._font;\n    ctx.textAlign = \"center\";\n    ctx.textBaseline = \"middle\";\n    ctx.strokeStyle = this._color;\n    ctx.fillStyle = this._color;\n\n    ctx.fillText(`${scalePercentage}%`, centerX, centerY);\n\n    this._texture.needsUpdate = true;\n  }\n\n  /**\n   * Show UI\n   */\n  public show() {\n    this._mesh.visible = true;\n  }\n\n  /**\n   * Hide UI\n   */\n  public hide() {\n    this._mesh.visible = false;\n  }\n}\n\nexport default ScaleUI;\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nimport * as THREE from \"three\";\nimport ARControl from \"./ARControl\";\nimport Motion from \"~/controls/Motion\";\nimport ScaleUI from \"../ui/ScaleUI\";\nimport * as TOUCH from \"~/consts/touch\";\nimport { XRRenderContext, XRContext, XRInputs } from \"~/types/internal\";\n\n/**\n * Options for {@link ARScaleControl}\n * @category Controls-AR\n * @interface\n * @property {number} [min=0.05] Minimum scale, default is 0.05(5%)\n * @property {number} [max=2] Maximum scale, default is 2(200%)\n */\nexport interface ARScaleControlOption {\n  min: number;\n  max: number;\n}\n\n/**\n * Model's scale controller which works on AR(WebXR) mode.\n * @category Controls-AR\n */\nclass ARScaleControl implements ARControl {\n  // TODO: add option for \"user scale\"\n\n  // Internal states\n  private _motion: Motion;\n  private _enabled = true;\n  private _active = false;\n  private _prevCoordDistance = -1;\n  private _scaleMultiplier = 1;\n  private _initialScale = new THREE.Vector3();\n  private _ui = new ScaleUI();\n\n  /**\n   * Whether this control is enabled or not\n   * @readonly\n   */\n  public get enabled() { return this._enabled; }\n  public get scale() {\n    return this._initialScale.clone().multiplyScalar(this._scaleMultiplier);\n  }\n  public get scaleMultiplier() { return this._scaleMultiplier; }\n  /**\n   * Range of the scale\n   * @readonly\n   */\n  public get range() { return this._motion.range; }\n\n  /**\n   * Create new instance of ARScaleControl\n   * @param {ARScaleControlOption} [options={}] Options\n   */\n  constructor({\n    min = 0.05,\n    max = 2,\n  } = {}) {\n    this._motion = new Motion({ duration: 0, range: { min, max } });\n    this._motion.reset(1); // default scale is 1(100%)\n    this._ui = new ScaleUI();\n  }\n\n  public init({ view3d }: XRRenderContext) {\n    this._initialScale.copy(view3d.model!.scene.scale);\n    view3d.scene.add(this._ui.mesh);\n  }\n\n  public destroy({ view3d }: XRContext) {\n    view3d.scene.remove(this._ui.mesh);\n  }\n\n  public setInitialPos(coords: THREE.Vector2[]) {\n    this._prevCoordDistance = new THREE.Vector2().subVectors(coords[0], coords[1]).length();\n  }\n\n  /**\n   * Enable this control\n   */\n  public enable() {\n    this._enabled = true;\n  }\n\n  /**\n   * Disable this control\n   */\n  public disable() {\n    this._enabled = false;\n    this.deactivate();\n  }\n\n  public activate(ctx: XRRenderContext, gesture: TOUCH.GESTURE) {\n    this._active = true;\n    this._ui.show();\n    this._updateUIPosition(ctx);\n  }\n\n  public deactivate() {\n    this._active = false;\n    this._ui.hide();\n    this._prevCoordDistance = -1;\n  }\n\n  /**\n   * Update scale range\n   * @param min Minimum scale\n   * @param max Maximum scale\n   */\n  public setRange(min: number, max: number) {\n    this._motion.range = { min, max };\n  }\n\n  public process(ctx: XRRenderContext, { coords }: XRInputs) {\n    if (coords.length !== 2 || !this._enabled || !this._active) return;\n\n    const motion = this._motion;\n    const distance = new THREE.Vector2().subVectors(coords[0], coords[1]).length();\n    const delta = (distance - this._prevCoordDistance);\n\n    motion.setEndDelta(delta);\n    this._prevCoordDistance = distance;\n\n    this._updateUIPosition(ctx);\n  }\n\n  public update({ model }: XRRenderContext, deltaTime: number) {\n    if (!this._enabled || !this._active) return;\n\n    const motion = this._motion;\n    motion.update(deltaTime);\n\n    this._scaleMultiplier = motion.val;\n    this._ui.updateScale(this._scaleMultiplier);\n\n    model.scene.scale.copy(this.scale);\n  }\n\n  private _updateUIPosition({ view3d, xrCam }: XRRenderContext) {\n    // Update UI\n    const model = view3d.model!;\n    const camPos = new THREE.Vector3().setFromMatrixPosition(xrCam.matrixWorld);\n    const uiPos = model.scene.position.clone().setY(model.bbox.max.y);\n\n    this._ui.updatePosition(uiPos, camPos);\n  }\n}\n\nexport default ARScaleControl;\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nimport * as THREE from \"three\";\nimport Motion from \"../../Motion\";\nimport { Range } from \"~/types/internal\";\n\n/**\n * Options for {@link FloorIndicator}\n * @category Controls-AR\n * @interface\n * @property {number} [ringOpacity=0.3] Ring's opacity.\n * @property {number} [dirIndicatorOpacity=1] Direction indicator's opacity.\n * @property {number} [fadeoutDuration=1000] Fadeout animation's duration.\n */\nexport interface FloorIndicatorOption {\n  opacityMin: number;\n  opacityMax: number;\n  fadeoutDuration: number;\n}\n\n/**\n * Ring type indicator for showing where the model's at.\n * @category Controls-AR\n */\nclass FloorIndicator {\n  private _mesh: THREE.Mesh;\n  private _animator: Motion;\n  private _opacityRange: Range;\n\n  /**\n   * Ring mesh\n   */\n  public get mesh() { return this._mesh; }\n\n  /**\n   * Create new instance of FloorIndicator\n   * @param {FloorIndicatorOption} [options={}] Options\n   */\n  constructor({\n    ringOpacity = 0.3,\n    dirIndicatorOpacity = 1,\n    fadeoutDuration = 1000,\n  } = {}) {\n    const deg10 = Math.PI / 18;\n\n    const dimmedRingGeomtry = new THREE.RingGeometry(0.975, 1, 150, 1, -6 * deg10, 30 * deg10);\n    const reticle = new THREE.CircleGeometry(0.1, 30, 0, Math.PI * 2);\n    dimmedRingGeomtry.merge(reticle);\n\n    const highlightedRingGeometry = new THREE.RingGeometry(0.96, 1.015, 30, 1, 25 * deg10, 4 * deg10);\n\n    // Create little triangle in ring\n    const ringVertices = highlightedRingGeometry.vertices;\n    const trianglePart = ringVertices.slice(Math.floor(11 * ringVertices.length / 16), Math.floor(13 * ringVertices.length / 16));\n    const firstY = trianglePart[0].y;\n    const midIndex = Math.floor(trianglePart.length / 2);\n    trianglePart.forEach((vec, vecIdx) => {\n      const offsetAmount = 0.025 * (midIndex - Math.abs(vecIdx - midIndex));\n      vec.setY(firstY - offsetAmount);\n    });\n\n    const indicatorMat = new THREE.Matrix4().makeRotationX(-Math.PI / 2);\n    const mergedGeometry = new THREE.Geometry();\n\n    mergedGeometry.merge(dimmedRingGeomtry, indicatorMat, 0);\n    mergedGeometry.merge(highlightedRingGeometry, indicatorMat, 1);\n\n    const dimmedMaterial = new THREE.MeshBasicMaterial({\n      transparent: true,\n      opacity: ringOpacity,\n      color: 0xffffff,\n    });\n    const highlightMaterial = new THREE.MeshBasicMaterial({\n      transparent: true,\n      opacity: dirIndicatorOpacity,\n      color: 0xffffff,\n    });\n    const materials = [dimmedMaterial, highlightMaterial];\n\n    this._mesh = new THREE.Mesh(mergedGeometry, materials);\n    this._mesh.matrixAutoUpdate = false;\n    this._animator = new Motion({ duration: fadeoutDuration });\n    this._opacityRange = {\n      min: ringOpacity,\n      max: dirIndicatorOpacity,\n    };\n  }\n\n  public update({\n    delta,\n    scale,\n    position,\n    rotation,\n  }: {\n    delta: number,\n    scale: number,\n    position: THREE.Vector3,\n    rotation: THREE.Quaternion,\n  }) {\n    const mesh = this._mesh;\n    const animator = this._animator;\n\n    if (!this._mesh.visible) return;\n\n    animator.update(delta);\n\n    const materials = this._mesh.material as THREE.Material[];\n    const minOpacityMat = materials[0];\n    const maxOpacityMat = materials[1];\n    const opacityRange = this._opacityRange;\n\n    minOpacityMat.opacity = animator.val * opacityRange.min;\n    maxOpacityMat.opacity = animator.val * opacityRange.max;\n\n    if (animator.val <= 0) {\n      mesh.visible = false;\n    }\n\n    // Update mesh\n    mesh.scale.setScalar(scale);\n    mesh.position.copy(position);\n    mesh.quaternion.copy(rotation);\n    mesh.updateMatrix();\n  }\n\n  public show() {\n    this._mesh.visible = true;\n    this._animator.reset(1);\n  }\n\n  public fadeout() {\n    this._animator.setEndDelta(-1);\n  }\n}\n\nexport default FloorIndicator;\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nexport enum GESTURE {\n  NONE = 0,\n  ONE_FINGER_HORIZONTAL = 1,\n  ONE_FINGER_VERTICAL = 2,\n  ONE_FINGER = 1 | 2,\n  TWO_FINGER_HORIZONTAL = 4,\n  TWO_FINGER_VERTICAL = 8,\n  TWO_FINGER = 4 | 8,\n  PINCH = 16,\n}\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nimport * as THREE from \"three\";\nimport * as TOUCH from \"~/consts/touch\";\n\nenum STATE {\n  WAITING,\n  IN_DEADZONE,\n  OUT_OF_DEADZONE,\n}\n\n/**\n * Options for {@link DeadzoneChecker}\n * @category Controls-AR\n * @interface\n * @property {number} size Size of the deadzone circle.\n */\nexport interface DeadzoneCheckerOption {\n  size: number;\n}\n\n/**\n * Deadzone checker for deadzone-based controls\n * @category Controls-AR\n */\nclass DeadzoneChecker {\n  // Options\n  private _size: number;\n\n  // Internal States\n  private _state = STATE.WAITING;\n  private _detectedGesture = TOUCH.GESTURE.NONE;\n  private _testingGestures = TOUCH.GESTURE.NONE;\n  private _lastFingerCount = 0;\n  private _aspect: number = 1;\n\n  // Store two prev positions, as it should be maintained separately\n  private _prevOneFingerPos = new THREE.Vector2();\n  private _prevTwoFingerPos = new THREE.Vector2();\n  private _initialTwoFingerDistance = 0;\n  private _prevOneFingerPosInitialized = false;\n  private _prevTwoFingerPosInitialized = false;\n\n  /**\n   * Size of the deadzone.\n   * @type number\n   */\n  public get size() { return this._size; }\n  public get inDeadzone() { return this._state === STATE.IN_DEADZONE; }\n\n  public set size(val: number) { this._size = val; }\n\n  /**\n   * Create new DeadzoneChecker\n   * @param {DeadzoneCheckerOption} [options={}] Options\n   */\n  constructor({\n    size = 0.1,\n  }: Partial<DeadzoneCheckerOption> = {}) {\n    this._size = size;\n  }\n\n  /**\n   * Set screen aspect(height / width)\n   * @param aspect Screen aspect value\n   */\n  public setAspect(aspect: number) {\n    this._aspect = aspect;\n  }\n\n  public setFirstInput(inputs: THREE.Vector2[]) {\n    const fingerCount = inputs.length;\n\n    if (fingerCount === 1 && !this._prevOneFingerPosInitialized) {\n      this._prevOneFingerPos.copy(inputs[0]);\n      this._prevOneFingerPosInitialized = true;\n    } else if (fingerCount === 2 && !this._prevTwoFingerPosInitialized) {\n      this._prevTwoFingerPos.copy(new THREE.Vector2().addVectors(inputs[0], inputs[1]).multiplyScalar(0.5));\n      this._initialTwoFingerDistance = new THREE.Vector2().subVectors(inputs[0], inputs[1]).length();\n      this._prevTwoFingerPosInitialized = true;\n    }\n\n    this._lastFingerCount = fingerCount;\n    this._state = STATE.IN_DEADZONE;\n  }\n\n  public addTestingGestures(...gestures: TOUCH.GESTURE[]) {\n    this._testingGestures = this._testingGestures | gestures.reduce((gesture, accumulated) => gesture | accumulated, TOUCH.GESTURE.NONE);\n  }\n\n  public cleanup() {\n    this._testingGestures = TOUCH.GESTURE.NONE;\n    this._lastFingerCount = 0;\n    this._prevOneFingerPosInitialized = false;\n    this._prevTwoFingerPosInitialized = false;\n    this._initialTwoFingerDistance = 0;\n    this._detectedGesture = TOUCH.GESTURE.NONE;\n    this._state = STATE.WAITING;\n  }\n\n  public applyScreenAspect(inputs: THREE.Vector2[]) {\n    const aspect = this._aspect;\n\n    inputs.forEach(input => {\n      if (aspect > 1) {\n        input.setY(input.y * aspect);\n      } else {\n        input.setX(input.x / aspect);\n      }\n    });\n  }\n\n  public check(inputs: THREE.Vector2[]): TOUCH.GESTURE {\n    const state = this._state;\n    const deadzone = this._size;\n    const testingGestures = this._testingGestures;\n    const lastFingerCount = this._lastFingerCount;\n    const fingerCount = inputs.length;\n\n    if (state === STATE.OUT_OF_DEADZONE) {\n      return this._detectedGesture;\n    }\n\n    this._lastFingerCount = fingerCount;\n    this.applyScreenAspect(inputs);\n\n    if (fingerCount !== lastFingerCount) {\n      this.setFirstInput(inputs);\n      return TOUCH.GESTURE.NONE;\n    }\n\n    if (fingerCount === 1) {\n      const input = inputs[0];\n      const prevPos = this._prevOneFingerPos.clone();\n\n      const diff = new THREE.Vector2().subVectors(input, prevPos);\n      if (diff.length() > deadzone) {\n        if (Math.abs(diff.x) > Math.abs(diff.y)) {\n          if (TOUCH.GESTURE.ONE_FINGER_HORIZONTAL & testingGestures) {\n            this._detectedGesture = TOUCH.GESTURE.ONE_FINGER_HORIZONTAL;\n          }\n        } else {\n          if (TOUCH.GESTURE.ONE_FINGER_VERTICAL & testingGestures) {\n            this._detectedGesture = TOUCH.GESTURE.ONE_FINGER_VERTICAL;\n          }\n        }\n      }\n    } else if (fingerCount === 2) {\n      const middle = new THREE.Vector2().addVectors(inputs[1], inputs[0]).multiplyScalar(0.5);\n      const prevPos = this._prevTwoFingerPos.clone();\n\n      const diff = new THREE.Vector2().subVectors(middle, prevPos);\n      if (diff.length() > deadzone) {\n        if (Math.abs(diff.x) > Math.abs(diff.y)) {\n          if (TOUCH.GESTURE.TWO_FINGER_HORIZONTAL & testingGestures) {\n            this._detectedGesture = TOUCH.GESTURE.TWO_FINGER_HORIZONTAL;\n          }\n        } else {\n          if (TOUCH.GESTURE.TWO_FINGER_VERTICAL & testingGestures) {\n            this._detectedGesture = TOUCH.GESTURE.TWO_FINGER_VERTICAL;\n          }\n        }\n      }\n\n      const distance = new THREE.Vector2().subVectors(inputs[1], inputs[0]).length();\n\n      if (Math.abs(distance - this._initialTwoFingerDistance) > deadzone) {\n        if (TOUCH.GESTURE.PINCH & testingGestures) {\n          this._detectedGesture = TOUCH.GESTURE.PINCH;\n        }\n      }\n    }\n\n    if (this._detectedGesture !== TOUCH.GESTURE.NONE) {\n      this._state = STATE.OUT_OF_DEADZONE;\n    }\n\n    return this._detectedGesture;\n  }\n}\n\nexport default DeadzoneChecker;\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nimport * as THREE from \"three\";\nimport ARSwirlControl, { ARSwirlControlOption } from \"../common/ARSwirlControl\";\nimport ARFloorTranslateControl, { ARFloorTranslateControlOption } from \"./ARFloorTranslateControl\";\nimport ARScaleControl, { ARScaleControlOption } from \"../common/ARScaleControl\";\nimport FloorIndicator, { FloorIndicatorOption } from \"../ui/FloorIndicator\";\nimport * as XR from \"~/consts/xr\";\nimport * as TOUCH from \"~/consts/touch\";\nimport { XRRenderContext, XRContext, XRInputs } from \"~/types/internal\";\nimport DeadzoneChecker, { DeadzoneCheckerOption } from \"../common/DeadzoneChecker\";\n\n/**\n * Options for the {@link ARFloorControl}\n * @category Controls-AR\n * @interface\n * @property {ARSwirlControlOptions} rotate Options for {@link ARSwirlControl}\n * @property {ARFloorTranslateControlOption} translate Options for {@link ARFloorTranslateControl}\n * @property {ARScaleControlOption} scale Options for {@link ARScaleControl}\n * @property {FloorIndicatorOption} floorIndicator Options for {@link FloorIndicator}\n * @property {DeadzoneCheckerOption} deadzone Options for {@link DeadzoneChecker}\n */\nexport interface ARFloorControlOption {\n  rotate: ARSwirlControlOption;\n  translate: ARFloorTranslateControlOption;\n  scale: ARScaleControlOption;\n  floorIndicator: FloorIndicatorOption;\n  deadzone: DeadzoneCheckerOption;\n}\n\n/**\n * AR control for {@link FloorARSession}\n * @category Controls-AR\n */\nclass ARFloorControl {\n  private _enabled = true;\n  private _initialized = false;\n  private _modelHit = false;\n  private _hitTestSource: any = null;\n  private _deadzoneChecker: DeadzoneChecker;\n  private _rotateControl: ARSwirlControl;\n  private _translateControl: ARFloorTranslateControl;\n  private _scaleControl: ARScaleControl;\n  private _floorIndicator: FloorIndicator;\n\n  /**\n   * Return whether this control is enabled or not\n   */\n  public get enabled() { return this._enabled; }\n  /**\n   * {@link ARRotateControl} in this control\n   */\n  public get rotate() { return this._rotateControl; }\n  /**\n   * {@link ARTranslateControl} in this control\n   */\n  public get translate() { return this._translateControl; }\n  /**\n   * {@link ARScaleControl} in this control\n   */\n  public get scale() { return this._scaleControl; }\n  public get controls() {\n    return [this._rotateControl, this._translateControl, this._scaleControl];\n  }\n\n  /**\n   * Create new instance of ARFloorControl\n   * @param {ARFloorControlOption} options Options\n   */\n  constructor(options: Partial<ARFloorControlOption> = {}) {\n    this._rotateControl = new ARSwirlControl({\n      showIndicator: false,\n      ...options.rotate,\n    });\n    this._translateControl = new ARFloorTranslateControl(options.translate);\n    this._scaleControl = new ARScaleControl(options.scale);\n    this._floorIndicator = new FloorIndicator(options.floorIndicator);\n    this._deadzoneChecker = new DeadzoneChecker(options.deadzone);\n  }\n\n  public init(ctx: XRRenderContext, initialFloorPos: THREE.Vector3) {\n    const { session, view3d, size } = ctx;\n\n    this.controls.forEach(control => control.init(ctx));\n    this._translateControl.initFloorPosition(initialFloorPos);\n    this._deadzoneChecker.setAspect(size.height / size.width);\n\n    view3d.scene.add(this._floorIndicator.mesh);\n\n    this._initialized = true;\n\n    session.requestHitTestSourceForTransientInput({ profile: XR.INPUT_PROFILE.TOUCH })\n      .then((transientHitTestSource: any) => {\n        this._hitTestSource = transientHitTestSource;\n      });\n  }\n\n  /**\n   * Destroy this control and deactivate it\n   * @param view3d Instance of the {@link View3D}\n   */\n  public destroy(ctx: XRContext) {\n    if (!this._initialized) return;\n\n    if (this._hitTestSource) {\n      this._hitTestSource.cancel();\n      this._hitTestSource = null;\n    }\n\n    ctx.view3d.scene.remove(this._floorIndicator.mesh);\n\n    this.deactivate();\n    this.controls.forEach(control => control.destroy(ctx));\n\n    this._initialized = false;\n  }\n\n  public deactivate() {\n    this._modelHit = false;\n    this._deadzoneChecker.cleanup();\n    this.controls.forEach(control => control.deactivate());\n  }\n\n  /**\n   * Enable this control\n   */\n  public enable() {\n    this._enabled = true;\n  }\n\n  /**\n   * Disable this control\n   */\n  public disable() {\n    this._enabled = false;\n    this.deactivate();\n  }\n\n  public update(ctx: XRRenderContext) {\n    const { view3d, session, frame } = ctx;\n    const hitTestSource = this._hitTestSource;\n\n    if (!hitTestSource || !view3d.model) return;\n\n    const deadzoneChecker = this._deadzoneChecker;\n    const inputSources = session.inputSources;\n    const hitResults = frame.getHitTestResultsForTransientInput(hitTestSource);\n    const coords = this._hitResultToVector(hitResults);\n    const xrInputs = {\n      coords,\n      inputSources,\n      hitResults,\n    };\n\n    if (deadzoneChecker.inDeadzone) {\n      this._checkDeadzone(ctx, xrInputs);\n    } else {\n      this._processInput(ctx, xrInputs);\n    }\n    this._updateControls(ctx);\n  }\n\n  public onSelectStart = (ctx: XRRenderContext) => {\n    const { view3d, frame, xrCam, referenceSpace } = ctx;\n    const hitTestSource = this._hitTestSource;\n\n    if (!hitTestSource || !this._enabled) return;\n\n    const deadzoneChecker = this._deadzoneChecker;\n    const rotateControl = this._rotateControl;\n    const translateControl = this._translateControl;\n    const scaleControl = this._scaleControl;\n\n    // Update deadzone testing gestures\n    if (rotateControl.enabled) {\n      deadzoneChecker.addTestingGestures(TOUCH.GESTURE.ONE_FINGER);\n    }\n    if (translateControl.enabled) {\n      deadzoneChecker.addTestingGestures(TOUCH.GESTURE.ONE_FINGER);\n    }\n    if (scaleControl.enabled) {\n      deadzoneChecker.addTestingGestures(TOUCH.GESTURE.PINCH);\n    }\n\n    const hitResults = frame.getHitTestResultsForTransientInput(hitTestSource);\n    const coords = this._hitResultToVector(hitResults);\n    deadzoneChecker.applyScreenAspect(coords);\n    deadzoneChecker.setFirstInput(coords);\n\n    if (coords.length === 1) {\n      // Check finger is on the model\n      const modelBbox = view3d.model!.bbox;\n\n      const targetRayPose = frame.getPose(hitResults[0].inputSource.targetRaySpace, referenceSpace);\n      const camPos = new THREE.Vector3().setFromMatrixPosition(xrCam.matrixWorld);\n\n      const fingerDir = new THREE.Vector3().copy(targetRayPose.transform.position).sub(camPos).normalize();\n      const fingerRay = new THREE.Ray(camPos, fingerDir);\n      const intersection = fingerRay.intersectBox(modelBbox, new THREE.Vector3());\n\n      if (intersection) {\n        // Touch point intersected with model\n        this._modelHit = true;\n      }\n    }\n\n    this._floorIndicator.show();\n  }\n\n  public onSelectEnd = () => {\n    this.deactivate();\n    this._floorIndicator.fadeout();\n  }\n\n  private _checkDeadzone(ctx: XRRenderContext, { coords }: XRInputs) {\n    const gesture = this._deadzoneChecker.check(coords.map(coord => coord.clone()));\n    const rotateControl = this._rotateControl;\n    const translateControl = this._translateControl;\n    const scaleControl = this._scaleControl;\n\n    if (gesture === TOUCH.GESTURE.NONE) return;\n\n    switch (gesture) {\n      case TOUCH.GESTURE.ONE_FINGER_HORIZONTAL:\n      case TOUCH.GESTURE.ONE_FINGER_VERTICAL:\n        if (this._modelHit) {\n          translateControl.activate(ctx, gesture);\n          translateControl.setInitialPos(coords);\n        } else {\n          rotateControl.activate(ctx, gesture);\n          rotateControl.setInitialPos(coords);\n        }\n        break;\n      case TOUCH.GESTURE.PINCH:\n        scaleControl.activate(ctx, gesture);\n        scaleControl.setInitialPos(coords);\n        break;\n    }\n  }\n\n  private _processInput(ctx: XRRenderContext, inputs: XRInputs) {\n    this.controls.forEach(control => control.process(ctx, inputs));\n  }\n\n  private _updateControls(ctx: XRRenderContext) {\n    const { view3d, model, delta } = ctx;\n    const deltaMilisec = delta * 1000;\n\n    this.controls.forEach(control => control.update(ctx, deltaMilisec));\n\n    model.scene.updateMatrix();\n\n    const modelRotation = this._rotateControl.rotation;\n    const floorPosition = this._translateControl.floorPosition;\n    view3d.scene.update(model, {\n      floorPosition,\n    });\n\n    // Get a scaled bbox, which only has scale applied on it.\n    const scaleControl = this._scaleControl;\n    const scaledBbox = model.initialBbox;\n    scaledBbox.min.multiply(scaleControl.scale);\n    scaledBbox.max.multiply(scaleControl.scale);\n\n    const floorIndicator = this._floorIndicator;\n    const boundingSphere = scaledBbox.getBoundingSphere(new THREE.Sphere());\n\n    floorIndicator.update({\n      delta: deltaMilisec,\n      scale: boundingSphere.radius,\n      position: floorPosition,\n      rotation: modelRotation,\n    });\n  }\n\n  private _hitResultToVector(hitResults: any[]) {\n    return hitResults.map(input => {\n      return new THREE.Vector2().set(\n        input.inputSource.gamepad.axes[0],\n        -input.inputSource.gamepad.axes[1],\n      );\n    });\n  }\n}\n\nexport default ARFloorControl;\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nimport * as THREE from \"three\";\nimport WebARSession, { WebARSessionOption } from \"./WebARSession\";\nimport HitTest from \"./features/HitTest\";\nimport Animation from \"~/core/Animation\";\nimport ARFloorControl, { ARFloorControlOption } from \"~/controls/ar/floor/ARFloorControl\";\nimport { merge } from \"~/utils\";\nimport * as XR from \"~/consts/xr\";\nimport { XRRenderContext, XRContext } from \"~/types/internal\";\n\n/**\n * Options for {@link FloorARSession}.\n * This type is intersection of {@link WebARSessionOption} and {@link ARControlOption}\n * @interface\n * @extends WebARSessionOption\n * @extends ARFloorControlOption\n */\ninterface FloorARSessionOption extends WebARSessionOption, ARFloorControlOption {}\n\n/**\n * WebXR based AR session which puts model on the detected floor.\n * @category XR\n * @fires WebARSession#start\n * @fires WebARSession#end\n * @fires WebARSession#canPlace\n * @fires WebARSession#modelPlaced\n */\nclass FloorARSession extends WebARSession {\n  private _options: Partial<FloorARSessionOption>;\n  private _control: ARFloorControl | null;\n  private _renderContext: XRRenderContext | null;\n  private _modelPlaced: boolean;\n  private _hitTest: HitTest;\n\n  /**\n   * {@link ARControl} instance of this session\n   * @type ARFloorControl | null\n   */\n  public get control() { return this._control; }\n\n  /**\n   * Create new instance of FloorARSession\n   * @param {FloorARSessionOption} options Options\n   */\n  constructor(options: Partial<FloorARSessionOption> = {}) {\n    super(options);\n\n    this._control = null;\n    this._renderContext = null;\n    this._modelPlaced = false;\n\n    this._hitTest = new HitTest();\n\n    this._features = merge(this._features, this._hitTest.features);\n    this._options = options;\n  }\n\n  public onStart = (ctx: XRContext) => {\n    const { view3d, session } = ctx;\n\n    super.onStart(ctx);\n\n    this._control = new ARFloorControl(this._options);\n\n    view3d.scene.hide();\n    this._hitTest.init(session);\n  }\n\n  public onEnd = (ctx: XRContext) => {\n    const { view3d, session } = ctx;\n\n    super.onEnd(ctx);\n\n    this._renderContext = null;\n    this._modelPlaced = false;\n\n    session.removeEventListener(XR.EVENTS.SELECT_START, this._onSelectStart);\n    session.removeEventListener(XR.EVENTS.SELECT_END, this._onSelectEnd);\n\n    this._hitTest.destroy();\n    this._control!.destroy(ctx);\n    this._control = null;\n\n    view3d.scene.show();\n  }\n\n  protected _beforeRender = (ctx: XRRenderContext) => {\n    this._renderContext = ctx;\n    if (!this._modelPlaced) {\n      this._initModelPosition(ctx);\n    } else {\n      this._control!.update(ctx);\n    }\n  }\n\n  private _initModelPosition(ctx: XRRenderContext) {\n    const {view3d, frame, session} = ctx;\n    const model = view3d.model;\n    const hitTest = this._hitTest;\n\n    // Make sure the model is loaded\n    if (!hitTest.ready || !model) return;\n\n    const control = this._control!;\n    const referenceSpace = view3d.renderer.threeRenderer.xr.getReferenceSpace();\n    const hitTestResults = hitTest.getResults(frame);\n\n    if (hitTestResults.length <= 0) return;\n\n    const hit = hitTestResults[0];\n    const hitMatrix = new THREE.Matrix4().fromArray(hit.getPose(referenceSpace).transform.matrix);\n\n    // If transformed coords space's y axis is not facing up, don't use it.\n    if (hitMatrix.elements[5] < 0.75) return;\n\n    const modelRoot = model.scene;\n    const hitPosition = new THREE.Vector3().setFromMatrixPosition(hitMatrix);\n\n    // Reset rotation & update position\n    modelRoot.quaternion.set(0, 0, 0, 1);\n    modelRoot.position.copy(hitPosition);\n\n    modelRoot.position.setY(modelRoot.position.y - model.bbox.min.y);\n    modelRoot.updateMatrix();\n\n    view3d.scene.update(model);\n    view3d.scene.show();\n    this.emit(\"canPlace\");\n\n    // Don't need it\n    hitTest.destroy();\n\n    session.addEventListener(XR.EVENTS.SELECT_START, this._onSelectStart);\n    session.addEventListener(XR.EVENTS.SELECT_END, this._onSelectEnd);\n\n    this._domOverlay?.hideLoading();\n    this._modelPlaced = true;\n    this.emit(\"modelPlaced\");\n\n    // Show scale up animation\n    const originalModelScale = modelRoot.scale.clone();\n    const scaleUpAnimation = new Animation({ context: session });\n\n    scaleUpAnimation.on(\"progress\", evt => {\n      const newScale = originalModelScale.clone().multiplyScalar(evt.easedProgress);\n      modelRoot.scale.copy(newScale);\n    });\n    scaleUpAnimation.on(\"finish\", () => {\n      modelRoot.scale.copy(originalModelScale);\n      control.init(ctx, hitPosition);\n    });\n    scaleUpAnimation.start();\n  }\n\n  private _onSelectStart = (e) => {\n    this._control!.onSelectStart({\n      ...this._renderContext!,\n      frame: e.frame,\n    });\n  }\n\n  private _onSelectEnd = () => {\n    this._control!.onSelectEnd();\n  }\n}\n\nexport default FloorARSession;\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nimport * as THREE from \"three\";\nimport { range } from \"~/utils\";\n\n/**\n * Options for {@link ArrowIndicator}\n * @category Controls-AR\n * @interface\n * @property {string | number | THREE.Color} [color=0xffffff] Arrow color\n */\nexport interface ArrowIndicatorOption {\n  color: string | number | THREE.Color;\n}\n\n/**\n * Arrow indicator for AR model translatioon.\n * @category Controls-AR\n */\nclass ArrowIndicator {\n  private _arrows: THREE.Group[];\n  private _obj: THREE.Group;\n\n  /**\n   * {@link https://threejs.org/docs/index.html#api/en/objects/Group THREE.Group} object that contains arrows.\n   */\n  public get object() { return this._obj; }\n\n  /**\n   * Create new ArrowIndicator\n   * @param {ArrowIndicatorOption} [options={}] Options\n   */\n  constructor({\n    color = 0xffffff,\n  }: Partial<ArrowIndicatorOption> = {}) {\n    const bodyGeometry = new THREE.CylinderBufferGeometry(0.1, 0.1, 1);\n    const coneGeometry = new THREE.CylinderBufferGeometry(0, 0.5, 1, 30, 1);\n\n    bodyGeometry.translate(0, 0.5, 0);\n    coneGeometry.translate(0, 1.5, 0);\n\n    const body = new THREE.Mesh(bodyGeometry, new THREE.MeshBasicMaterial({ color }));\n    const cone = new THREE.Mesh(coneGeometry, new THREE.MeshBasicMaterial({ color }));\n    const arrow = new THREE.Group();\n\n    arrow.add(body);\n    arrow.add(cone);\n\n    this._arrows = [arrow];\n\n    this._obj = new THREE.Group();\n    this._obj.add(arrow);\n\n    range(3).forEach(idx => {\n      const copied = arrow.clone(true);\n      copied.rotateZ(Math.PI / 2 * (idx + 1));\n      this._obj.add(copied);\n      this._arrows.push(copied);\n    });\n\n    this.hide();\n  }\n\n  /**\n   * Show indicator\n   */\n  public show() {\n    this._obj.visible = true;\n  }\n\n  /**\n   * Hide indicator\n   */\n  public hide() {\n    this._obj.visible = false;\n  }\n\n  /**\n   * Change the center of the arrows to a given position\n   * @param position Position to set as center of the arrows\n   */\n  public updatePosition(position: THREE.Vector3) {\n    this._obj.position.copy(position);\n  }\n\n  /**\n   * Update the arrow's offset from the center\n   * @param offset Offset vector.\n   */\n  public updateOffset(offset: THREE.Vector3) {\n    this._arrows.forEach((arrow, idx) => {\n      const facingDirection = new THREE.Vector3(0, 1, 0).applyQuaternion(arrow.quaternion);\n      const facingOffset = facingDirection.multiply(offset);\n\n      arrow.position.copy(facingOffset);\n    });\n  }\n\n  /**\n   * Update arrow's scale\n   * @param scale Scale vector\n   */\n  public updateScale(scale: number) {\n    this._arrows.forEach(arrow => arrow.scale.setScalar(scale));\n  }\n\n  /**\n   * Update arrow's rotation.\n   * @param rotation Quaternion value to rotate arrows.\n   */\n  public updateRotation(rotation: THREE.Quaternion) {\n    this._obj.quaternion.copy(rotation);\n  }\n}\n\nexport default ArrowIndicator;\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nimport * as THREE from \"three\";\nimport ARControl from \"../common/ARControl\";\nimport ArrowIndicator, { ArrowIndicatorOption } from \"../ui/ArrowIndicator\";\nimport * as TOUCH from \"~/consts/touch\";\nimport { XRRenderContext, XRContext, XRInputs } from \"~/types/internal\";\n/**\n * Options for {@link ARTranslateControl}\n * @category Controls-AR\n * @interface\n * @property {ArrowIndicatorOption} arrow Options for {@link ArrowIndicator}\n */\nexport interface ARWallTranslateControlOption {\n  arrow: ArrowIndicatorOption;\n}\n\n/**\n * Model's translation(position) control for {@link ARWallControl}\n * @category Controls-AR\n */\nclass ARWallTranslateControl implements ARControl {\n  public readonly position = new THREE.Vector3();\n  public readonly wallPosition = new THREE.Vector3();\n  public readonly hitRotation = new THREE.Quaternion();\n  // Global Y guaranteed rotation matrix\n  public readonly wallRotation = new THREE.Quaternion();\n  private _arrowIndicator: ArrowIndicator;\n\n  // Options\n\n  // Internal states\n  private _dragPlane = new THREE.Plane();\n  private _enabled = true;\n  private _active = false;\n  private _initialPos = new THREE.Vector2();\n\n  /**\n   * Whether this control is enabled or not\n   * @readonly\n   */\n  public get enabled() { return this._enabled; }\n\n  /**\n   * Create new instance of ARTranslateControl\n   * @param {ARWallTranslateControlOption} [options={}] Options\n   */\n  constructor(options: Partial<ARWallTranslateControlOption> = {}) {\n    this._arrowIndicator = new ArrowIndicator(options.arrow);\n  }\n\n  public initWallTransform({ hitPosition, hitRotation, modelPosition, wallRotation }: {\n    hitPosition: THREE.Vector3,\n    hitRotation: THREE.Quaternion,\n    modelPosition: THREE.Vector3,\n    wallRotation: THREE.Quaternion,\n  }) {\n    this.position.copy(modelPosition);\n    this.hitRotation.copy(hitRotation);\n    this.wallPosition.copy(hitPosition);\n    this.wallRotation.copy(wallRotation);\n\n    const wallNormal = new THREE.Vector3(0, 1, 0).applyQuaternion(wallRotation);\n\n    this._dragPlane.set(wallNormal, -wallNormal.dot(modelPosition));\n  }\n\n  public init({ view3d }: XRRenderContext) {\n    view3d.scene.add(this._arrowIndicator.object);\n  }\n\n  public destroy({ view3d }: XRContext) {\n    view3d.scene.remove(this._arrowIndicator.object);\n  }\n\n  /**\n   * Enable this control\n   */\n  public enable() {\n    this._enabled = true;\n  }\n\n  /**\n   * Disable this control\n   */\n  public disable() {\n    this._enabled = false;\n    this.deactivate();\n  }\n\n  public activate({ model }: XRRenderContext, gesture: TOUCH.GESTURE) {\n    if (!this._enabled) return;\n\n    this._active = true;\n\n    // Update arrows\n    const arrowIndicator = this._arrowIndicator;\n    const modelBbox = model.initialBbox;\n    modelBbox.min.multiply(model.scene.scale);\n    modelBbox.max.multiply(model.scene.scale);\n    modelBbox.translate(model.scene.position);\n\n    arrowIndicator.show();\n    arrowIndicator.updatePosition(modelBbox.getCenter(new THREE.Vector3()));\n    arrowIndicator.updateScale(model.size / 16);\n\n    const arrowPlaneRotation = model.scene.quaternion.clone();\n\n    arrowIndicator.updateRotation(arrowPlaneRotation);\n    arrowIndicator.updateOffset(new THREE.Vector3().subVectors(modelBbox.max, modelBbox.min).multiplyScalar(0.5));\n  }\n\n  public deactivate() {\n    this._active = false;\n    this._arrowIndicator.hide();\n  }\n\n  public setInitialPos(coords: THREE.Vector2[]) {\n    this._initialPos.copy(coords[0]);\n  }\n\n  public process({ view3d, model, frame, referenceSpace, xrCam }: XRRenderContext, { hitResults }: XRInputs) {\n    if (!hitResults || hitResults.length !== 1 || !this._active) return;\n\n    const dragPlane = this._dragPlane;\n\n    const modelRoot = model.scene;\n    const modelZOffset = -model.initialBbox.min.z * modelRoot.scale.z;\n\n    const camPos = new THREE.Vector3().setFromMatrixPosition(xrCam.matrixWorld);\n    const hitResult = hitResults[0];\n    const hitPose = hitResult.results[0] && hitResult.results[0].getPose(referenceSpace);\n\n    const isWallHit = hitPose && hitPose.transform.matrix[5] < 0.25;\n\n    if (!hitPose || !isWallHit) {\n      // Use previous drag plane if no hit plane is found\n      const targetRayPose = frame.getPose(hitResult.inputSource.targetRaySpace, view3d.renderer.threeRenderer.xr.getReferenceSpace());\n      const fingerDir = new THREE.Vector3().copy(targetRayPose.transform.position).sub(camPos).normalize();\n\n      const fingerRay = new THREE.Ray(camPos, fingerDir);\n      const intersection = fingerRay.intersectPlane(dragPlane, new THREE.Vector3());\n\n      if (intersection) {\n        this.wallPosition.copy(intersection.clone().sub(dragPlane.normal.clone().multiplyScalar(modelZOffset)));\n        this.position.copy(intersection);\n      }\n      return;\n    }\n\n    const hitMatrix = new THREE.Matrix4().fromArray(hitPose.transform.matrix);\n    const hitOrientation = new THREE.Quaternion().copy(hitPose.transform.orientation);\n    const hitPosition = new THREE.Vector3().setFromMatrixPosition(hitMatrix);\n    const worldYAxis = new THREE.Vector3(0, 1, 0);\n    /*\n     * ^ wallU\n     * |\n     * ⨀---> wallV\n     * wallNormal\n     */\n    const wallNormal = new THREE.Vector3(0, 1, 0).applyQuaternion(hitOrientation).normalize();\n    const wallU = new THREE.Vector3().crossVectors(worldYAxis, wallNormal);\n    const wallV = wallNormal.clone().applyAxisAngle(wallU, -Math.PI / 2);\n\n    // Reconstruct wall matrix with prev Y(normal) direction as Z axis\n    const wallMatrix = new THREE.Matrix4().makeBasis(wallU, wallV, wallNormal);\n    const modelPosition = hitPosition.clone().add(wallNormal.clone().multiplyScalar(modelZOffset));\n\n    // Update position\n    this.position.copy(modelPosition);\n    this.wallPosition.copy(hitPosition);\n\n    // Update rotation if it differs more than 10deg\n    const prevWallNormal = new THREE.Vector3(0, 1, 0).applyQuaternion(this.hitRotation).normalize();\n    if (Math.acos(Math.abs(prevWallNormal.dot(wallNormal))) >= Math.PI / 18) {\n      const prevWallRotation = this.wallRotation.clone();\n      const wallRotation = new THREE.Quaternion().setFromRotationMatrix(wallMatrix);\n      const rotationDiff = prevWallRotation.inverse().premultiply(wallRotation);\n\n      modelRoot.quaternion.premultiply(rotationDiff);\n      this.wallRotation.copy(wallRotation);\n      this.hitRotation.copy(hitOrientation);\n\n      this._arrowIndicator.updateRotation(modelRoot.quaternion);\n\n      // Update drag plane\n      dragPlane.set(wallNormal, -modelPosition.dot(wallNormal));\n    }\n  }\n\n  public update({ model }: XRRenderContext, delta: number) {\n    model.scene.position.copy(this.position);\n    this._arrowIndicator.updatePosition(this.position);\n    model.scene.updateMatrix();\n  }\n}\n\nexport default ARWallTranslateControl;\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nimport * as THREE from \"three\";\nimport ARWallTranslateControl, { ARWallTranslateControlOption } from \"./ARWallTranslateControl\";\nimport ARScaleControl, { ARScaleControlOption } from \"../common/ARScaleControl\";\nimport DeadzoneChecker, { DeadzoneCheckerOption } from \"../common/DeadzoneChecker\";\nimport ARSwirlControl, { ARSwirlControlOption } from \"../common/ARSwirlControl\";\nimport FloorIndicator, { FloorIndicatorOption } from \"../ui/FloorIndicator\";\nimport * as XR from \"~/consts/xr\";\nimport * as TOUCH from \"~/consts/touch\";\nimport { XRRenderContext, XRContext, XRInputs } from \"~/types/internal\";\n\n/**\n * Options for the {@link ARWallControl}\n * @category Controls-AR\n * @interface\n * @property {ARSwirlControlOptions} rotate Options for {@link ARSwirlControl}\n * @property {ARTranslateControlOption} translate Options for {@link ARWallTranslateControl}\n * @property {ARScaleControlOption} scale Options for {@link ARScaleControl}\n * @property {FloorIndicatorOption} floorIndicator Options for {@link FloorIndicator}\n * @property {DeadzoneCheckerOption} deadzone Options for {@link DeadzoneChecker}\n */\nexport interface ARWallControlOption {\n  rotate: ARSwirlControlOption;\n  translate: ARWallTranslateControlOption;\n  scale: ARScaleControlOption;\n  floorIndicator: FloorIndicatorOption;\n  deadzone: DeadzoneCheckerOption;\n}\n\n/**\n * AR control for {@link WallARSession}.\n * @category Controls-AR\n */\nclass ARWallControl {\n  private _enabled = true;\n  private _initialized = false;\n  private _modelHit = false;\n  private _hitTestSource: any = null;\n  private _deadzoneChecker: DeadzoneChecker;\n  private _rotateControl: ARSwirlControl;\n  private _translateControl: ARWallTranslateControl;\n  private _scaleControl: ARScaleControl;\n  private _floorIndicator: FloorIndicator;\n\n  /**\n   * Return whether this control is enabled or not\n   */\n  public get enabled() { return this._enabled; }\n  /**\n   * {@link ARRotateControl} in this control\n   */\n  public get rotate() { return this._rotateControl; }\n  /**\n   * {@link ARTranslateControl} in this control\n   */\n  public get translate() { return this._translateControl; }\n  /**\n   * {@link ARScaleControl} in this control\n   */\n  public get scale() { return this._scaleControl; }\n  public get controls() {\n    return [this._rotateControl, this._translateControl, this._scaleControl];\n  }\n\n  /**\n   * Create new instance of ARControl\n   * @param {ARFloorControlOption} options Options\n   */\n  constructor(options = {}) {\n    // TODO: bind options\n    this._rotateControl = new ARSwirlControl({\n      showIndicator: false,\n    });\n    this._translateControl = new ARWallTranslateControl();\n    this._scaleControl = new ARScaleControl();\n    this._floorIndicator = new FloorIndicator();\n    this._deadzoneChecker = new DeadzoneChecker();\n  }\n\n  public init(ctx: XRRenderContext, initialTransform: {\n    hitPosition: THREE.Vector3,\n    hitRotation: THREE.Quaternion,\n    wallRotation: THREE.Quaternion,\n    modelPosition: THREE.Vector3,\n  }) {\n    const { session, view3d, size } = ctx;\n\n    this.controls.forEach(control => control.init(ctx));\n    this._translateControl.initWallTransform(initialTransform);\n    this._deadzoneChecker.setAspect(size.height / size.width);\n\n    view3d.scene.add(this._floorIndicator.mesh);\n\n    this._initialized = true;\n\n    session.requestHitTestSourceForTransientInput({ profile: XR.INPUT_PROFILE.TOUCH })\n      .then((transientHitTestSource: any) => {\n        this._hitTestSource = transientHitTestSource;\n      });\n  }\n\n  /**\n   * Destroy this control and deactivate it\n   * @param view3d Instance of the {@link View3D}\n   */\n  public destroy(ctx: XRContext) {\n    if (!this._initialized) return;\n\n    if (this._hitTestSource) {\n      this._hitTestSource.cancel();\n      this._hitTestSource = null;\n    }\n\n    ctx.view3d.scene.remove(this._floorIndicator.mesh);\n\n    this.deactivate();\n    this.controls.forEach(control => control.destroy(ctx));\n\n    this._initialized = false;\n  }\n\n  public deactivate() {\n    this._modelHit = false;\n    this._deadzoneChecker.cleanup();\n    this.controls.forEach(control => control.deactivate());\n  }\n\n  /**\n   * Enable this control\n   */\n  public enable() {\n    this._enabled = true;\n  }\n\n  /**\n   * Disable this control\n   */\n  public disable() {\n    this._enabled = false;\n    this.deactivate();\n  }\n\n  public update(ctx: XRRenderContext) {\n    const { view3d, session, frame } = ctx;\n    const hitTestSource = this._hitTestSource;\n\n    if (!hitTestSource || !view3d.model) return;\n\n    const deadzoneChecker = this._deadzoneChecker;\n    const inputSources = session.inputSources;\n    const hitResults = frame.getHitTestResultsForTransientInput(hitTestSource);\n    const coords = this._hitResultToVector(hitResults);\n    const xrInputs = {\n      coords,\n      inputSources,\n      hitResults,\n    };\n\n    if (deadzoneChecker.inDeadzone) {\n      this._checkDeadzone(ctx, xrInputs);\n    } else {\n      this._processInput(ctx, xrInputs);\n    }\n    this._updateControls(ctx);\n  }\n\n  public onSelectStart = (ctx: XRRenderContext) => {\n    const { view3d, session, frame, referenceSpace, xrCam } = ctx;\n    const hitTestSource = this._hitTestSource;\n\n    if (!hitTestSource || !this._enabled) return;\n\n    const deadzoneChecker = this._deadzoneChecker;\n    const rotateControl = this._rotateControl;\n    const translateControl = this._translateControl;\n    const scaleControl = this._scaleControl;\n\n    // Update deadzone testing gestures\n    if (rotateControl.enabled) {\n      deadzoneChecker.addTestingGestures(TOUCH.GESTURE.ONE_FINGER);\n    }\n    if (translateControl.enabled) {\n      deadzoneChecker.addTestingGestures(TOUCH.GESTURE.ONE_FINGER);\n    }\n    if (scaleControl.enabled) {\n      deadzoneChecker.addTestingGestures(TOUCH.GESTURE.PINCH);\n    }\n\n    const hitResults = frame.getHitTestResultsForTransientInput(hitTestSource);\n    const coords = this._hitResultToVector(hitResults);\n    deadzoneChecker.applyScreenAspect(coords);\n    deadzoneChecker.setFirstInput(coords);\n\n    if (coords.length === 1) {\n      // Check finger is on the model\n      const modelBbox = view3d.model!.bbox;\n\n      const targetRayPose = frame.getPose(session.inputSources[0].targetRaySpace, referenceSpace);\n      const camPos = new THREE.Vector3().setFromMatrixPosition(xrCam.matrixWorld);\n\n      const fingerDir = new THREE.Vector3().copy(targetRayPose.transform.position).sub(camPos).normalize();\n      const fingerRay = new THREE.Ray(camPos, fingerDir);\n      const intersection = fingerRay.intersectBox(modelBbox, new THREE.Vector3());\n\n      if (intersection) {\n        // Touch point intersected with model\n        this._modelHit = true;\n      }\n    }\n\n    this._floorIndicator.show();\n  }\n\n  public onSelectEnd = () => {\n    this.deactivate();\n    this._floorIndicator.fadeout();\n  }\n\n  private _checkDeadzone(ctx: XRRenderContext, { coords }: XRInputs) {\n    const { model } = ctx;\n    const gesture = this._deadzoneChecker.check(coords.map(coord => coord.clone()));\n    const rotateControl = this._rotateControl;\n    const translateControl = this._translateControl;\n    const scaleControl = this._scaleControl;\n\n    if (gesture === TOUCH.GESTURE.NONE) return;\n\n    switch (gesture) {\n      case TOUCH.GESTURE.ONE_FINGER_HORIZONTAL:\n      case TOUCH.GESTURE.ONE_FINGER_VERTICAL:\n        if (this._modelHit) {\n          translateControl.activate(ctx, gesture);\n          translateControl.setInitialPos(coords);\n        } else {\n          rotateControl.activate(ctx, gesture);\n          rotateControl.updateAxis(new THREE.Vector3(0, 1, 0).applyQuaternion(translateControl.hitRotation));\n          rotateControl.updateRotation(model.scene.quaternion);\n          rotateControl.setInitialPos(coords);\n        }\n        break;\n      case TOUCH.GESTURE.PINCH:\n        scaleControl.activate(ctx, gesture);\n        scaleControl.setInitialPos(coords);\n        break;\n    }\n  }\n\n  private _processInput(ctx: XRRenderContext, inputs: XRInputs) {\n    this.controls.forEach(control => control.process(ctx, inputs));\n  }\n\n  private _updateControls(ctx: XRRenderContext) {\n    const { view3d, model, delta } = ctx;\n    const deltaMilisec = delta * 1000;\n\n    this.controls.forEach(control => control.update(ctx, deltaMilisec));\n    model.scene.updateMatrix();\n\n    const translateControl = this._translateControl;\n    const floorPosition = translateControl.wallPosition;\n    view3d.scene.update(model, {\n      floorPosition,\n      floorRotation: translateControl.hitRotation,\n    });\n\n    // Get a scaled bbox, which only has scale applied on it.\n    const scaleControl = this._scaleControl;\n    const scaledBbox = model.initialBbox;\n    scaledBbox.min.multiply(scaleControl.scale);\n    scaledBbox.max.multiply(scaleControl.scale);\n\n    const floorIndicator = this._floorIndicator;\n    const boundingSphere = scaledBbox.getBoundingSphere(new THREE.Sphere());\n    const rotX90 = new THREE.Quaternion().setFromEuler(new THREE.Euler(Math.PI / 2, 0, 0));\n    const floorRotation = model.scene.quaternion.clone().multiply(rotX90);\n\n    floorIndicator.update({\n      delta: deltaMilisec,\n      scale: boundingSphere.radius,\n      position: floorPosition,\n      rotation: floorRotation,\n    });\n  }\n\n  private _hitResultToVector(hitResults: any[]) {\n    return hitResults.map(input => {\n      return new THREE.Vector2().set(\n        input.inputSource.gamepad.axes[0],\n        -input.inputSource.gamepad.axes[1],\n      );\n    });\n  }\n}\n\nexport default ARWallControl;\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nimport * as THREE from \"three\";\nimport WebARSession, { WebARSessionOption } from \"./WebARSession\";\nimport HitTest from \"./features/HitTest\";\nimport ARWallControl, { ARWallControlOption } from \"~/controls/ar/wall/ARWallControl\";\nimport Animation from \"~/core/Animation\";\nimport { merge } from \"~/utils\";\nimport * as XR from \"~/consts/xr\";\nimport { XRRenderContext, XRContext } from \"~/types/internal\";\n\n/**\n * Options for {@link WallARSession}.\n * This type is intersection of {@link WebARSessionOption} and {@link ARWallControlOption}\n * @category XR\n * @interface\n * @extends WebARSessionOption\n * @extends ARWallControlOption\n */\ninterface WallARSessionOption extends WebARSessionOption, ARWallControlOption {}\n\n/**\n * AR session which places model on the wall\n * @category XR\n * @fires WebARSession#start\n * @fires WebARSession#end\n * @fires WebARSession#canPlace\n * @fires WebARSession#modelPlaced\n */\nclass WallARSession extends WebARSession {\n  private _options: Partial<WallARSessionOption>;\n  private _control: ARWallControl | null;\n  private _renderContext: XRRenderContext | null;\n  private _modelPlaced: boolean;\n  private _hitTest: HitTest;\n\n  /**\n   * {@link ARWallControl} instance of this session\n   * @type ARWallControl | null\n   */\n  public get control() { return this._control; }\n\n  /**\n   * Create new instance of WallARSession\n   * @param {WallARSessionOption} [options={}] Options\n   */\n  constructor(options: Partial<WallARSessionOption> = {}) {\n    super(options);\n\n    this._control = null;\n    this._renderContext = null;\n    this._modelPlaced = false;\n\n    this._hitTest = new HitTest();\n\n    this._features = merge(this._features, this._hitTest.features);\n    this._options = options;\n  }\n\n  public onStart = (ctx: XRContext) => {\n    const { view3d, session } = ctx;\n\n    super.onStart(ctx);\n\n    this._control = new ARWallControl(this._options);\n\n    view3d.scene.hide();\n    this._hitTest.init(session);\n  }\n\n  public onEnd = (ctx: XRContext) => {\n    const { view3d, session } = ctx;\n\n    super.onEnd(ctx);\n\n    this._renderContext = null;\n    this._modelPlaced = false;\n\n    session.removeEventListener(XR.EVENTS.SELECT_START, this._onSelectStart);\n    session.removeEventListener(XR.EVENTS.SELECT_END, this._onSelectEnd);\n\n    this._hitTest.destroy();\n    this._control!.destroy(ctx);\n    this._control = null;\n\n    view3d.scene.show();\n  }\n\n  protected _beforeRender = (ctx: XRRenderContext) => {\n    this._renderContext = ctx;\n    if (!this._modelPlaced) {\n      this._initModelPosition(ctx);\n    } else {\n      this._control!.update(ctx);\n    }\n  }\n\n  private _initModelPosition(ctx: XRRenderContext) {\n    const {view3d, frame, session} = ctx;\n    const model = view3d.model;\n    const hitTest = this._hitTest;\n\n    // Make sure the model is loaded\n    if (!hitTest.ready || !model) return;\n\n    const control = this._control!;\n    const referenceSpace = view3d.renderer.threeRenderer.xr.getReferenceSpace();\n    const hitTestResults = hitTest.getResults(frame);\n\n    if (hitTestResults.length <= 0) return;\n\n    const hit = hitTestResults[0];\n    const hitPose = hit.getPose(referenceSpace);\n    const hitMatrix = new THREE.Matrix4().fromArray(hitPose.transform.matrix);\n\n    // If transformed coord space's y axis is facing up or down, don't use it.\n    if (hitMatrix.elements[5] >= 0.25 || hitMatrix.elements[5] <= -0.25) return;\n\n    const modelRoot = model.scene;\n    const hitRotation = new THREE.Quaternion().copy(hitPose.transform.orientation);\n    const hitPosition = new THREE.Vector3().setFromMatrixPosition(hitMatrix);\n    const modelZOffset = -model.initialBbox.min.z * modelRoot.scale.z;\n    const modelPosition = hitPosition.clone().setZ(hitPosition.z + modelZOffset);\n\n    const worldYAxis = new THREE.Vector3(0, 1, 0);\n    /*\n     * ^ wallU\n     * |\n     * ⨀---> wallV\n     * wallNormal\n     */\n    const wallNormal = new THREE.Vector3(0, 1, 0).applyQuaternion(hitRotation).normalize();\n    const wallU = new THREE.Vector3().crossVectors(worldYAxis, wallNormal);\n    const wallV = wallNormal.clone().applyAxisAngle(wallU, -Math.PI / 2);\n\n    // Reconstruct wall matrix with prev Y(normal) direction as Z axis\n    const wallMatrix = new THREE.Matrix4().makeBasis(wallU, wallV, wallNormal);\n    const wallRotation = new THREE.Quaternion().setFromRotationMatrix(wallMatrix);\n    const modelRotation = model.scene.quaternion.clone()\n      .premultiply(wallRotation);\n\n    // Update rotation & position\n    modelRoot.quaternion.copy(modelRotation);\n    modelRoot.position.copy(modelPosition);\n    modelRoot.updateMatrix();\n\n    view3d.scene.update(model);\n    view3d.scene.show();\n\n    // Don't need it\n    hitTest.destroy();\n\n    session.addEventListener(XR.EVENTS.SELECT_START, this._onSelectStart);\n    session.addEventListener(XR.EVENTS.SELECT_END, this._onSelectEnd);\n\n    this._domOverlay?.hideLoading();\n    this._modelPlaced = true;\n\n    // Show scale up animation\n    const originalModelScale = model.scene.scale.clone();\n    const scaleUpAnimation = new Animation({ context: session });\n\n    scaleUpAnimation.on(\"progress\", evt => {\n      const newScale = originalModelScale.clone().multiplyScalar(evt.easedProgress);\n      model.scene.scale.copy(newScale);\n    });\n    scaleUpAnimation.on(\"finish\", () => {\n      model.scene.scale.copy(originalModelScale);\n      control.init(ctx, {\n        hitPosition,\n        hitRotation,\n        wallRotation,\n        modelPosition,\n      });\n    });\n    scaleUpAnimation.start();\n  }\n\n  private _onSelectStart = (e) => {\n    this._control!.onSelectStart({\n      ...this._renderContext!,\n      frame: e.frame,\n    });\n  }\n\n  private _onSelectEnd = () => {\n    this._control!.onSelectEnd();\n  }\n}\n\nexport default WallARSession;\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nimport * as THREE from \"three\";\nimport ARControl from \"./ARControl\";\nimport Motion from \"~/controls/Motion\";\nimport RotationIndicator from \"../ui/RotationIndicator\";\nimport * as DEFAULT from \"~/consts/default\";\nimport { XRRenderContext, XRContext, XRInputs } from \"~/types/internal\";\nimport * as TOUCH from \"~/consts/touch\";\n\nenum STATE {\n  WAITING,\n  ROTATE_HORIZONTAL,\n  ROTATE_VERTICAL,\n}\n\n/**\n * Options for {@link ARSwipeControl}\n * @category Controls-AR\n * @interface\n * @property {number} [scale=1] Scale(speed) factor of the rotation\n */\nexport interface ARSwipeControlOption {\n  scale: number;\n}\n\n/**\n * Two finger swipe control\n * @category Controls-AR\n */\nclass ARSwipeControl implements ARControl {\n  /**\n   * Current rotation value\n   */\n  public readonly rotation = new THREE.Quaternion();\n\n  // Options\n  private _userScale: number;\n\n  // Internal States\n  private _state = STATE.WAITING;\n  private _enabled = true;\n  private _active = false;\n\n  private _prevPos = new THREE.Vector2();\n  private _fromQuat = new THREE.Quaternion();\n  private _toQuat = new THREE.Quaternion();\n\n  private _horizontalAxis = new THREE.Vector3();\n  private _verticalAxis = new THREE.Vector3();\n\n  private _motion: Motion;\n  private _rotationIndicator: RotationIndicator;\n\n  /**\n   * Whether this control is enabled or not.\n   * @readonly\n   */\n  public get enabled() { return this._enabled; }\n  /**\n   * Scale(speed) factor of this control.\n   */\n  public get scale() { return this._userScale; }\n  public get horizontalAxis() { return this._horizontalAxis; }\n  public get verticalAxis() { return this._verticalAxis; }\n\n  public set scale(val: number) { this._userScale = val; }\n\n  /**\n   * Create new ARSwipeControl\n   * @param {ARSwipeControlOption} [options={}] Options\n   */\n  constructor({\n    scale = 1,\n  }: Partial<{\n    scale: number,\n  }> = {}) {\n    this._motion = new Motion({ range: DEFAULT.INFINITE_RANGE });\n    this._rotationIndicator = new RotationIndicator();\n    this._userScale = scale;\n  }\n\n  public init({ view3d }: XRRenderContext) {\n    const initialRotation = view3d.model!.scene.quaternion;\n    this.updateRotation(initialRotation);\n    view3d.scene.add(this._rotationIndicator.object);\n  }\n\n  public destroy({ view3d }: XRContext) {\n    view3d.scene.remove(this._rotationIndicator.object);\n  }\n\n  public updateRotation(rotation: THREE.Quaternion) {\n    this.rotation.copy(rotation);\n    this._fromQuat.copy(rotation);\n    this._toQuat.copy(rotation);\n  }\n\n  /**\n   * Enable this control\n   */\n  public enable() {\n    this._enabled = true;\n  }\n\n  /**\n   * Disable this control\n   */\n  public disable() {\n    this._enabled = false;\n  }\n\n  public updateAxis(horizontal: THREE.Vector3, vertical: THREE.Vector3) {\n    this._horizontalAxis.copy(horizontal);\n    this._verticalAxis.copy(vertical);\n  }\n\n  public activate({ view3d }: XRRenderContext, gesture: TOUCH.GESTURE) {\n    if (!this._enabled) return;\n\n    const model = view3d.model!;\n    const rotationIndicator = this._rotationIndicator;\n\n    this._active = true;\n    rotationIndicator.show();\n    rotationIndicator.updatePosition(model.bbox.getCenter(new THREE.Vector3()));\n    rotationIndicator.updateScale(model.size / 2);\n\n    if (gesture === TOUCH.GESTURE.TWO_FINGER_HORIZONTAL) {\n      rotationIndicator.updateRoation(\n        model.scene.quaternion.clone()\n          .multiply(new THREE.Quaternion().setFromEuler(new THREE.Euler(-Math.PI / 2, 0, 0))),\n      );\n      this._state = STATE.ROTATE_HORIZONTAL;\n    } else if (gesture === TOUCH.GESTURE.TWO_FINGER_VERTICAL) {\n      rotationIndicator.updateRoation(\n        model.scene.quaternion.clone()\n          .multiply(new THREE.Quaternion().setFromEuler(new THREE.Euler(0, Math.PI / 2, 0))),\n      );\n      this._state = STATE.ROTATE_VERTICAL;\n    }\n  }\n\n  public deactivate() {\n    this._active = false;\n    this._rotationIndicator.hide();\n    this._state = STATE.WAITING;\n  }\n\n  public setInitialPos(coords: THREE.Vector2[]) {\n    if (coords.length < 2) return;\n    this._prevPos.set(\n      (coords[0].x + coords[1].x) / 2,\n      (coords[0].y + coords[1].y) / 2,\n    );\n  }\n\n  public process(ctx: XRRenderContext, { coords }: XRInputs) {\n    if (!this._active || coords.length !== 2) return;\n\n    const state = this._state;\n    const prevPos = this._prevPos;\n    const motion = this._motion;\n\n    const middlePos = new THREE.Vector2(\n      (coords[0].x + coords[1].x) / 2,\n      (coords[0].y + coords[1].y) / 2,\n    );\n    const posDiff = new THREE.Vector2().subVectors(prevPos, middlePos);\n\n    const rotationAxis = state === STATE.ROTATE_HORIZONTAL\n      ? this._horizontalAxis\n      : this._verticalAxis;\n    const rotationAngle = state === STATE.ROTATE_HORIZONTAL\n      ? posDiff.x\n      : -posDiff.y;\n\n    const rotation = new THREE.Quaternion().setFromAxisAngle(rotationAxis, rotationAngle);\n    const interpolated = this._getInterpolatedQuaternion();\n\n    this._fromQuat.copy(interpolated);\n    this._toQuat.premultiply(rotation);\n\n    motion.reset(0);\n    motion.setEndDelta(1);\n\n    prevPos.copy(middlePos);\n  }\n\n  public update({ model }: XRRenderContext, deltaTime: number) {\n    const motion = this._motion;\n    motion.update(deltaTime);\n\n    const interpolated = this._getInterpolatedQuaternion();\n\n    this.rotation.copy(interpolated);\n    model.scene.quaternion.copy(this.rotation);\n  }\n\n  private _getInterpolatedQuaternion(): THREE.Quaternion {\n    const motion = this._motion;\n    const toEuler = this._toQuat;\n    const fromEuler = this._fromQuat;\n\n    const progress = motion.val;\n\n    return new THREE.Quaternion().copy(fromEuler).slerp(toEuler, progress);\n  }\n}\n\nexport default ARSwipeControl;\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nimport * as THREE from \"three\";\nimport ARSwirlControl, { ARSwirlControlOption } from \"../common/ARSwirlControl\";\nimport ARSwipeControl, { ARSwipeControlOption } from \"../common/ARSwipeControl\";\nimport { XRRenderContext, XRContext, XRInputs } from \"~/types/internal\";\nimport * as TOUCH from \"~/consts/touch\";\nimport ARControl from \"../common/ARControl\";\n\n/**\n * Options for {@link ARHoverRotateControl}\n * @category Controls-AR\n * @interface\n * @property {ARSwirlControlOption} swirl Options for {@link ARSwirlControl}\n * @property {ARSwipeControlOption} swipe Options for {@link ARSwipeControl}\n */\nexport interface ARHoverRotateControlOption {\n  swirl: ARSwirlControlOption;\n  swipe: ARSwipeControlOption;\n}\n\n/**\n * Model's yaw(local y-axis rotation) controller which works on AR(WebXR) mode.\n * @category Controls-AR\n */\nclass ARHoverRotateControl implements ARControl {\n  /**\n   * Current rotation value\n   */\n  public readonly rotation = new THREE.Quaternion();\n\n  // Internal States\n  private _zRotationControl: ARSwirlControl;\n  private _xyRotationControl: ARSwipeControl;\n  private _activatedControl: ARSwirlControl | ARSwipeControl | null;\n\n  /**\n   * Whether this control is enabled or not.\n   * This returns true when either one finger control or two finger control is enabled.\n   * @readonly\n   */\n  public get enabled() { return this._zRotationControl.enabled || this._xyRotationControl.enabled; }\n\n  /**\n   * {@link ARSwirlControl} of this control.\n   */\n  public get swirl() { return this._zRotationControl; }\n  /**\n   * {@link ARSwipeControl} of this control.\n   */\n  public get swipe() { return this._xyRotationControl; }\n\n  /**\n   * Create new instance of ARRotateControl\n   * @param {ARHoverRotateControlOption} options Options\n   */\n  constructor(options: Partial<ARHoverRotateControlOption> = {}) {\n    this._zRotationControl = new ARSwirlControl(options.swirl);\n    this._xyRotationControl = new ARSwipeControl(options.swipe);\n    this._activatedControl = null;\n  }\n\n  public init(ctx: XRRenderContext) {\n    const initialRotation = ctx.view3d.model!.scene.quaternion;\n\n    this.rotation.copy(initialRotation);\n    this._zRotationControl.init(ctx);\n    this._xyRotationControl.init(ctx);\n  }\n\n  public destroy(ctx: XRContext) {\n    this._zRotationControl.destroy(ctx);\n    this._xyRotationControl.destroy(ctx);\n  }\n\n  /**\n   * Enable this control\n   */\n  public enable() {\n    this._zRotationControl.enable();\n    this._xyRotationControl.enable();\n  }\n\n  /**\n   * Disable this control\n   */\n  public disable() {\n    this._zRotationControl.disable();\n    this._xyRotationControl.disable();\n  }\n\n  public activate(ctx: XRRenderContext, gesture: TOUCH.GESTURE) {\n    const zRotationControl = this._zRotationControl;\n    const xyRotationControl = this._xyRotationControl;\n\n    if (gesture & TOUCH.GESTURE.ONE_FINGER) {\n      zRotationControl.activate(ctx, gesture);\n      zRotationControl.updateRotation(this.rotation);\n      this._activatedControl = zRotationControl;\n    } else if (gesture & TOUCH.GESTURE.TWO_FINGER) {\n      xyRotationControl.activate(ctx, gesture);\n      xyRotationControl.updateRotation(this.rotation);\n      this._activatedControl = xyRotationControl;\n    }\n  }\n\n  public deactivate() {\n    this._zRotationControl.deactivate();\n    this._xyRotationControl.deactivate();\n  }\n\n  public process(ctx: XRRenderContext, inputs: XRInputs) {\n    this._zRotationControl.process(ctx, inputs);\n    this._xyRotationControl.process(ctx, inputs);\n  }\n\n  public setInitialPos(coords: THREE.Vector2[]) {\n    this._zRotationControl.setInitialPos(coords);\n    this._xyRotationControl.setInitialPos(coords);\n  }\n\n  public update(ctx: XRRenderContext, deltaTime: number) {\n    if (this._activatedControl) {\n      this._activatedControl.update(ctx, deltaTime);\n      this.rotation.copy(this._activatedControl.rotation);\n    }\n  }\n\n  public updateRotateAxis({ view3d, xrCam }: XRRenderContext) {\n    const model = view3d.model!;\n    const zRotateAxis = new THREE.Vector3();\n    const horizontalRotateAxis = new THREE.Vector3();\n    const verticalRotateAxis = new THREE.Vector3();\n\n    const cameraRotation = new THREE.Quaternion().setFromRotationMatrix(xrCam.matrixWorld);\n\n    const cameraBasis = [\n      new THREE.Vector3(1, 0, 0),\n      new THREE.Vector3(0, 1, 0),\n      new THREE.Vector3(0, 0, 1),\n    ].map(axis => axis.applyQuaternion(cameraRotation).normalize());\n\n    const modelBasis = [\n      new THREE.Vector3(1, 0, 0),\n      new THREE.Vector3(0, 1, 0),\n      new THREE.Vector3(0, 0, 1),\n    ].map(axis => axis.applyQuaternion(model.scene.quaternion));\n\n    // Always use z-rotation\n    zRotateAxis.copy(modelBasis[2]);\n    // Use more appropriate one between x/y axis\n    horizontalRotateAxis.copy(modelBasis[1]);\n    verticalRotateAxis.copy(modelBasis[0]);\n\n    // If it's facing other direction, negate it to face correct direction\n    if (zRotateAxis.dot(cameraBasis[2]) < 0) {\n      zRotateAxis.negate();\n    }\n    if (horizontalRotateAxis.dot(cameraBasis[1]) > 0) {\n      horizontalRotateAxis.negate();\n    }\n    if (verticalRotateAxis.dot(cameraBasis[0]) > 0) {\n      verticalRotateAxis.negate();\n    }\n\n    this._zRotationControl.updateAxis(zRotateAxis);\n    this._xyRotationControl.updateAxis(horizontalRotateAxis, verticalRotateAxis);\n  }\n}\n\nexport default ARHoverRotateControl;\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nimport * as THREE from \"three\";\nimport ARControl from \"../common/ARControl\";\nimport ArrowIndicator, { ArrowIndicatorOption } from \"../ui/ArrowIndicator\";\nimport { getPrimaryAxisIndex } from \"~/utils\";\nimport * as TOUCH from \"~/consts/touch\";\nimport { XRRenderContext, XRContext, XRInputs } from \"~/types/internal\";\n\n/**\n * Options for {@link ARHoverTranslateControl}\n * @category Controls-AR\n * @interface\n * @property {ArrowIndicatorOption} arrow Options for {@link ArrowIndicator}\n */\nexport interface ARHoverTranslateControlOption {\n  arrow: ArrowIndicatorOption;\n}\n\n/**\n * Model's translation(position) control for {@link ARHoverControl}\n * @category Controls-AR\n */\nclass ARHoverTranslateControl implements ARControl {\n  // Internal states\n  private _position = new THREE.Vector3();\n  private _dragPlane = new THREE.Plane();\n  private _enabled = true;\n  private _active = false;\n  private _initialPos = new THREE.Vector2();\n  private _arrowIndicator: ArrowIndicator;\n\n  public get enabled() { return this._enabled; }\n  public get position() { return this._position.clone(); }\n\n  /**\n   * Create new instance of ARTranslateControl\n   * @param {ARHoverTranslateControlOption} [options={}] Options\n   */\n  constructor(options: Partial<ARHoverTranslateControlOption> = {}) {\n    this._arrowIndicator = new ArrowIndicator(options.arrow);\n  }\n\n  public init({ view3d }: XRRenderContext) {\n    this._position.copy(view3d.model!.scene.position);\n    view3d.scene.add(this._arrowIndicator.object);\n  }\n\n  public destroy({ view3d }: XRContext) {\n    view3d.scene.remove(this._arrowIndicator.object);\n  }\n\n  /**\n   * Enable this control\n   */\n  public enable() {\n    this._enabled = true;\n  }\n\n  /**\n   * Disable this control\n   */\n  public disable() {\n    this._enabled = false;\n    this.deactivate();\n  }\n\n  public activate({ model, xrCam }: XRRenderContext, gesture: TOUCH.GESTURE) {\n    if (!this._enabled) return;\n\n    const modelPos = model.scene.position;\n    const camPos = new THREE.Vector3().setFromMatrixPosition(xrCam.matrixWorld);\n\n    const modelBasis = [new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3()];\n    model.scene.matrixWorld.extractBasis(modelBasis[0], modelBasis[1], modelBasis[2]);\n    modelBasis.forEach(axes => axes.normalize());\n\n    const camToModelDir = new THREE.Vector3().subVectors(modelPos, camPos).clone().normalize();\n    const primaryAxisIdx = getPrimaryAxisIndex(modelBasis, camToModelDir);\n    const primaryAxis = modelBasis[primaryAxisIdx];\n\n    // If axes is facing the opposite of camera, negate it\n    if (primaryAxis.dot(camToModelDir) < 0) {\n      primaryAxis.negate();\n    }\n\n    const originToDragPlane = new THREE.Plane(primaryAxis, 0).distanceToPoint(modelPos);\n    this._dragPlane.set(primaryAxis, -originToDragPlane);\n\n    this._active = true;\n\n    // Update arrows\n    const arrowIndicator = this._arrowIndicator;\n    const modelBbox = model.initialBbox;\n    modelBbox.min.multiply(model.scene.scale);\n    modelBbox.max.multiply(model.scene.scale);\n    modelBbox.translate(modelPos);\n\n    arrowIndicator.show();\n    arrowIndicator.updatePosition(modelBbox.getCenter(new THREE.Vector3()));\n    arrowIndicator.updateScale(model.size / 16);\n\n    const arrowPlaneRotation = model.scene.quaternion.clone();\n    if (primaryAxisIdx === 0) {\n      arrowPlaneRotation.multiply(new THREE.Quaternion().setFromEuler(new THREE.Euler(0, Math.PI / 2, 0)));\n    } else if (primaryAxisIdx === 1) {\n      arrowPlaneRotation.multiply(new THREE.Quaternion().setFromEuler(new THREE.Euler(Math.PI / 2, 0, 0)));\n    }\n\n    arrowIndicator.updateRotation(arrowPlaneRotation);\n    arrowIndicator.updateOffset(new THREE.Vector3().subVectors(modelBbox.max, modelBbox.min).multiplyScalar(0.5));\n  }\n\n  public deactivate() {\n    this._active = false;\n    this._arrowIndicator.hide();\n  }\n\n  public setInitialPos(coords: THREE.Vector2[]) {\n    this._initialPos.copy(coords[0]);\n  }\n\n  public process({ view3d, frame, referenceSpace, xrCam }: XRRenderContext, { inputSources }: XRInputs) {\n    if (inputSources.length !== 1 || !this._active) return;\n\n    const inputSource = inputSources[0];\n    const dragPlane = this._dragPlane;\n\n    const targetRayPose = frame.getPose(inputSource.targetRaySpace, referenceSpace);\n    const camPos = new THREE.Vector3().setFromMatrixPosition(xrCam.matrixWorld);\n\n    const fingerDir = new THREE.Vector3().copy(targetRayPose.transform.position).sub(camPos).normalize();\n    const fingerRay = new THREE.Ray(camPos, fingerDir);\n    const intersection = fingerRay.intersectPlane(dragPlane, new THREE.Vector3());\n\n    if (intersection) {\n      this._position.copy(intersection);\n\n      // Update arrow position. As position is not a center of model, we should apply offset from it\n      const model = view3d.model!;\n      const centerYOffset = model.initialBbox.getCenter(new THREE.Vector3()).multiply(model.scene.scale).y;\n      const modelLocalYDir = new THREE.Vector3().applyQuaternion(model.scene.quaternion);\n      const newCenter = intersection.add(modelLocalYDir.multiplyScalar(centerYOffset));\n\n      this._arrowIndicator.updatePosition(newCenter);\n    }\n  }\n\n  public update({ model }: XRRenderContext, delta: number) {\n    model.scene.position.copy(this._position);\n  }\n}\n\nexport default ARHoverTranslateControl;\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nimport * as THREE from \"three\";\nimport ARHoverRotateControl, { ARHoverRotateControlOption } from \"./ARHoverRotateControl\";\nimport ARHoverTranslateControl, { ARHoverTranslateControlOption } from \"./ARHoverTranslateControl\";\nimport ARScaleControl, { ARScaleControlOption } from \"../common/ARScaleControl\";\nimport DeadzoneChecker from \"../common/DeadzoneChecker\";\nimport * as TOUCH from \"~/consts/touch\";\nimport { XRRenderContext, XRContext } from \"~/types/internal\";\n\n/**\n * Options for the {@link ARHoverControl}\n * @category Controls-AR\n * @interface\n * @property {ARHoverRotateControlOption} rotate Options for {@link ARHoverRotateControl}\n * @property {ARHoverTranslateControlOption} translate Options for {@link ARHoverTranslateControl}\n * @property {ARScaleControlOption} scale Options for {@link ARScaleControl}\n * @property {DeadzoneCheckerOption} deadzone Options for {@link DeadzoneChecker}\n */\nexport interface ARHoverControlOption {\n  rotate: ARHoverRotateControlOption;\n  translate: ARHoverTranslateControlOption;\n  scale: ARScaleControlOption;\n}\n\n/**\n * AR control for {@link HoverARSession}\n * @category Controls-AR\n */\nclass ARHoverControl {\n  private _enabled = true;\n  private _initialized = false;\n  private _modelHit = false;\n  private _deadzoneChecker: DeadzoneChecker;\n  private _rotateControl: ARHoverRotateControl;\n  private _translateControl: ARHoverTranslateControl;\n  private _scaleControl: ARScaleControl;\n\n  /**\n   * Return whether this control is enabled or not\n   */\n  public get enabled() { return this._enabled; }\n  /**\n   * {@link ARRotateControl} in this control\n   */\n  public get rotate() { return this._rotateControl; }\n  /**\n   * {@link ARTranslateControl} in this control\n   */\n  public get translate() { return this._translateControl; }\n  /**\n   * {@link ARScaleControl} in this control\n   */\n  public get scale() { return this._scaleControl; }\n  public get controls() {\n    return [this._rotateControl, this._translateControl, this._scaleControl];\n  }\n\n  /**\n   * Create new instance of ARHoverControl\n   * @param {ARHoverControlOption} options Options\n   */\n  constructor(options: Partial<ARHoverControlOption> = {}) {\n    this._rotateControl = new ARHoverRotateControl(options.rotate);\n    this._translateControl = new ARHoverTranslateControl(options.translate);\n    this._scaleControl = new ARScaleControl(options.scale);\n    this._deadzoneChecker = new DeadzoneChecker();\n  }\n\n  public init(ctx: XRRenderContext) {\n    const { size } = ctx;\n\n    this.controls.forEach(control => control.init(ctx));\n    this._deadzoneChecker.setAspect(size.height / size.width);\n\n    this._initialized = true;\n  }\n\n  /**\n   * Destroy this control and deactivate it\n   * @param view3d Instance of the {@link View3D}\n   */\n  public destroy(ctx: XRContext) {\n    if (!this._initialized) return;\n\n    this.deactivate();\n    this.controls.forEach(control => control.destroy(ctx));\n\n    this._initialized = false;\n  }\n\n  public deactivate() {\n    this._modelHit = false;\n    this._deadzoneChecker.cleanup();\n    this.controls.forEach(control => control.deactivate());\n  }\n\n  /**\n   * Enable this control\n   */\n  public enable() {\n    this._enabled = true;\n  }\n\n  /**\n   * Disable this control\n   */\n  public disable() {\n    this._enabled = false;\n    this.deactivate();\n  }\n\n  public update(ctx: XRRenderContext) {\n    const { session } = ctx;\n\n    if (!this._initialized) return;\n\n    const deadzoneChecker = this._deadzoneChecker;\n    const inputSources = session.inputSources;\n\n    if (deadzoneChecker.inDeadzone) {\n      this._checkDeadzone(ctx, inputSources);\n    } else {\n      this._processInput(ctx, inputSources);\n    }\n    this._updateControls(ctx);\n  }\n\n  public onSelectStart = (ctx: XRRenderContext) => {\n    const { view3d, session, frame, referenceSpace, xrCam } = ctx;\n    if (!this._enabled) return;\n\n    const deadzoneChecker = this._deadzoneChecker;\n    const rotateControl = this._rotateControl;\n    const translateControl = this._translateControl;\n    const scaleControl = this._scaleControl;\n\n    // Update rotation axis\n    if (rotateControl.enabled) {\n      rotateControl.updateRotateAxis(ctx);\n    }\n\n    // Update deadzone testing gestures\n    if (rotateControl.swirl.enabled) {\n      deadzoneChecker.addTestingGestures(TOUCH.GESTURE.ONE_FINGER);\n    }\n    if (rotateControl.swipe.enabled) {\n      deadzoneChecker.addTestingGestures(TOUCH.GESTURE.TWO_FINGER);\n    }\n    if (translateControl.enabled) {\n      deadzoneChecker.addTestingGestures(TOUCH.GESTURE.ONE_FINGER);\n    }\n    if (scaleControl.enabled) {\n      deadzoneChecker.addTestingGestures(TOUCH.GESTURE.PINCH);\n    }\n\n    const coords = this._inputSourceToVector(session.inputSources);\n    deadzoneChecker.applyScreenAspect(coords);\n    deadzoneChecker.setFirstInput(coords);\n\n    if (coords.length === 1) {\n      // Check finger is on the model\n      const modelBbox = view3d.model!.bbox;\n\n      const targetRayPose = frame.getPose(session.inputSources[0].targetRaySpace, referenceSpace);\n      const camPos = new THREE.Vector3().setFromMatrixPosition(xrCam.matrixWorld);\n\n      const fingerDir = new THREE.Vector3().copy(targetRayPose.transform.position).sub(camPos).normalize();\n      const fingerRay = new THREE.Ray(camPos, fingerDir);\n      const intersection = fingerRay.intersectBox(modelBbox, new THREE.Vector3());\n\n      if (intersection) {\n        // Touch point intersected with model\n        this._modelHit = true;\n      }\n    }\n  }\n\n  public onSelectEnd = () => {\n    this.deactivate();\n  }\n\n  private _checkDeadzone(ctx: XRRenderContext, inputSources: any[]) {\n    const coords = this._inputSourceToVector(inputSources);\n    const gesture = this._deadzoneChecker.check(coords.map(coord => coord.clone()));\n    const rotateControl = this._rotateControl;\n    const translateControl = this._translateControl;\n    const scaleControl = this._scaleControl;\n\n    if (gesture === TOUCH.GESTURE.NONE) return;\n\n    switch (gesture) {\n      case TOUCH.GESTURE.ONE_FINGER_HORIZONTAL:\n      case TOUCH.GESTURE.ONE_FINGER_VERTICAL:\n        if (this._modelHit) {\n          translateControl.activate(ctx, gesture);\n          translateControl.setInitialPos(coords);\n        } else {\n          rotateControl.activate(ctx, gesture);\n          rotateControl.setInitialPos(coords);\n        }\n        break;\n      case TOUCH.GESTURE.TWO_FINGER_HORIZONTAL:\n      case TOUCH.GESTURE.TWO_FINGER_VERTICAL:\n        rotateControl.activate(ctx, gesture);\n        rotateControl.setInitialPos(coords);\n        break;\n      case TOUCH.GESTURE.PINCH:\n        scaleControl.activate(ctx, gesture);\n        scaleControl.setInitialPos(coords);\n        break;\n    }\n  }\n\n  private _processInput(ctx: XRRenderContext, inputSources: any[]) {\n    const coords = this._inputSourceToVector(inputSources);\n\n    this.controls.forEach(control => control.process(ctx, { coords, inputSources }));\n  }\n\n  private _updateControls(ctx: XRRenderContext) {\n    const { view3d, model, delta } = ctx;\n    const deltaMilisec = delta * 1000;\n\n    this.controls.forEach(control => control.update(ctx, deltaMilisec));\n\n    model.scene.updateMatrix();\n    view3d.scene.update(model);\n  }\n\n  private _inputSourceToVector(inputSources: any[]) {\n    return Array.from(inputSources).map(inputSource => {\n      const axes = inputSource.gamepad.axes;\n      return new THREE.Vector2(axes[0], -axes[1]);\n    });\n  }\n}\n\nexport default ARHoverControl;\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nimport * as THREE from \"three\";\nimport WebARSession, { WebARSessionOption } from \"./WebARSession\";\nimport ARHoverControl, { ARHoverControlOption } from \"~/controls/ar/hover/ARHoverControl\";\nimport Animation from \"~/core/Animation\";\nimport * as XR from \"~/consts/xr\";\nimport { XRRenderContext, XRContext } from \"~/types/internal\";\nimport { getPrimaryAxisIndex, clamp } from \"~/utils\";\n\n/**\n * Options for {@link HoverARSession}.\n * This type is intersection of {@link WebARSessionOption} and {@link ARHoverControlOption}\n * @category XR\n * @interface\n * @extends WebARSessionOption\n * @extends ARHoverControlOption\n */\ninterface HoverARSessionOption extends WebARSessionOption, ARHoverControlOption {\n  initialDistance: number;\n}\n\n/**\n * WebXR based AR session which puts model at the space front of camera.\n * @category XR\n * @fires WebARSession#start\n * @fires WebARSession#end\n * @fires WebARSession#canPlace\n * @fires WebARSession#modelPlaced\n */\nclass HoverARSession extends WebARSession {\n  private _options: Partial<HoverARSessionOption>;\n  private _control: ARHoverControl | null;\n  private _renderContext: XRRenderContext | null;\n  private _modelPlaced: boolean;\n\n  /**\n   * {@link ARControl} instance of this session\n   * @type ARFloorControl | null\n   */\n  public get control() { return this._control; }\n\n  /**\n   * Create new instance of FloorARSession\n   * @param {HoverARSessionOption} options Options\n   */\n  constructor(options: Partial<HoverARSessionOption> = {}) {\n    super(options);\n\n    this._control = null;\n    this._renderContext = null;\n    this._modelPlaced = false;\n    this._options = options;\n  }\n\n  /**\n   * Place model on the current position\n   */\n  public placeModel() {\n    const ctx = this._renderContext;\n\n    // Not ready to place model yet\n    if (!ctx || !ctx.view3d.scene.visible || this._modelPlaced) return;\n\n    const { session, view3d } = ctx;\n    const modelRoot = view3d.model!.scene;\n    const control = this._control!;\n\n    session.addEventListener(XR.EVENTS.SELECT_START, this._onSelectStart);\n    session.addEventListener(XR.EVENTS.SELECT_END, this._onSelectEnd);\n\n    this._modelPlaced = true;\n    this.emit(\"modelPlaced\");\n\n    // Show scale up animation\n    const originalModelScale = modelRoot.scale.clone();\n    const scaleUpAnimation = new Animation({ context: session });\n\n    scaleUpAnimation.on(\"progress\", evt => {\n      const newScale = originalModelScale.clone().multiplyScalar(evt.easedProgress);\n      modelRoot.scale.copy(newScale);\n    });\n    scaleUpAnimation.on(\"finish\", () => {\n      modelRoot.scale.copy(originalModelScale);\n      control.init(ctx);\n    });\n    scaleUpAnimation.start();\n  }\n\n  public onStart = (ctx: XRContext) => {\n    const { view3d } = ctx;\n\n    super.onStart(ctx);\n\n    this._control = new ARHoverControl(this._options);\n\n    view3d.scene.hide();\n  }\n\n  public onEnd = (ctx: XRContext) => {\n    const { view3d, session } = ctx;\n\n    super.onEnd(ctx);\n\n    this._renderContext = null;\n    this._modelPlaced = false;\n\n    session.removeEventListener(XR.EVENTS.SELECT_START, this._onSelectStart);\n    session.removeEventListener(XR.EVENTS.SELECT_END, this._onSelectEnd);\n\n    this._control!.destroy(ctx);\n    this._control = null;\n\n    view3d.scene.show();\n  }\n\n  protected _beforeRender = (ctx: XRRenderContext) => {\n    this._renderContext = ctx;\n\n    if (!this._modelPlaced) {\n      this._initModelPosition(ctx);\n    } else {\n      this._control!.update(ctx);\n    }\n  }\n\n  private _initModelPosition(ctx: XRRenderContext) {\n    const {view3d, xrCam} = ctx;\n    const model = view3d.model;\n\n    // Make sure the model exist\n    if (!model) return;\n\n    const modelRoot = model.scene;\n    const camPos = new THREE.Vector3().setFromMatrixPosition(xrCam.matrixWorld);\n    const camQuat = new THREE.Quaternion().setFromRotationMatrix(xrCam.matrixWorld);\n    const viewDir = new THREE.Vector3(0, 0, -1).applyQuaternion(camQuat);\n\n    const modelBbox = model.bbox;\n    const bboxDiff = new THREE.Vector3().subVectors(modelBbox.max, modelBbox.min);\n    const maxComponent = Math.max(bboxDiff.x, bboxDiff.y, bboxDiff.z);\n\n    // Reset rotation & update position\n    modelRoot.position.copy(camPos);\n    modelRoot.position.add(viewDir.multiplyScalar(clamp(maxComponent, 0.5, 3))); // Place at 1m from camera\n    modelRoot.lookAt(camPos.setY(modelRoot.position.y));\n    modelRoot.updateMatrix();\n\n    view3d.scene.update(model);\n\n    if (!view3d.scene.visible) {\n      view3d.scene.show();\n      this.emit(\"canPlace\");\n    }\n  }\n\n  private _onSelectStart = (e) => {\n    this._control!.onSelectStart({\n      ...this._renderContext!,\n      frame: e.frame,\n    });\n  }\n\n  private _onSelectEnd = () => {\n    this._control!.onSelectEnd();\n  }\n}\n\nexport default HoverARSession;\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nimport XRSession from \"./XRSession\";\nimport { IS_ANDROID } from \"~/consts/browser\";\nimport * as XR from \"~/consts/xr\";\n\n/**\n * AR session using Google's scene-viewer\n * @category XR\n * @see https://developers.google.com/ar/develop/java/scene-viewer\n */\nclass SceneViewerSession implements XRSession {\n  public readonly isWebXRSession = false;\n\n  /**\n   * Create new instance of SceneViewerSession\n   * @see https://developers.google.com/ar/develop/java/scene-viewer\n   * @param params Session params\n   * @param {string} [params.file] This URL specifies the glTF or glb file that should be loaded into Scene Viewer. This should be URL-escaped.\n   * @param {string} [params.browser_fallback_url] This is a Google Chrome feature supported only for web-based implementations. When the Google app com.google.android.googlequicksearchbox is not present on the device, this is the URL that Google Chrome navigates to.\n   * @param {string} [params.mode=\"ar_only\"] See {@link https://developers.google.com/ar/develop/java/scene-viewer} for available modes.\n   * @param {string} [params.title] A name for the model. If present, it will be displayed in the UI. The name will be truncated with ellipses after 60 characters.\n   * @param {string} [params.link] A URL for an external webpage. If present, a button will be surfaced in the UI that intents to this URL when clicked.\n   * @param {string} [params.sound] A URL to a looping audio track that is synchronized with the first animation embedded in a glTF file. It should be provided alongside a glTF with an animation of matching length. If present, the sound is looped after the model is loaded. This should be URL-escaped.\n   * @param {string} [params.resizable=true] When set to false, users will not be able to scale the model in the AR experience. Scaling works normally in the 3D experience.\n   */\n  constructor(public params: {\n    file: string,\n    browser_fallback_url?: string,\n    mode?: \"3d_preferred\" | \"3d_only\" | \"ar_preferred\" | \"ar_only\" | string,\n    title?: string,\n    link?: string,\n    sound?: string,\n    resizable?: \"true\" | \"false\" | boolean,\n    [key: string]: any,\n  }) {\n    if (!this.params.mode) {\n      // Default mode is \"ar_only\", which should use com.google.ar.core package\n      this.params.mode = \"ar_only\";\n    }\n  }\n\n  /**\n   * Return the availability of SceneViewerSession.\n   * Scene-viewer is available on all android devices with google ARCore installed.\n   * @returns {Promise} A Promise that resolves availability of this session(boolean).\n   */\n  public isAvailable() {\n    return Promise.resolve(IS_ANDROID);\n  }\n\n  /**\n   * Enter Scene-viewer AR session\n   */\n  public enter() {\n    const params = Object.assign({}, this.params);\n    const fallback = params.browser_fallback_url;\n    delete params.browser_fallback_url;\n\n    const resizable = params.resizable;\n    delete params.resizable;\n    if (resizable === true) {\n      params.resizable = \"true\";\n    } else if (resizable === false) {\n      params.resizable = \"false\";\n    } else if (resizable) {\n      params.resizable = resizable;\n    }\n\n    const queryString = Object.keys(params)\n      .filter(key => params[key] != null)\n      .map(key => `${key}=${params[key]}`).join(\"&\");\n\n    const intentURL = params.mode === \"ar_only\"\n      ? XR.SCENE_VIEWER.INTENT_AR_CORE(queryString, fallback)\n      : XR.SCENE_VIEWER.INTENT_SEARCHBOX(queryString, fallback || XR.SCENE_VIEWER.FALLBACK_DEFAULT(queryString));\n\n    const anchor = document.createElement(\"a\") as HTMLAnchorElement;\n    anchor.href = intentURL;\n    anchor.click();\n\n    return Promise.resolve();\n  }\n\n  public exit() {\n    // DO NOTHING\n  }\n}\n\nexport default SceneViewerSession;\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nimport XRSession from \"./XRSession\";\nimport { IS_IOS, IS_SAFARI } from \"~/consts/browser\";\nimport { QUICKLOOK_SUPPORTED } from \"~/consts/xr\";\n\n/**\n * AR Session using Apple AR Quick Look Viewer\n * @category XR\n * @see https://developer.apple.com/augmented-reality/quick-look/\n */\nclass QuickLookSession implements XRSession {\n  /**\n   * Whether it's webxr-based session or not\n   * @type false\n   */\n  public readonly isWebXRSession = false;\n\n  private _file: string;\n  private _allowsContentScaling: boolean;\n\n  /**\n   * Create new instance of QuickLookSession\n   * @param {object} [options] Quick Look options\n   * @param {string} [options.file] USDZ file's location URL.\n   * @param {boolean} [options.allowsContentScaling=true] Whether to allow content scaling.\n   */\n  constructor({\n    file,\n    allowsContentScaling = true,\n  }: {\n    file: string,\n    allowsContentScaling?: boolean,\n  }) {\n    this._file = file;\n    this._allowsContentScaling = allowsContentScaling;\n  }\n\n  /**\n   * Return the availability of QuickLookSession.\n   * QuickLook AR is available on iOS12+ on Safari & Chrome browser\n   * Note that iOS Chrome won't show up QuickLook AR when it's local dev environment\n   * @returns {Promise} A Promise that resolves availability of this session(boolean).\n   */\n  public isAvailable() {\n    // This can handle all WebKit based browsers including iOS Safari & iOS Chrome\n    return Promise.resolve(QUICKLOOK_SUPPORTED && IS_IOS && IS_SAFARI);\n  }\n\n  /**\n   * Enter QuickLook AR Session\n   */\n  public enter() {\n    const anchor = document.createElement(\"a\") as HTMLAnchorElement;\n    anchor.setAttribute(\"rel\", \"ar\");\n    anchor.appendChild(document.createElement(\"img\"));\n\n    const usdzURL = new URL(this._file, window.location.toString());\n    if (!this._allowsContentScaling) {\n      usdzURL.hash = \"allowsContentScaling=0\";\n    }\n\n    anchor.setAttribute(\"href\", usdzURL.toString());\n    anchor.click();\n\n    return Promise.resolve();\n  }\n\n  public exit() {\n    // DO NOTHING\n  }\n}\n\nexport default QuickLookSession;\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nimport XRSession from \"./XRSession\";\nimport WebARSession from \"./WebARSession\";\nimport FloorARSession from \"./FloorARSession\";\nimport WallARSession from \"./WallARSession\";\nimport HoverARSession from \"./HoverARSession\";\nimport SceneViewerSession from \"./SceneViewerSession\";\nimport QuickLookSession from \"./QuickLookSession\";\n\nexport {\n  XRSession,\n  WebARSession,\n  FloorARSession,\n  WallARSession,\n  HoverARSession,\n  SceneViewerSession,\n  QuickLookSession,\n};\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nimport * as THREE from \"three\";\nimport Model from \"~/core/Model\";\nimport View3DError from \"~/View3DError\";\nimport * as ERR from \"~/consts/error\";\n\n/**\n * Texture(image) model\n * @category Extra\n */\nclass TextureModel extends Model {\n  private _texture: THREE.Texture;\n  private _mesh: THREE.Mesh;\n\n  /**\n   * Texture that used for this model\n   * @see https://threejs.org/docs/index.html#api/en/textures/Texture\n   * @type THREE.Texture\n   */\n  public get texture() { return this._texture; }\n  /**\n   * Model's mesh object\n   * @see https://threejs.org/docs/index.html#api/en/objects/Mesh\n   * @type THREE.Mesh\n   */\n  public get mesh() { return this._mesh; }\n\n  /**\n   * Create new TextureModel\n   * @param {object} options Options\n   * @param {number} [options.width] Width of the model.\n   * @param {number} [options.height] Height of the model.\n   * @param {boolean} [options.billboard=false] When set to true, model will keep rotate to show its front face to camera. Only Y-axis rotation is considered.\n   * @throws {View3DError} `CODES.PROVIDE_WIDTH_OR_HEIGHT` When both width and height are not given.\n   */\n  constructor({\n    image,\n    width,\n    height,\n    billboard = false,\n  }: {\n    image: THREE.Texture | HTMLImageElement | HTMLCanvasElement | HTMLVideoElement;\n    width?: number;\n    height?: number;\n    billboard: boolean;\n  }) {\n    const texture = (image as THREE.Texture).isTexture\n      ? image as THREE.Texture\n      : new THREE.Texture(image as HTMLImageElement);\n    const aspect = texture.image.width / texture.image.height;\n    if (width == null && height == null) {\n      throw new View3DError(ERR.MESSAGES.PROVIDE_WIDTH_OR_HEIGHT, ERR.CODES.PROVIDE_WIDTH_OR_HEIGHT);\n    }\n    if (width == null) {\n      width = height! * aspect;\n    } else if (height == null) {\n      height = width! / aspect;\n    }\n    texture.encoding = THREE.sRGBEncoding;\n    const geometry = new THREE.PlaneGeometry(width, height);\n    const material = new THREE.MeshBasicMaterial({ map: texture, side: THREE.DoubleSide });\n    const mesh = new THREE.Mesh(geometry, material);\n\n    super({ scenes: [mesh] });\n\n    this._texture = texture;\n    this._mesh = mesh;\n\n    if (billboard) {\n      const root = mesh;\n      root.onBeforeRender = (renderer, scene, camera) => {\n        const pos = root.getWorldPosition(new THREE.Vector3());\n        const camPos = new THREE.Vector3().setFromMatrixPosition(camera.matrixWorld);\n\n        root.lookAt(camPos.setY(pos.y));\n        mesh.updateMatrix();\n      };\n    }\n  }\n}\n\nexport default TextureModel;\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nimport TextureModel from \"./TextureModel\";\n\nexport {\n  TextureModel,\n};\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\n/**\n * Constants that exported by View3D\n * @namespace Constants\n * @example\n * import View3D, { THREE } from \"@egjs/view3d\";\n */\n\n/**\n * This refers to a [three.js](https://github.com/mrdoob/three.js/) that View3D is using.\n * @memberof Constants\n * @name THREE\n * @see https://github.com/mrdoob/three.js/\n */\nimport * as THREE from \"three\";\n\nexport {\n  THREE,\n};\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nimport View3D from \"./View3D\";\nimport View3DError from \"./View3DError\";\nimport * as Core from \"./core\";\nimport * as Controls from \"./controls\";\nimport * as Loaders from \"./loaders\";\nimport * as Environments from \"./environments\";\nimport * as XR from \"./xr\";\nimport * as Extra from \"./extra\";\nimport * as Externals from \"./consts/external\";\nimport * as EASING from \"./consts/easing\";\nimport { CODES } from \"./consts/error\";\nimport { merge } from \"./utils\";\n\nmerge(View3D, Core);\nmerge(View3D, Environments);\nmerge(View3D, Controls);\nmerge(View3D, Loaders);\nmerge(View3D, XR);\nmerge(View3D, Extra);\nmerge(View3D, Externals);\n(View3D as any).View3DError = View3DError;\n(View3D as any).ERROR_CODES = CODES;\n(View3D as any).EASING = EASING;\nexport default View3D;\n"],"names":["_listenerMap","Map","eventName","callback","listenerMap","listeners","get","indexOf","push","set","delete","callbackIdx","splice","_i","event","forEach","canvas","_canvas","_renderer","THREE","alpha","antialias","preserveDrawingBuffer","xr","enabled","outputEncoding","_clock","enableShadow","Object","context","getSize","val","setSize","x","y","renderer","isPresenting","setPixelRatio","window","devicePixelRatio","offsetWidth","offsetHeight","scene","camera","render","root","threeCamera","start","setAnimationLoop","timestamp","frame","delta","_this","getDelta","stop","threeRenderer","shadowMap","type","STANDARD_MAPS","__extends","message","code","_super","setPrototypeOf","View3DError","prototype","name","Error","CODES","WRONG_TYPE","ELEMENT_NOT_FOUND","ELEMENT_NOT_CANVAS","WEBGL_NOT_SUPPORTED","ADD_CONTROL_FIRST","PROVIDE_WIDTH_OR_HEIGHT","MESSAGES","types","map","join","query","el","tagName","getElement","parent","targetEl","parentEl","document","queryResult","querySelector","ERROR","nodeType","Node","ELEMENT_NODE","getCanvas","test","range","end","Array","apply","undef","idx","toRadian","Math","PI","clamp","min","max","mix","a","b","t","circulate","size","offset","merge","target","srcs","source","keys","key","value","isArray","findIndex","list","index","_b","__values","length","itemIndex","getBoxPoints","box","clone","z","toPowerOfTwo","result","getPrimaryAxisIndex","basis","viewDir","primaryIdx","maxDot","axes","axesIdx","dotProduct","abs","dot","getRotationAngle","center","v1","v2","centerToV1","subVectors","normalize","centerToV2","deg","angle","compDeg","sign","rotationAngle","_root","_userObjects","_envObjects","_envs","userObjects","envObjects","add","visible","model","override","env","fit","resetModel","resetEnv","_removeChildsOf","background","environment","object","_a","envs","isObject3D","objects","remove","envIndex","envmap","texture","obj","traverse","child","isMesh","mesh","geometry","dispose","materials","material","mat","children","_camera","_controls","control","destroy","element","setElement","sync","enable","controls","controlIndex","removedControl","disable","syncToCamera","resize","deltaMiliSec","update","updatePosition","yaw","pitch","distance","pivot","Pose","SINE_WAVE","sin","EASE_OUT_CUBIC","pow","EASE_OUT_BOUNCE","n1","d1","MODEL_SIZE","EASING","ANIMATION_DURATION","ANIMATION_LOOP","ANIMATION_RANGE","CAMERA_POSE","INFINITE_RANGE","Infinity","PITCH_RANGE","DISTANCE_RANGE","MINIMUM_DISTANCE","MAXIMUM_DISTANCE","NULL_ELEMENT","DRACO_DECODER_URL","_c","duration","DEFAULT","_d","loop","_e","_f","easing","_duration","_loop","_range","_easing","_activated","reset","_val","_start","_end","_progress","deltaTime","prev","nextProgress","easedProgress","defaultVal","from","to","_motion","Motion","_from","_to","_enabled","motion","progress","lerp","_finishCallbacks","setEndDelta","_defaultPose","_threeCamera","_controller","Controller","_currentPose","_minDistance","_maxDistance","fov","updateProjectionMatrix","renderHeight","aspect","tan","controller","currentPose","defaultPose","Promise","resolve","resetControl_1","AnimationControl","onFinished","cam","newDefaultPose","_clampCurrentPose","pose","newCamPos","cos","position","copy","lookAt","_mixer","_clips","_actions","clips","mixer","clip","clipAction","action","play","timeScale","uncacheRoot","getRoot","view3d","_view3d","_sessions","_currentSession","all","session","isAvailable","results","some","xrSession","_enterSession","exit","sessionIdx","errors","sessions","reject","isSessionAvailable","enter","then","isWebXRSession","addEventListener","catch","e","EVENTS","MOUSE_DOWN","MOUSE_MOVE","MOUSE_UP","TOUCH_START","TOUCH_MOVE","TOUCH_END","WHEEL","RESIZE","CONTEXT_MENU","MOUSE_ENTER","MOUSE_LEAVE","MOUSE_BUTTON","newSize","_scene","animator","_animator","emit","Renderer","Camera","Scene","ModelAnimator","_xr","XRManager","_model","clear","removeEventListener","applySize","resetView","setClips","animations","stopAnimationLoop","renderLoop","View3D","EventEmitter","scenes","fixSkinnedBbox","castShadow","receiveShadow","_animations","_fixSkinnedBbox","_cachedLights","_cachedMeshes","_setInitialBbox","bboxCenter","_initialBbox","getCenter","negate","_moveInitialBboxToCenter","_originalSize","_getAllLights","_getAllMeshes","_getTransformedBbox","initialBbox","bboxSize","scale","setScalar","updateMatrix","meshes","multiply","updateMatrixWorld","_hasSkinnedMesh","_getSkeletonBbox","setFromObject","bbox","isSkinnedMesh","expandByObject","positions","attributes","skinIndicies","skinIndex","skinWeights","skinWeight","skeleton","boneMatricies","boneMatrices","finalMatrix","posIdx","identity","skinned","skinVertex","getX","getY","getZ","applyMatrix4","bindMatrix","weights","getW","indicies","weight","boneMatrix","fromArray","multiplyScalar","transformed","bindMatrixInverse","toArray","matrixWorld","expandByPoint","count","translate","lights","isLight","matrix","delay","delayOnMouseLeave","speed","_g","pauseOnHover","_h","canInterrupt","_j","disableOnInterrupt","evt","_canInterrupt","button","LEFT","RIGHT","_interrupted","_clearTimeout","_onMouseUp","_setUninterruptedAfterDelay","_delay","_pauseOnHover","_hovering","_delayOnMouseLeave","_speed","_disableOnInterrupt","_targetEl","_onMouseDown","_onTouchStart","_onTouchEnd","_onMouseEnter","_onMouseLeave","_onWheel","_interruptionTimer","setTimeout","clearTimeout","CURSOR","GRAB","GRABBING","useGrabCursor","scaleToElement","preventDefault","focus","_prevPos","clientX","clientY","_onMouseMove","_setCursor","prevPos","rotateDelta","sub","_userScale","_scaleToElement","_screenScale","_xMotion","_yMotion","touch","touches","cancelable","stopPropagation","_useGrabCursor","xMotion","yMotion","_onTouchMove","style","cursor","_getTouchesMiddle","_touchInitialized","middlePoint","screenSize","_screenSize","viewXDir","applyQuaternion","quaternion","viewYDir","screenScale","renderWidth","divide","_onContextMenu","deltaY","animation","_scale","_scaleModifier","prevTouchDistance","_prevTouchDistance","touchPoint1","pageX","pageY","touchPoint2","touchDiff","touchDistance","minDistance","maxDistance","rotate","_rotateControl","RotateControl","_translateControl","TranslateControl","_distanceControl","DistanceControl","color","intensity","direction","_light","light","shadow","mapSize","width","height","matrixAutoUpdate","_direction","boxSize","boxCenter","newPos","addVectors","shadowCam","near","far","left","right","top","bottom","bboxPoints","projectedPoints","project","screenBbox","setFromPoints","opacity","rotateX","floorPosition","floorRotation","modelPosition","localYAxis","modelBbox","modelBboxYOffset","modelFloor","rotX90","setFromEuler","shadowRotation","multiplyQuaternions","_loader","ThreeGLTFLoader","loader","setCrossOrigin","dracoLoader","DRACOLoader","setDecoderPath","setDRACOLoader","_dracoLoader","url","options","manager","load","gltf","_parseToModel","undefined","err","viewer","fileLoader","loadAsync","jsonRaw","json","JSON","parse","baseURL","extractUrlBase","modelOptions","cameraOptions","environmentOptions","setDefaultPose","distanceRange","setBackground","shadowPlane","ShadowPlane","addEnv","ambientOptions","ambient","lightOptions","light1","light2","light3","lightOption","lightDirection","directional","AutoDirectionalLight","isFirstLoad","loadFlags","LOD","fileName","lodIndex","glbURL","_resolveURL","path","higherLODLoaded","slice","loaded","display","onLoad","files","objectURLs","revokeURLs","URL","revokeObjectURL","gltfFile","find","file","filesMap","gltfURL","createObjectURL","setURLModifier","fileURL","fileNameResult","exec","has","blob","blobURL","data","Model","encoding","replace","skyboxTexture","_equirectToCubemap","urls","isEquirectangular","RGBELoader","image","fromEquirectangularTexture","QUICKLOOK_SUPPORTED","anchorEl","createElement","relList","supports","WEBXR_SUPPORTED","navigator","isSessionSupported","HIT_TEST_SUPPORTED","XRSession","requestHitTestSource","DOM_OVERLAY_SUPPORTED","XRDOMOverlayState","SESSION","AR","VR","REFERENCE_SPACE","LOCAL","LOCAL_FLOOR","VIEWER","SELECT_START","SELECT","SELECT_END","INPUT_PROFILE","TOUCH","FEATURES","HIT_TEST","requiredFeatures","DOM_OVERLAY","optionalFeatures","domOverlay","EMPTY_FEATURES","SCENE_VIEWER","INTENT_AR_CORE","params","fallback","INTENT_SEARCHBOX","FALLBACK_DEFAULT","_loadingEl","loadingEl","XR","visibility","userFeatures","maxModelSize","overlayRoot","forceOverlay","overlayEl","features","_domOverlay","DOMOverlay","_features","_maxModelSize","_forceOverlay","_session","requestSession","xrContext","originalMatrix","originalModelSize","originalBackground","arModelSize","originalSize","moveToOrigin","setReferenceSpaceType","setSession","onStart","onEnd","decompose","once","xrCam","getCamera","referenceSpace","getReferenceSpace","glLayer","renderState","baseLayer","framebufferWidth","framebufferHeight","renderContext","_beforeRender","getSession","ctx","showLoading","hideLoading","_source","cancel","requestReferenceSpace","space","getHitTestResults","IS_IOS","userAgent","platform","maxTouchPoints","IS_ANDROID","IS_SAFARI","Time","performance","Date","repeat","_getDeltaTime","_time","loopIncrease","floor","progressEvent","loopIdx","_loopCount","_repeat","loopIndex","_rafId","_ctx","requestAnimationFrame","_updateClock","_stopLoop","cancelAnimationFrame","lastTime","now","ringColor","axisColor","ringGeometry","ringMaterial","side","_ring","axisVertices","axisGeometry","axisMaterial","_axis","_obj","hide","rotation","showIndicator","_rotationIndicator","RotationIndicator","initialRotation","updateRotation","_fromQuat","_toQuat","gesture","_active","rotationIndicator","show","updateScale","updateRoation","axis","coords","coord","modelPos","ndcModelPos","setFromAxisAngle","interpolated","_getInterpolatedQuaternion","premultiply","toEuler","fromEuler","slerp","STATE","hoverAmplitude","hoverHeight","hoverPeriod","hoverEasing","bounceDuration","bounceEasing","WAITING","_hoverAmplitude","_hoverHeight","_hoverMotion","_bounceMotion","_modelPosition","_floorPosition","_hoverPosition","setY","deactivate","_dragPlane","_state","TRANSLATING","BOUNCING","hoverPosition","bounceMotion","hoveringAmount","_initialPos","hitResults","state","notActive","hitResult","prevFloorPosition","dragPlane","hitPose","getPose","isFloorHit","transform","camPos","setFromMatrixPosition","targetRayPose","inputSource","targetRaySpace","fingerDir","fingerRay","intersection","intersectPlane","hitMatrix","hitPosition","currentDragPlaneHeight","constant","hitDragPlaneHeight","camToHitDir","camToHitRay","hitOnDragPlane","hoverMotion","hoverOffset","modelYOffset","padding","font","getContext","maxText","measureText","maxWidth","actualBoundingBoxLeft","actualBoundingBoxRight","maxHeight","actualBoundingBoxAscent","actualBoundingBoxDescent","widthPowerOfTwo","planeWidth","_height","_texture","uiGeometry","transparent","_mesh","_font","_color","_padding","_offset","scalePercentage","toFixed","clearRect","centerX","centerY","textSize","halfWidth","halfHeight","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","lineWidth","fillStyle","fill","stroke","textAlign","textBaseline","strokeStyle","fillText","needsUpdate","ScaleUI","_ui","_initialScale","_scaleMultiplier","_prevCoordDistance","_updateUIPosition","uiPos","ringOpacity","dirIndicatorOpacity","fadeoutDuration","deg10","dimmedRingGeomtry","reticle","highlightedRingGeometry","ringVertices","vertices","trianglePart","firstY","midIndex","vec","vecIdx","offsetAmount","indicatorMat","makeRotationX","mergedGeometry","dimmedMaterial","highlightMaterial","_opacityRange","minOpacityMat","maxOpacityMat","opacityRange","GESTURE","NONE","_size","IN_DEADZONE","_aspect","inputs","fingerCount","_prevOneFingerPosInitialized","_prevOneFingerPos","_prevTwoFingerPosInitialized","_prevTwoFingerPos","_initialTwoFingerDistance","_lastFingerCount","gestures","_testingGestures","reduce","accumulated","_detectedGesture","input","setX","deadzone","testingGestures","lastFingerCount","OUT_OF_DEADZONE","applyScreenAspect","setFirstInput","diff","ONE_FINGER_HORIZONTAL","ONE_FINGER_VERTICAL","middle","TWO_FINGER_HORIZONTAL","TWO_FINGER_VERTICAL","PINCH","hitTestSource","_hitTestSource","deadzoneChecker","_deadzoneChecker","rotateControl","translateControl","scaleControl","_scaleControl","addTestingGestures","ONE_FINGER","getHitTestResultsForTransientInput","_hitResultToVector","intersectBox","_modelHit","_floorIndicator","fadeout","ARSwirlControl","ARFloorTranslateControl","ARScaleControl","FloorIndicator","floorIndicator","DeadzoneChecker","initialFloorPos","init","initFloorPosition","setAspect","_initialized","requestHitTestSourceForTransientInput","profile","transientHitTestSource","cleanup","inputSources","xrInputs","inDeadzone","_checkDeadzone","_processInput","_updateControls","check","activate","setInitialPos","process","deltaMilisec","modelRotation","scaledBbox","boundingSphere","getBoundingSphere","radius","gamepad","_control","ARFloorControl","_options","_hitTest","_renderContext","_modelPlaced","_onSelectStart","_onSelectEnd","_initModelPosition","onSelectStart","onSelectEnd","HitTest","hitTest","ready","hitTestResults","getResults","hit","elements","modelRoot","originalModelScale","scaleUpAnimation","Animation","on","newScale","WebARSession","bodyGeometry","coneGeometry","body","cone","arrow","_arrows","copied","rotateZ","facingDirection","facingOffset","_arrowIndicator","ArrowIndicator","hitRotation","wallRotation","wallPosition","wallNormal","arrowIndicator","arrowPlaneRotation","updateOffset","modelZOffset","isWallHit","normal","hitOrientation","orientation","worldYAxis","wallU","crossVectors","wallV","applyAxisAngle","wallMatrix","makeBasis","prevWallNormal","acos","prevWallRotation","setFromRotationMatrix","rotationDiff","inverse","ARWallTranslateControl","initialTransform","initWallTransform","updateAxis","ARWallControl","setZ","_horizontalAxis","_verticalAxis","horizontal","vertical","ROTATE_HORIZONTAL","ROTATE_VERTICAL","middlePos","posDiff","rotationAxis","_zRotationControl","swirl","_xyRotationControl","ARSwipeControl","swipe","_activatedControl","zRotationControl","xyRotationControl","TWO_FINGER","zRotateAxis","horizontalRotateAxis","verticalRotateAxis","cameraRotation","cameraBasis","modelBasis","_position","extractBasis","camToModelDir","primaryAxisIdx","primaryAxis","originToDragPlane","distanceToPoint","centerYOffset","modelLocalYDir","newCenter","updateRotateAxis","_inputSourceToVector","ARHoverRotateControl","ARHoverTranslateControl","ARHoverControl","camQuat","bboxDiff","maxComponent","mode","assign","browser_fallback_url","resizable","queryString","filter","intentURL","anchor","href","click","allowsContentScaling","_file","_allowsContentScaling","setAttribute","appendChild","usdzURL","location","toString","hash","billboard","isTexture","ERR","root_1","onBeforeRender","pos","getWorldPosition","Core","Environments","Controls","Loaders","Extra","Externals","ERROR_CODES"],"mappings":"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"}